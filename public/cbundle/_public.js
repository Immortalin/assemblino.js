var STATIC_COMPONENTS={"14831176":{"id":14831176,"name":"BasicCube","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":22,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":500,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":100,\"simulationQuality\":1,\"cameraPosition\":[-6.1422742549192115,19.331486633025413,-12.77636135018198],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[-0.081981278223244,0.39327318617231016,-0.5179167335771793],\"folder\":\"Basic Shapes\",\"dependencies\":[],\"pause\":false,\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public14831176.html\",\"embed\":\"<a href='http://assemblino.com/show/public14831176.html'><img src='http://assemblino.com/show/public14831176.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Part\"}","code":"/**\n * Similar to BasicPlatform, a versatile building block.\n * \n * connectorSet: defines the orientation of connectors\n * \n * connectorDistance: the distance between connectors. Connectors appear in odd\n *  quantities in one face. \n * \n * margin: the margin between connectors and the face\n */\n\nvar defaults = {\n  depth: 5,\n  height: 5,\n  width: 5,\n  mass: 0.1,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0x9999aa,\n  opacity: 1.0,\n  margin: 0.1,\n  connectorSet: ['mixed','female','male'],\n  connectorDistance: 5\n};\n  \nvar options = _.defaults(arguments[0] || {},  defaults);\n\nvar material = new THREE.MeshPhongMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity,\n  specular: 0x444444\n});\nmaterial = Physijs.createMaterial(material, options.friction, options.restitution);\n\nvar part = new Part();\nvar geo = new THREE.CubeGeometry(\n    options.width,\n  \toptions.height,\n    options.depth \n );\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass);\npart.add(mesh);\n\nvar distance = options.connectorDistance;\nvar axis = {x: 'width', y: 'height', z: 'depth'};\n['x','y','z'].map(function(dim){\n  var positions = [];\n  var quant = Math.floor(options[axis[dim]]/distance);\n  if (quant % 2 == 0) quant--;\n  var rest = options[axis[dim]] - quant*distance;\n  if (quant>0) for (var i = 0; i < quant; i++){\n    positions.push((i - quant/2)*distance + distance/2);\n  }\n  axis[dim + \"_positions\"] = positions;\n});\nvar connSet = options.connectorSet;\nif (connSet instanceof Array){\n\tconnSet = connSet[0];\n}\nvar antiConn;\nif (connSet==='male'){\n\tconnSet = 1;\n    antiConn = -1;\n} else if (connSet==='female'){\n\tconnSet = -1;\n    antiConn = 1;\n} else {\n\tconnSet = -1;\n    antiConn = -1;\n}\nvar combinations = [\n  {\n    //top surface\n    x: axis[\"x_positions\"],\n    y: [options.height/2 + options.margin],\n    z: axis[\"z_positions\"],\n    up: [0,connSet,0]\n  },\n  {\n    //bottom surface\n    x: axis[\"x_positions\"],\n    y: [-options.height/2 - options.margin],\n    z: axis[\"z_positions\"],\n    up: [0,antiConn,0]\n  },\n  {\n    //front surface\n    x: [options.width/2 + options.margin],\n    y: axis[\"y_positions\"],\n    z: axis[\"z_positions\"],\n    up: [connSet,0,0],\n    front: [0,0,1]\n  },\n  {\n    //back surface\n    x: [-options.width/2 - options.margin],\n    y: axis[\"y_positions\"],\n    z: axis[\"z_positions\"],\n    up: [antiConn,0,0],\n    front: [0,0,1]\n  },\n  {\n    //left surface\n    x: axis[\"x_positions\"],\n    y: axis[\"y_positions\"],\n    z: [options.depth/2 + options.margin],\n    up: [0,0,connSet]\n  },\n  {\n    //right surface\n    x: axis[\"x_positions\"],\n    y: axis[\"y_positions\"],\n    z: [-options.depth/2 - options.margin],\n    up: [0,0,antiConn]\n  }\n];\n\ncombinations.map(function(comb){\n  for (var i = 0; i < comb.x.length; i++){\n    for (var j = 0; j < comb.y.length; j++){\n      for (var k = 0; k < comb.z.length; k++){\n        var connector = new Connector({\n  \t\t\tbase: [comb.x[i], comb.y[j], comb.z[k]],\n  \t\t\tup: comb.up,\n  \t\t\tfront: comb.front || [1,0,0],\n  \t\t\tprefer: 'fix'\n\t\t});\n\t\tpart.add(connector);\n      }\n    }\n  }\n});\npart.mesh.position.y = options.height/2;\npart.setOptions(options);\n\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376409991595},"15240799":{"id":15240799,"name":"AuxPiston1","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":44,\"codeWrapperWidth\":44,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[14.49413902810165,10.161372637849608,-7.569689009905418],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicRectangularTube\"],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"var options = arguments[0] || {};\n_.defaults (options,{\n  width: 1,\n  length: 10,\n  margin: 1,\n  mass: 0.1,\n  color: 0x565677,\n  connectorRadius: 0.5,\n  opacity: 1.0\n});\nvar part = OBJECTS.BasicRectangularTube({\n  length: options.length,\n  outerWidth: options.width,\n  innerWidth: 0,\n  outerHeight: options.width,\n  innerHeight: 0,\n  mass: options.mass,\n  color: options.color,\n  opacity: options.opacity\n});\n//the center connector\nvar conOptions = {\n  name: 'middle',\n  base: [0,0,0],\n  up: [1,0,0],\n  front: [0,1,0],\n  radius: options.connectorRadius,\n  color: 0x55aaaa,\n  touchable: false\n};\n\nvar con = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.name = 'front';\nconOptions.base[0] = options.length * 2 + options.margin;\ncon = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.name = 'back';\nconOptions.base[0] = -options.length * 2 - options.margin;\ncon = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.name = 'handler';\nconOptions.prefer ='hinge';\ndelete conOptions.color;\ndelete conOptions.touchable;\nconOptions.base[0] = options.length/2 + options.margin;\ncon = new Connector(_.clone(conOptions));\npart.add(con);\n\npart.mesh.position.y += options.width/2;\npart.setSettings(options);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376656973327},"15242277":{"id":15242277,"name":"AuxCase1","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":71,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-13.94265163834874,11.534198048086449,-14.780731933609669],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[-0.48969092907098716,0.11021646993420905,-0.653329793701378],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicRectangularTube\"],\"pause\":false,\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/**\n * This part was designed at a early stage of development. It is used\n * to make linear motors.\n */ \nvar options = arguments[0] || {};\n_.defaults (options,{\n  width: 2,\n  length: 10,\n  thickness: 0.5,\n  margin: 0.5,\n  mass: 0.1,\n  color: 0x555555,\n  connectorRadius: 0.5,\n  opacity: 1.0,\n});\nvar part = OBJECTS.BasicRectangularTube({\n  length: options.length,\n  outerWidth: options.width,\n  innerWidth: options.width-options.thickness*2,\n  outerHeight: options.width,\n  innerHeight: options.width-options.thickness*2,\n  mass: options.mass,\n  color: options.color,\n  opacity: options.opacity\n});\nvar conOptions = {\n  name: 'middle',\n  base: [0,options.width/2-options.thickness/2,0],\n  up: [1,0,0],\n  front: [0,1,0],\n  radius: options.connectorRadius,\n  color: 0x55aaaa,\n  touchable: false\n};\nvar con = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.name = 'back';\nconOptions.base[0] = -options.length * 2 - options.margin;\ncon = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.name = 'front';\nconOptions.base[0] = options.length * 2 + options.margin;\ncon = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.name = 'handle';\nconOptions.base[0] = -options.length/2 - options.margin;\ndelete conOptions.color;\ndelete conOptions.touchable;\ncon = new Connector(_.clone(conOptions));\npart.add(con);\n\npart.mesh.position.y += options.width/2;\npart.setSettings(options);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376656958088},"15245063":{"id":15245063,"name":"BasicLinearX","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[33.554527697955585,13.873578773685066,14.383501910910695],\"cameraRotation\":[0.8622957527934496,0.19563592407353342,0.22481403042067005],\"cameraTarget\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[\"AuxCase1\",\"BasicRectangularTube\",\"AuxPiston1\"],\"pause\":false,\"autoStart\":true,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"https://assemblino.com/show/public15245063.html\",\"embed\":\"<a href='https://assemblino.com/show/public15245063.html'><img src='https://assemblino.com/show/public15245063.png'/></a>\"},\"owner\":\"public\",\"pointer\":3,\"objectType\":\"System\"}","code":"/**\n * A simple linear motor / piston \n */\nvar options = arguments[0] || {};\n_.defaults (options,{\n  name: 'LINEAR_MOTOR',\n  length: 10,\n  travel: 8,\n  width: 1.5,\n  innerWidth: 1.0,\n  margin: 0.25,\n  color: 0x777777,\n  mass: 0.1,\n  gap: 0.01,\n  opacity: 0.6,\n  connectorRadius: 0.25\n});\n\n//some validations\noptions.gap = Math.max(options.gap, 0);\noptions.travel = Math.min(options.travel, options.length);\noptions.innerWidth = Math.min(options.innerWidth, options.width-options.gap*2);\n\nvar SYSTEM = new System();\n\nSYSTEM.insert('linearCase','AuxCase1',{\n  width: options.width,\n  length: options.length,\n  thickness: (options.width-options.innerWidth)/2,\n  margin: options.margin,\n  mass: options.mass/2,\n  color:options.color,\n  opacity: options.opacity,\n  connectorRadius: options.connectorRadius,\n  mask: 2\n});\n\nSYSTEM.insert('linearPiston','AuxPiston1',{\n  width: options.innerWidth-options.gap*2,\n  length: options.length,\n  margin: options.margin,\n  mass: options.mass/2,\n  color:options.color,\n  opacity: options.opacity,\n  connectorRadius: options.connectorRadius,\n  mask: 1\n});\n\nSYSTEM.setPhysics('linearPiston', {\n  position: [0,options.width/2,0]\n});\n\n//actuator\nSYSTEM.join(\n  //connection type\n  {\n    fixed: 'linearCase',\n    moved: 'linearPiston',\n    fixedIndex: 'middle',\n    movedIndex: 'middle'\n  },\n  //controller options\n  {\n    name: options.name + '_CONTROL',\n    type: 'linear',\n    isEnabled: true,\n    velocity: 10,\n    force: 100,\n    position: 1,\n    low: 0,\n    high: options.travel\n  }\n);\n\nSYSTEM.setSettings(options);\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376661848066},"15266931":{"id":15266931,"name":"DistanceSensor","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":true,\"codeWrapperHeight\":61,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[17.976038760101627,8.054709369258642,1.1773096503291596],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0.6814926013053099,0.029356653780273002,-0.46198691965542427],\"folder\":\"Sensors\",\"dependencies\":[\"BasicCube\"],\"pause\":false,\"connectorRadius\":0.25,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public15266931.html\",\"embed\":\"<a href='http://assemblino.com/show/public15266931.html'><img src='http://assemblino.com/show/public15266931.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/**\n * Simple distance sensor.\n * TODO: its not measuring anything yet.\n */ \nvar options = _.defaults(arguments[0] || {}, {\n  size: 2,\n  distance: 30,\n  showRay: true,\n  boxColor: 0x222288,\n  rayColor: 0xbb4444,\n  blink: true,\n  blinkFrequency: 0.5\n});\n\nvar s = options.size;\nvar part = OBJECTS.BasicCube({\n  depth: s,\n  height: s,\n  width: s,\n  mass: 0.01,\n  color: options.boxColor,\n  margin: 0.0,\n  connectorSet: 'male',\n  connectorDistance: s,\n  connectorRadius: Math.min(0.125, s/4)\n});\n\nvar sensor = OBJECTS.BasicCube({\n  depth: s/2,\n  height: s/2,\n  width: s/2,\n  mass: 0.005,\n  color: 0x110000,\n  connectorSet: 'male',\n  connectorDistance: s,\n  connectorRadius: Math.min(0.15, s/4)\n});\nsensor.mesh.position = Vec3(0,0,3*s/4);\npart.add(sensor);\n\nif (options.showRay){\n  var geometry = new THREE.Geometry();\n  geometry.vertices.push(Vec3(0,0,s));\n  geometry.vertices.push(Vec3(0,0,options.distance));\n  var line = new THREE.Line( geometry, new THREE.LineBasicMaterial({ \n    linewidth: 3,\n    color: options.rayColor, \n    opacity: 1.0 \n  }));\n  part.add( line );\n  if (options.blink){\n    var program = new Program(part);\n    program.beforeDraw = function (){\n      var pair = Math.round(2 * options.blinkFrequency * new Date()/1000) % 2;\n      line.material.visible = !!pair;\n    };\n  }\n}\npart.setSettings(options);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376412232025},"16135415":{"id":16135415,"name":"BasicLinearY","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"codeWrapperHeight\":60,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[5.502127202526997,7.866532170934639,14.955671855517844],\"cameraRotation\":[0.16381940318268684,0.16012767141252796,0.7519003449743374],\"cameraTarget\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[\"AuxCase1\",\"BasicRectangularTube\",\"AuxPiston1\"],\"pause\":false,\"autoStart\":true,\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"https://assemblino.com/show/public16135415.html\",\"embed\":\"<a href='https://assemblino.com/show/public16135415.html'><img src='https://assemblino.com/show/public16135415.png'/></a>\"},\"owner\":\"public\",\"pointer\":3,\"objectType\":\"System\"}","code":"/**\n * This is a system representing a linear motor.\n * It consists of a case and a piston with a motorized linear constraint.\n * in this particular implementation there are a couple more of sliders, non-motorized,\n * to reinforce the constraint. (Is that really necessary?)\n * \n * travel: the travel distance characteristic of linear motors\n * margin: specifies the margin between the edge connectors and their parent parts.\n * gap: the gap between the case and piston\n * innerWidth: the pistons width - 2 x gap\n */ \n\nvar options = arguments[0] || {};\n_.defaults (options,{\n  name: 'LINEAR_MOTOR',\n  length: 10,\n  travel: 8,\n  force: 1000,\n  width: 1.5,\n  innerWidth: 1.0,\n  margin: 0.25,\n  color: 0x777777,\n  mass: 0.1,\n  gap: 0.01,\n  opacity: 0.6,\n  connectorRadius: 0.25\n});\n\n//some validations\noptions.gap = Math.max(options.gap, 0);\noptions.travel = Math.min(options.travel, options.length);\noptions.innerWidth = Math.min(options.innerWidth, options.width-options.gap*2);\n\nvar SYSTEM = new System();\n\nSYSTEM.insert('linearCase','AuxCase1',{\n  width: options.width,\n  length: options.length,\n  thickness: (options.width-options.innerWidth)/2,\n  margin: options.margin,\n  mass: options.mass/2,\n  color:options.color,\n  opacity: options.opacity,\n  connectorRadius: options.connectorRadius,\n  mask: 2\n});\n\nSYSTEM.insert('linearPiston','AuxPiston1',{\n  width: options.innerWidth-options.gap*2,\n  length: options.length,\n  margin: options.margin,\n  mass: options.mass/2,\n  color:options.color,\n  opacity: options.opacity,\n  connectorRadius: options.connectorRadius,\n  mask: 1\n});\n\nSYSTEM.setPhysics('linearPiston', {\n  position: [0,options.width/2,0]\n});\n\n//actuator\nSYSTEM.join(\n  //connection type\n  {\n    fixed: 'linearCase',\n    moved: 'linearPiston',\n    fixedIndex: 'middle',\n    movedIndex: 'middle'\n  },\n  //controller options\n  {\n    name: options.name + '_CONTROL',\n    type: 'linear',\n    isEnabled: true,\n    velocity: 10,\n    force: options.force,\n    position: 1,\n    low: 0,\n    high: options.travel\n  }\n);\n\n//stability helpers\nSYSTEM.join(  {\n    fixed: 'linearCase',\n    moved: 'linearPiston',\n    fixedIndex: 'back',\n    movedIndex: 'back'\n  },\n  {\n    type: 'slider',\n    low: 1,\n    high: 0\n  }\n);\nSYSTEM.join(  {\n    fixed: 'linearCase',\n    moved: 'linearPiston',\n    fixedIndex: 'front',\n    movedIndex: 'front'\n  },\n  {\n    type: 'slider',\n    low: 1,\n    high: 0\n  }\n);\nSYSTEM.setSettings(options);\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376661865084},"16277590":{"id":16277590,"name":"KeyboardControls1","settings":"{\"program\":\"var ASSEMBLE = this;\\nvar program = new Program(ASSEMBLE);\\nASSEMBLE.addProgram(program);\\n_.extend(ASSEMBLE, { \\n  directions: {\\n    'FRON_LEFT': -1,\\n    'FRON_RIGHT': 1,\\n    'REAR_LEFT': 1,\\n    'REAR_RIGHT': -1\\n  },\\n  straight: {\\n    'FRON_LEFT': 2,\\n    'FRON_RIGHT': 2,\\n    'REAR_LEFT': 2,\\n    'REAR_RIGHT': 2\\n  },\\n  left: {\\n    'FRON_LEFT': -1,\\n    'FRON_RIGHT': 1,\\n    'REAR_LEFT': 1,\\n    'REAR_RIGHT': -1\\n  },\\n  right: {\\n    'FRON_LEFT': 1,\\n    'FRON_RIGHT': -1,\\n    'REAR_LEFT': -1,\\n    'REAR_RIGHT': 1\\n  }\\n});\\nASSEMBLE.bind = ASSEMBLE.straight;\\nvar vel = -15;\\nprogram.keys['+up'] = function(){\\n  //console.log(bind === straight ? 's' : (bind === left ? 'l' : 'r') );\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.enable();\\n    control.setRPM(_this.bind[c] * _this.directions[c] * vel);\\n  });\\n};\\n\\nprogram.keys['-up'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.disable();\\n  });\\n};\\n\\nprogram.keys['+down'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.enable();\\n    control.setRPM(_this.bind[c] * _this.directions[c] * -vel);\\n  });\\n};\\n\\nprogram.keys['-down'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.disable();\\n  });\\n};\\n\\nprogram.keys['+left'] = function(){\\n  this.bind = this.left;\\n};\\n\\nprogram.keys['+right'] = function(){\\n  this.bind = this.right;\\n};\\n\\nprogram.keys['-right'] = program.keys['-left'] = function(){\\n  this.bind = this.straight;\\n};\\n\",\"options\":{\"Toggled\":false,\"autoLoad\":true,\"autoStart\":true,\"codeWrapperHeight\":57,\"codeWrapperOpacity\":100,\"codeWrapperWidth\":39,\"moveWithForce\":true,\"renderInterval\":100,\"scenario\":\"grass\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":5,\"codeEditor\":false,\"cameraPosition\":[-101.13788362709394,243.30815779361208,-459.1438523305705],\"cameraRotation\":[-0.7629056288925222,0.09578481065504538,0.594287355858941],\"cameraTarget\":[0,0,0],\"folder\":\"Demos\",\"dependencies\":[\"BasicCube\",\"Wheel\",\"BasicCircularTube\"],\"pause\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"softHandling\":false},\"owner\":\"public\",\"pointer\":8,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"declarations\":{\"BASE\":{\"object\":\"BasicCube\",\"options\":{\"depth\":35,\"height\":5,\"width\":15,\"mass\":1,\"friction\":0.8579636131503351,\"restitution\":0.08171082030003192,\"color\":8857150,\"opacity\":1,\"margin\":0.1,\"connectorSet\":\"male\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"BASE\"}},\"FRONT_LEFT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":11155005,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"FRONT_LEFT\"}},\"FRONT_RIGHT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":11155005,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"FRONT_RIGHT\"}},\"REAR_LEFT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":3633322,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"REAR_LEFT\"}},\"REAR_RIGHT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":3633322,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"REAR_RIGHT\"}},\"HEAD\":{\"object\":\"BasicCube\",\"options\":{\"depth\":10,\"height\":4,\"width\":5,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":2900903,\"opacity\":0.8,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"HEAD\"}}},\"physics\":{\"BASE\":{\"position\":[135.6027069091797,-5.2227373123168945,16.12723159790039],\"quaternion\":[0.9970104694366455,-0.006420670077204704,-0.07696777582168579,-0.0022049429826438427]},\"FRONT_LEFT\":{\"position\":[149.36395263671875,-5.432690143585205,29.1663875579834],\"quaternion\":[0.7009572982788086,0.6661589741706848,0.12066145241260529,-0.2243475764989853]},\"FRONT_RIGHT\":{\"position\":[126.4444808959961,-5.165388584136963,32.729248046875],\"quaternion\":[-0.42609336972236633,0.5130646228790283,0.5588338971138,0.49286288022994995]},\"REAR_LEFT\":{\"position\":[121.8440170288086,-4.957540035247803,3.0876541137695312],\"quaternion\":[-0.5812875032424927,0.6437456607818604,0.3937356173992157,0.304415225982666]},\"REAR_RIGHT\":{\"position\":[144.76214599609375,-5.295501708984375,-0.47562524676322937],\"quaternion\":[0.3842118978500366,0.4656364321708679,-0.5989624857902527,0.5261253118515015]},\"HEAD\":{\"position\":[137.96742248535156,-0.6048510670661926,30.964086532592773],\"quaternion\":[0.9970097541809082,-0.006556443404406309,-0.07696779817342758,-0.002130331937223673]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"FRONT_RIGHT\",\"fixedIndex\":49,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"FRON_RIGHT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":-20,\"reverse\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"FRONT_LEFT\",\"fixedIndex\":42,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"FRON_LEFT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":20,\"reverse\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"REAR_LEFT\",\"fixedIndex\":55,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"REAR_LEFT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":-20,\"reverse\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"REAR_RIGHT\",\"fixedIndex\":48,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"REAR_RIGHT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":20,\"reverse\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"HEAD\",\"fixedIndex\":28,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"fix0\",\"force\":10000,\"invert\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true,\"mirror\":false}}],\"connectorOptions\":[],\"options\":{\"name\":\"ASSEMBLE0\"}};\nASSEMBLE.setOptions(_.extend({\"name\":\"ASSEMBLE0\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376076980090},"16277816":{"id":16277816,"name":"KeyboardControls2","settings":"{\"program\":\"/**\\n * \\n * Demo with motor constraints and keyboard events.\\n * \\n * Use the cursor keys up, down, left, right to guide the vehicle.\\n * Be sure Run Program is enabled.\\n * \\n * Try choosing different backgrounds from Settings » World » Background.\\n * \\n * Insert more components from Edit » Insert » ...\\n * \\n * Look at others components and examples in File » Open » ... \\n */\\nvar ASSEMBLE = this;\\nvar program = new Program(this);\\nASSEMBLE.addProgram(program);\\n_.extend(ASSEMBLE, { \\n  directions: {\\n    'FRON_LEFT': -1,\\n    'FRON_RIGHT': 1,\\n    'REAR_LEFT': 1,\\n    'REAR_RIGHT': -1\\n  },\\n  straight: {\\n    'FRON_LEFT': 2,\\n    'FRON_RIGHT': 2,\\n    'REAR_LEFT': 2,\\n    'REAR_RIGHT': 2\\n  },\\n  left: {\\n    'FRON_LEFT': 1,\\n    'FRON_RIGHT': 3,\\n    'REAR_LEFT': 3,\\n    'REAR_RIGHT': 1\\n  },\\n  right: {\\n    'FRON_LEFT': 3,\\n    'FRON_RIGHT': 1,\\n    'REAR_LEFT': 1,\\n    'REAR_RIGHT': 3\\n  }\\n});\\nASSEMBLE.bind = ASSEMBLE.straight;\\nvar vel = -100;\\nprogram.keys['+up'] = function(){\\n  //console.log(bind === straight ? 's' : (bind === left ? 'l' : 'r') );\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.enable();\\n    control.setVelocity(_this.bind[c] * _this.directions[c] * vel);\\n  });\\n};\\n\\nprogram.keys['-up'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.disable();\\n  });\\n};\\n\\nprogram.keys['+down'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.enable();\\n    control.setVelocity(_this.bind[c] * _this.directions[c] * -vel);\\n  });\\n};\\n\\nprogram.keys['-down'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.disable();\\n  });\\n};\\n\\nprogram.keys['+left'] = function(){\\n  this.bind = this.left;\\n};\\n\\nprogram.keys['+right'] = function(){\\n  this.bind = this.right;\\n};\\n\\nprogram.keys['-right'] = program.keys['-left'] = function(){\\n  this.bind = this.straight;\\n};\\n\",\"options\":{\"Toggled\":false,\"autoLoad\":true,\"autoStart\":true,\"codeWrapperHeight\":48,\"codeWrapperOpacity\":100,\"codeWrapperWidth\":39,\"moveWithForce\":true,\"renderInterval\":125,\"scenario\":\"grass\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":15,\"codeEditor\":false,\"cameraPosition\":[-204.55606517150963,240.85639778200343,-337.91942857884754],\"cameraRotation\":[-0.8355359050795745,0.3827241390145027,0.3691704224572143],\"cameraTarget\":[35.96172659831185,39.54963675445165,-44.30011794080746],\"folder\":\"Demos\",\"dependencies\":[\"BasicCube\",\"Wheel\",\"BasicCircularTube\",\"CameraAndScreen\",\"Camera\",\"Screen\"],\"pause\":false,\"connectorRadius\":1.0089470710114898,\"scale\":\"centimeter\",\"softHandling\":false,\"link\":\"http://assemblino.com/show/public16277816.html\",\"embed\":\"<a href='http://assemblino.com/show/public16277816.html'><img src='http://assemblino.com/show/public16277816.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"declarations\":{\"BASE\":{\"object\":\"BasicCube\",\"options\":{\"depth\":35,\"height\":5,\"width\":15,\"mass\":1,\"friction\":0.8579636131503351,\"restitution\":0.08171082030003192,\"color\":8857150,\"opacity\":1,\"margin\":0.1,\"connectorSet\":\"male\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"BASE\"}},\"FRONT_LEFT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":11155005,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"FRONT_LEFT\"}},\"FRONT_RIGHT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":11155005,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"FRONT_RIGHT\"}},\"REAR_LEFT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":3633322,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"REAR_LEFT\"}},\"REAR_RIGHT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":3633322,\"opacity\":0.8783913182253431,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"REAR_RIGHT\"}},\"HEAD\":{\"object\":\"BasicCube\",\"options\":{\"depth\":10,\"height\":5,\"width\":5,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":2900903,\"opacity\":0.8,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"HEAD\"}},\"CAM_SCREEN\":{\"name\":\"CAM_SCREEN\",\"path\":[\"CAM_SCREEN\"],\"object\":\"CameraAndScreen\",\"options\":{\"cameraWidth\":6,\"cameraHeight\":6,\"cameraDepth\":3,\"cameraColor\":1122115,\"cameraMass\":0.01,\"screenWidth\":128,\"screenHeight\":64,\"screenDepth\":10,\"screenColor\":3355443,\"screenMass\":0,\"unitPixels\":8,\"name\":\"CAM_SCREEN\"}}},\"physics\":{\"BASE\":{\"position\":[1.934384822845459,-3.8878931999206543,98.30320739746094],\"quaternion\":[0.001237075193785131,-0.004179832059890032,0.9999824166297913,-0.004026163835078478]},\"FRONT_LEFT\":{\"position\":[-9.702816009521484,-3.855419397354126,83.33204650878906],\"quaternion\":[0.7099037766456604,-0.7041842341423035,0.00810928363353014,0.009766214527189732]},\"FRONT_RIGHT\":{\"position\":[13.496376991271973,-3.6689963340759277,83.2755126953125],\"quaternion\":[0.6947442889213562,0.7000347971916199,0.1154676154255867,-0.11810551583766937]},\"REAR_LEFT\":{\"position\":[13.571582794189453,-3.919210910797119,113.27425384521484],\"quaternion\":[0.6897203922271729,0.6949717402458191,0.14226633310317993,-0.1451219916343689]},\"REAR_RIGHT\":{\"position\":[-9.627591133117676,-4.1056365966796875,113.33094787597656],\"quaternion\":[0.26975300908088684,-0.266015887260437,0.6566790342330933,0.652105450630188]},\"HEAD\":{\"position\":[1.8551490306854248,1.4367388486862183,83.34722137451172],\"quaternion\":[0.0012379761319607496,-0.004169168882071972,0.999982476234436,-0.004012518096715212]},\"CAM_SCREEN/CAM_SCREEN_CAMERA\":{\"position\":[1.8385868072509766,1.491692066192627,76.74746704101562],\"quaternion\":[-0.004012521356344223,0.999982476234436,0.004169168882071972,-0.0012379761319607496]},\"CAM_SCREEN/CAM_SCREEN_SCREEN\":{\"position\":[254.9902801513672,42.69254684448242,-123.31121063232422],\"quaternion\":[0.04320952296257019,-0.664368212223053,-0.06828020513057709,0.7430246472358704]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"FRONT_RIGHT\",\"fixedIndex\":49,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"FRON_RIGHT\",\"rpm\":-200,\"torque\":5,\"isEnabled\":false,\"low\":-500,\"high\":500,\"invert\":false,\"offset\":0,\"gui\":false,\"reverse\":false,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"FRONT_LEFT\",\"fixedIndex\":42,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"FRON_LEFT\",\"rpm\":200,\"torque\":5,\"isEnabled\":false,\"low\":-500,\"high\":500,\"invert\":false,\"offset\":0,\"gui\":false,\"reverse\":false,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"REAR_LEFT\",\"fixedIndex\":55,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"REAR_LEFT\",\"rpm\":-200,\"torque\":5,\"isEnabled\":false,\"low\":-500,\"high\":500,\"invert\":false,\"offset\":0,\"gui\":false,\"reverse\":false,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"REAR_RIGHT\",\"fixedIndex\":48,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"REAR_RIGHT\",\"rpm\":200,\"torque\":5,\"isEnabled\":false,\"low\":-500,\"high\":500,\"invert\":false,\"offset\":0,\"gui\":false,\"reverse\":false,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"HEAD\",\"fixedIndex\":28,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"fix0\",\"force\":10000,\"invert\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true,\"mirror\":false}},{\"fixed\":\"HEAD\",\"moved\":\"CAM_SCREEN/CAM_SCREEN_CAMERA\",\"fixedIndex\":5,\"movedIndex\":\"back\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":180,\"isEnabled\":true}}],\"connectorOptions\":[],\"options\":{\"name\":\"ASSEMBLE0\"}};\nASSEMBLE.setOptions(_.extend({\"name\":\"ASSEMBLE0\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376410171339},"16540579":{"id":16540579,"name":"AuxSpringTerminal","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[15.075100444444448,15.075100444444448,15.075100444444448],\"cameraRotation\":[0.22196172737034653,0.23784243428148621,0.7884587260437754],\"cameraTarget\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicCircularTube\"],\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Part\"}","code":"\n    var settings = arguments && arguments[0] || {};\n    var defaults = {\n        length: 2,\n        innerDiameter: 3,\n        outerDiameter: 5,\n        mass: 0.02,\n        friction: 0.99,\n        restitution: 0.5,\n        color: 0x445566,\n        opacity: 1,\n        units: 'cm',\n        radiusSegments: 16,\n        margin: 0.25,\n        heightSegments: 1\n    };\n    _.defaults(settings, defaults);\n\n    var tube = OBJECTS.BasicCircularTube(settings);\n\n    var shaftConnector = new Connector({\n        name: \"top\",\n        base: [0,\n            settings.length/2 + settings.margin,\n            0],\n        radius: 0.5,\n        up: [0,1,0],\n        front: [0,0,1],\n        prefer: 'linear'\n    });\n\n    var shaftConnector2 = new Connector({\n        name: \"bot\",\n        base: [0,\n            -settings.length/2 - settings.margin,\n            0],\n        radius: 0.5,\n        up: [0,1,0],\n        front: [0,0,1],\n        prefer: 'linear'\n    });\n\n    tube.add(shaftConnector);\n    tube.add(shaftConnector2);\n\n    tube.mesh.position.add(Vec3(0,settings.length/2,0));\n\n    tube.settings = settings;\n\n    return tube;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657022029},"16552001":{"id":16552001,"name":"Assemble61","settings":"{\"code\":\"var ASSEMBLE = new Assemble();\\nASSEMBLE.setOptions(arguments[0]);\\nASSEMBLE.content = {\\\"declarations\\\":{\\\"BasicCube1\\\":{\\\"object\\\":\\\"BasicCube\\\",\\\"options\\\":{\\\"depth\\\":5,\\\"height\\\":5,\\\"width\\\":5,\\\"mass\\\":0,\\\"friction\\\":0.9,\\\"restitution\\\":0,\\\"color\\\":10066346,\\\"opacity\\\":1,\\\"margin\\\":5,\\\"connectorSet\\\":\\\"mixed\\\",\\\"connectorDistance\\\":5,\\\"connectorRadius\\\":0.5,\\\"name\\\":\\\"BasicCube1\\\"}},\\\"HingeLink1\\\":{\\\"object\\\":\\\"HingeLink\\\",\\\"options\\\":{\\\"innerDiameter\\\":1,\\\"outerDiameter\\\":2,\\\"thickness\\\":0.5,\\\"mass\\\":0.01,\\\"color\\\":4342459,\\\"opacity\\\":1,\\\"margin\\\":0.1,\\\"baseHeight\\\":0.5,\\\"baseType\\\":[\\\"male\\\",\\\"female\\\"],\\\"name\\\":\\\"HingeLink1\\\"}},\\\"HingeLink22\\\":{\\\"object\\\":\\\"HingeLink2\\\",\\\"options\\\":{\\\"innerDiameter\\\":1,\\\"outerDiameter\\\":2,\\\"thickness\\\":0.5,\\\"mass\\\":0.01,\\\"color\\\":5082180,\\\"opacity\\\":1,\\\"margin\\\":0.1,\\\"baseHeight\\\":0.5,\\\"baseType\\\":[\\\"male\\\",\\\"female\\\"],\\\"name\\\":\\\"HingeLink22\\\"}},\\\"HingeLink23\\\":{\\\"object\\\":\\\"HingeLink\\\",\\\"options\\\":{\\\"innerDiameter\\\":1,\\\"outerDiameter\\\":2,\\\"thickness\\\":0.5,\\\"mass\\\":0.01,\\\"color\\\":10066346,\\\"opacity\\\":1,\\\"margin\\\":0.1,\\\"baseHeight\\\":0.5,\\\"baseType\\\":\\\"female\\\",\\\"name\\\":\\\"HingeLink23\\\"}},\\\"HingeLink230\\\":{\\\"object\\\":\\\"HingeLink\\\",\\\"options\\\":{\\\"innerDiameter\\\":1,\\\"outerDiameter\\\":2,\\\"thickness\\\":0.5,\\\"mass\\\":0.01,\\\"color\\\":2368699,\\\"opacity\\\":1,\\\"margin\\\":0.1,\\\"baseHeight\\\":0.5,\\\"baseType\\\":\\\"female\\\",\\\"name\\\":\\\"HingeLink230\\\"}},\\\"HingeLink4\\\":{\\\"object\\\":\\\"HingeLink\\\",\\\"options\\\":{\\\"innerDiameter\\\":1,\\\"outerDiameter\\\":2,\\\"thickness\\\":0.5,\\\"mass\\\":0.01,\\\"color\\\":10066346,\\\"opacity\\\":1,\\\"margin\\\":0.1,\\\"baseHeight\\\":0.5,\\\"baseType\\\":[\\\"male\\\",\\\"female\\\"],\\\"name\\\":\\\"HingeLink4\\\"}}},\\\"physics\\\":{\\\"BasicCube1\\\":{\\\"position\\\":[-13.694594383239746,29.88298225402832,-5.543918609619141],\\\"quaternion\\\":[-0.7071068286895752,-0.0000060955280787311494,0.000005195001904212404,0.7071067094802856],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]},\\\"HingeLink1\\\":{\\\"position\\\":[-13.695070266723633,37.88321304321289,-5.545491695404053],\\\"quaternion\\\":[0.0009571201517246664,-0.00025920220650732517,0.00043383557931520045,0.9999994039535522],\\\"linear\\\":[0.029488153755664825,0.0008733132272027433,0.017189616337418556],\\\"angular\\\":[-0.11091750860214233,0.04228851944208145,0.3774617314338684]},\\\"HingeLink22\\\":{\\\"position\\\":[-13.699378967285156,38.849822998046875,-4.277217388153076],\\\"quaternion\\\":[-0.7006022930145264,-0.0019198860973119736,0.00021721921802964061,0.7135493755340576],\\\"linear\\\":[-0.24560116231441498,0.12454985082149506,-0.0693584457039833],\\\"angular\\\":[-0.08189596235752106,0.028622033074498177,0.3428252637386322]},\\\"HingeLink23\\\":{\\\"position\\\":[-21.692607879638672,29.883827209472656,-5.544214725494385],\\\"quaternion\\\":[-0.5006448030471802,0.4992039203643799,0.5010740160942078,0.49907419085502625],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]},\\\"HingeLink230\\\":{\\\"position\\\":[-23.27288246154785,29.04444694519043,-5.542014122009277],\\\"quaternion\\\":[0.21760518848896027,0.672727644443512,-0.21588444709777832,0.6734088063240051],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]},\\\"HingeLink4\\\":{\\\"position\\\":[-13.694585800170898,28.882980346679688,-13.04391860961914],\\\"quaternion\\\":[-4.310064838364269e-8,0.6324743628501892,-4.7064565933396807e-7,0.7745813131332397],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]}},\\\"connections\\\":[{\\\"fixed\\\":\\\"BasicCube1\\\",\\\"moved\\\":\\\"HingeLink1\\\",\\\"fixedIndex\\\":4,\\\"movedIndex\\\":1,\\\"controllerOptions\\\":{\\\"type\\\":\\\"fix\\\",\\\"name\\\":\\\"fix0\\\",\\\"force\\\":10000,\\\"invert\\\":false,\\\"offset\\\":0,\\\"angle\\\":0,\\\"isEnabled\\\":true}},{\\\"fixed\\\":\\\"BasicCube1\\\",\\\"moved\\\":\\\"HingeLink23\\\",\\\"fixedIndex\\\":3,\\\"movedIndex\\\":1,\\\"controllerOptions\\\":{\\\"type\\\":\\\"fix\\\",\\\"name\\\":\\\"fix1\\\",\\\"force\\\":10000,\\\"invert\\\":false,\\\"offset\\\":0,\\\"angle\\\":0,\\\"isEnabled\\\":true}},{\\\"fixed\\\":\\\"HingeLink23\\\",\\\"moved\\\":\\\"HingeLink230\\\",\\\"fixedIndex\\\":0,\\\"movedIndex\\\":0,\\\"controllerOptions\\\":{\\\"type\\\":\\\"hinge\\\",\\\"name\\\":\\\"hinge4\\\",\\\"low\\\":1,\\\"high\\\":0,\\\"invert\\\":false,\\\"offset\\\":0}},{\\\"fixed\\\":\\\"BasicCube1\\\",\\\"moved\\\":\\\"HingeLink4\\\",\\\"fixedIndex\\\":0,\\\"movedIndex\\\":0,\\\"controllerOptions\\\":{\\\"type\\\":\\\"point\\\",\\\"name\\\":\\\"fix1\\\"}},{\\\"fixed\\\":\\\"HingeLink1\\\",\\\"moved\\\":\\\"HingeLink22\\\",\\\"fixedIndex\\\":0,\\\"movedIndex\\\":0,\\\"controllerOptions\\\":{\\\"type\\\":\\\"hinge\\\",\\\"name\\\":\\\"hinge0\\\",\\\"low\\\":1,\\\"high\\\":0,\\\"invert\\\":false,\\\"offset\\\":0}}],\\\"programs\\\":[]};\\nreturn ASSEMBLE;\",\"program\":\"/*\\n * This is a test with hinge acessories.\\n * \\n */ \",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":true,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":true,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-64.87022407532817,90.73961353874337,-51.54900520543978],\"cameraRotation\":[-0.5410087037314368,0.6196125025387506,-0.5229822875915487],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"BasicCube\",\"HingeLink\",\"HingeLink2\"],\"connectorRadius\":0.5},\"owner\":\"public\",\"content\":{\"declarations\":{\"BasicCube1\":{\"object\":\"BasicCube\",\"options\":{\"depth\":5,\"height\":5,\"width\":5,\"mass\":0,\"friction\":0.9,\"restitution\":0,\"color\":10066346,\"opacity\":1,\"margin\":5,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"BasicCube1\"}},\"HingeLink1\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":4342459,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":[\"male\",\"female\"],\"name\":\"HingeLink1\"}},\"HingeLink22\":{\"object\":\"HingeLink2\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":5082180,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":[\"male\",\"female\"],\"name\":\"HingeLink22\"}},\"HingeLink23\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":10066346,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":\"female\",\"name\":\"HingeLink23\"}},\"HingeLink230\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":2368699,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":\"female\",\"name\":\"HingeLink230\"}},\"HingeLink4\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":10066346,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":[\"male\",\"female\"],\"name\":\"HingeLink4\"}}},\"physics\":{\"BasicCube1\":{\"position\":[-13.694594383239746,29.88298225402832,-5.543918609619141],\"quaternion\":[-0.7071068286895752,-0.0000060955280787311494,0.000005195001904212404,0.7071067094802856],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"HingeLink1\":{\"position\":[-13.695070266723633,37.88321304321289,-5.545491695404053],\"quaternion\":[0.0009571201517246664,-0.00025920220650732517,0.00043383557931520045,0.9999994039535522],\"linear\":[0.029488153755664825,0.0008733132272027433,0.017189616337418556],\"angular\":[-0.11091750860214233,0.04228851944208145,0.3774617314338684]},\"HingeLink22\":{\"position\":[-13.699378967285156,38.849822998046875,-4.277217388153076],\"quaternion\":[-0.7006022930145264,-0.0019198860973119736,0.00021721921802964061,0.7135493755340576],\"linear\":[-0.24560116231441498,0.12454985082149506,-0.0693584457039833],\"angular\":[-0.08189596235752106,0.028622033074498177,0.3428252637386322]},\"HingeLink23\":{\"position\":[-21.692607879638672,29.883827209472656,-5.544214725494385],\"quaternion\":[-0.5006448030471802,0.4992039203643799,0.5010740160942078,0.49907419085502625],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"HingeLink230\":{\"position\":[-23.27288246154785,29.04444694519043,-5.542014122009277],\"quaternion\":[0.21760518848896027,0.672727644443512,-0.21588444709777832,0.6734088063240051],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"HingeLink4\":{\"position\":[-13.694585800170898,28.882980346679688,-13.04391860961914],\"quaternion\":[-4.310064838364269e-8,0.6324743628501892,-4.7064565933396807e-7,0.7745813131332397],\"linear\":[0,0,0],\"angular\":[0,0,0]}},\"connections\":[{\"fixed\":\"BasicCube1\",\"moved\":\"HingeLink1\",\"fixedIndex\":4,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"fix0\",\"force\":10000,\"invert\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BasicCube1\",\"moved\":\"HingeLink23\",\"fixedIndex\":3,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"fix1\",\"force\":10000,\"invert\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"HingeLink23\",\"moved\":\"HingeLink230\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"hinge4\",\"low\":1,\"high\":0,\"invert\":false,\"offset\":0}},{\"fixed\":\"BasicCube1\",\"moved\":\"HingeLink4\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"point\",\"name\":\"fix1\"}},{\"fixed\":\"HingeLink1\",\"moved\":\"HingeLink22\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"hinge0\",\"low\":1,\"high\":0,\"invert\":false,\"offset\":0}}],\"programs\":[]},\"pointer\":3,\"objectType\":\"ASSEMBLE\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.setOptions(arguments[0]);\nASSEMBLE.content = {\"declarations\":{\"BasicCube1\":{\"object\":\"BasicCube\",\"options\":{\"depth\":5,\"height\":5,\"width\":5,\"mass\":0,\"friction\":0.9,\"restitution\":0,\"color\":10066346,\"opacity\":1,\"margin\":5,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"BasicCube1\"}},\"HingeLink1\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":4342459,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":[\"male\",\"female\"],\"name\":\"HingeLink1\"}},\"HingeLink22\":{\"object\":\"HingeLink2\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":5082180,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":[\"male\",\"female\"],\"name\":\"HingeLink22\"}},\"HingeLink23\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":10066346,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":\"female\",\"name\":\"HingeLink23\"}},\"HingeLink230\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":2368699,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":\"female\",\"name\":\"HingeLink230\"}},\"HingeLink4\":{\"object\":\"HingeLink\",\"options\":{\"innerDiameter\":1,\"outerDiameter\":2,\"thickness\":0.5,\"mass\":0.01,\"color\":10066346,\"opacity\":1,\"margin\":0.1,\"baseHeight\":0.5,\"baseType\":[\"male\",\"female\"],\"name\":\"HingeLink4\"}}},\"physics\":{\"BasicCube1\":{\"position\":[-13.694594383239746,29.88298225402832,-5.543918609619141],\"quaternion\":[-0.7071068286895752,-0.0000060955280787311494,0.000005195001904212404,0.7071067094802856],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"HingeLink1\":{\"position\":[-13.695070266723633,37.88321304321289,-5.545491695404053],\"quaternion\":[0.0009571201517246664,-0.00025920220650732517,0.00043383557931520045,0.9999994039535522],\"linear\":[0.029488153755664825,0.0008733132272027433,0.017189616337418556],\"angular\":[-0.11091750860214233,0.04228851944208145,0.3774617314338684]},\"HingeLink22\":{\"position\":[-13.699378967285156,38.849822998046875,-4.277217388153076],\"quaternion\":[-0.7006022930145264,-0.0019198860973119736,0.00021721921802964061,0.7135493755340576],\"linear\":[-0.24560116231441498,0.12454985082149506,-0.0693584457039833],\"angular\":[-0.08189596235752106,0.028622033074498177,0.3428252637386322]},\"HingeLink23\":{\"position\":[-21.692607879638672,29.883827209472656,-5.544214725494385],\"quaternion\":[-0.5006448030471802,0.4992039203643799,0.5010740160942078,0.49907419085502625],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"HingeLink230\":{\"position\":[-23.27288246154785,29.04444694519043,-5.542014122009277],\"quaternion\":[0.21760518848896027,0.672727644443512,-0.21588444709777832,0.6734088063240051],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"HingeLink4\":{\"position\":[-13.694585800170898,28.882980346679688,-13.04391860961914],\"quaternion\":[-4.310064838364269e-8,0.6324743628501892,-4.7064565933396807e-7,0.7745813131332397],\"linear\":[0,0,0],\"angular\":[0,0,0]}},\"connections\":[{\"fixed\":\"BasicCube1\",\"moved\":\"HingeLink1\",\"fixedIndex\":4,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"fix0\",\"force\":10000,\"invert\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BasicCube1\",\"moved\":\"HingeLink23\",\"fixedIndex\":3,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"fix1\",\"force\":10000,\"invert\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"HingeLink23\",\"moved\":\"HingeLink230\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"hinge4\",\"low\":1,\"high\":0,\"invert\":false,\"offset\":0}},{\"fixed\":\"BasicCube1\",\"moved\":\"HingeLink4\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"point\",\"name\":\"fix1\"}},{\"fixed\":\"HingeLink1\",\"moved\":\"HingeLink22\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"hinge0\",\"low\":1,\"high\":0,\"invert\":false,\"offset\":0}}],\"programs\":[]};\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1374219988568},"16552002":{"id":16552002,"name":"HingeLink","settings":"{\"code\":\"var defaults = {\\n  innerDiameter: 1,\\n  outerDiameter: 2,\\n  thickness: 0.5,\\n  mass: 0.01,\\n  color: 0x9999aa,\\n  opacity: 1.0,\\n  margin: 0.1,\\n  baseHeight: 0.5,\\n  baseType: ['male','female']\\n}\\n\\nvar segments = 16;\\nvar options = _.defaults(arguments[0] || {},  defaults);\\n\\nvar material = new THREE.MeshLambertMaterial({ \\n  color: options.color,\\n  transparent: options.opacity < 1,\\n  opacity: options.opacity\\n});\\nmaterial = Physijs.createMaterial(material);\\n\\nvar baseHeight = options.baseHeight + (options.outerDiameter-options.innerDiameter)/2;\\nvar axisOffset = baseHeight/2 + (options.outerDiameter-options.innerDiameter)/2;\\n\\nvar part = new Part();\\nvar geo = new THREE.CubeGeometry(\\n    options.thickness,\\n  \\tbaseHeight,\\n    options.outerDiameter \\n);\\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass);\\npart.add(mesh);\\n\\n//the hole\\nvar geoOut = new THREE.CylinderGeometry(\\n  options.outerDiameter/2, \\n  options.outerDiameter/2,\\n  options.thickness,\\n  segments\\n);\\nvar geoIn = new THREE.CylinderGeometry(\\n    options.innerDiameter/2, \\n    options.innerDiameter/2,\\n    options.thickness,\\n    segments\\n);\\ngeoOut = geoOut.subtract(geoIn);\\nmaterial = new THREE.MeshLambertMaterial({ \\n  color: options.color,\\n  transparent: options.opacity < 1,\\n  opacity: options.opacity\\n});\\nmesh = new THREE.Mesh(geoOut, material);\\nmesh.rotation.z = Math.PI/2; \\nmesh.position.y = axisOffset; \\npart.add(mesh);\\n//hinge connector\\nvar connector = new Connector({\\n  base: [0,axisOffset,0],\\n  up: [1,0,0],\\n  front: [0,-1,0],\\n  accept: ['hinge','slider','point'],\\n  prefer: 'hinge'\\n});\\npart.add(connector);\\n//base connector\\nvar orientation = -1;\\nif (options.baseType instanceof Array){\\n} else if (options.baseType === 'female') {\\n  orientation=1; \\n}\\nconnector = new Connector({\\n  base: [0, -baseHeight/2,0],\\n   up: [0, orientation ,0],\\n  front: [0,0,1],\\n  accept: ['fix','hinge'],\\n  prefer: 'fix'\\n});\\n\\npart.add(connector);\\n\\npart.mesh.position.y = baseHeight/2;\\npart.setOptions(options);\\n\\nreturn part;\",\"program\":\"\",\"options\":{\"codeEditor\":true,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":65,\"codeWrapperWidth\":43,\"moveWithForce\":false,\"renderInterval\":500,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":100,\"simulationQuality\":1,\"cameraPosition\":[-16.720925461363557,-1.0073322115478827,-7.753539324987567],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[-0.8474732582600291,-0.3002371921350284,-0.18829762839532535],\"folder\":\"Structures\",\"dependencies\":[],\"pause\":false},\"owner\":\"public\",\"content\":{\"declarations\":{},\"physics\":{},\"connections\":[]},\"pointer\":45,\"counter\":0,\"objectType\":\"PART\"}","code":"var defaults = {\n  innerDiameter: 1,\n  outerDiameter: 2,\n  thickness: 0.5,\n  mass: 0.01,\n  color: 0x9999aa,\n  opacity: 1.0,\n  margin: 0.1,\n  baseHeight: 0.5,\n  baseType: ['male','female']\n}\n\nvar segments = 16;\nvar options = _.defaults(arguments[0] || {},  defaults);\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\nmaterial = Physijs.createMaterial(material);\n\nvar baseHeight = options.baseHeight + (options.outerDiameter-options.innerDiameter)/2;\nvar axisOffset = baseHeight/2 + (options.outerDiameter-options.innerDiameter)/2;\n\nvar part = new Part();\nvar geo = new THREE.CubeGeometry(\n    options.thickness,\n  \tbaseHeight,\n    options.outerDiameter \n);\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass);\npart.add(mesh);\n\n//the hole\nvar geoOut = new THREE.CylinderGeometry(\n  options.outerDiameter/2, \n  options.outerDiameter/2,\n  options.thickness,\n  segments\n);\nvar geoIn = new THREE.CylinderGeometry(\n    options.innerDiameter/2, \n    options.innerDiameter/2,\n    options.thickness,\n    segments\n);\ngeoOut = geoOut.subtract(geoIn);\nmaterial = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\nmesh = new THREE.Mesh(geoOut, material);\nmesh.rotation.z = Math.PI/2; \nmesh.position.y = axisOffset; \npart.add(mesh);\n//hinge connector\nvar connector = new Connector({\n  base: [0,axisOffset,0],\n  up: [1,0,0],\n  front: [0,-1,0],\n  accept: ['hinge','slider','point'],\n  prefer: 'hinge'\n});\npart.add(connector);\n//base connector\nvar orientation = -1;\nif (options.baseType instanceof Array){\n} else if (options.baseType === 'female') {\n  orientation=1; \n}\nconnector = new Connector({\n  base: [0, -baseHeight/2,0],\n   up: [0, orientation ,0],\n  front: [0,0,1],\n  accept: ['fix','hinge'],\n  prefer: 'fix'\n});\n\npart.add(connector);\n\npart.mesh.position.y = baseHeight/2;\npart.setOptions(options);\n\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1373547665508},"16552003":{"id":16552003,"name":"HingeLink2","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":65,\"codeWrapperWidth\":43,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":1,\"cameraPosition\":[31.651702423302993,19.987509398988276,24.87953018403636],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[-0.08558423490596812,-0.3515011206878991,-0.9075331805663575],\"folder\":\"Structures\",\"dependencies\":[],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"var defaults = {\n  innerDiameter: 1,\n  outerDiameter: 2,\n  thickness: 0.5,\n  mass: 0.01,\n  color: 0x9999aa,\n  opacity: 1.0,\n  margin: 0.1,\n  baseHeight: 0.5,\n  baseType: ['male','female']\n}\n\nvar segments = 16;\nvar options = _.defaults(arguments[0] || {},  defaults);\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\nmaterial = Physijs.createMaterial(material);\n\nvar middleHeight = options.baseHeight;\nvar baseHeight = options.baseHeight + (options.outerDiameter-options.innerDiameter)/2;\nvar axisOffset = baseHeight/2 + middleHeight/2+ (options.outerDiameter-options.innerDiameter)/2;\n\nvar part = new Part();\nvar geo = new THREE.CubeGeometry(\n    options.thickness,\n  \tmiddleHeight,\n    options.outerDiameter \n);\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass);\npart.add(mesh);\n\n//\ngeo = new THREE.CubeGeometry(\n    options.thickness,\n  \tbaseHeight,\n    options.outerDiameter \n);\nmesh = new Physijs.BoxMesh(geo, material, options.mass);\nmesh.position.x -= options.thickness;\nmesh.position.y += middleHeight/2;\npart.add(mesh);\nmesh = new Physijs.BoxMesh(geo, material, options.mass);\nmesh.position.x += options.thickness;\nmesh.position.y += middleHeight/2;\npart.add(mesh);\n//the hole\nvar geoOut = new THREE.CylinderGeometry(\n  options.outerDiameter/2, \n  options.outerDiameter/2,\n  options.thickness,\n  segments\n);\nvar geoIn = new THREE.CylinderGeometry(\n    options.innerDiameter/2, \n    options.innerDiameter/2,\n    options.thickness,\n    segments\n);\ngeoOut = geoOut.subtract(geoIn);\nmaterial = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\n//first ring\nmesh = new THREE.Mesh(geoOut, material);\nmesh.rotation.z = Math.PI/2; \nmesh.position.y = axisOffset; \nmesh.position.x += options.thickness; \npart.add(mesh);\n//second ring\nmesh = new THREE.Mesh(geoOut, material);\nmesh.rotation.z = Math.PI/2; \nmesh.position.y = axisOffset; \nmesh.position.x -= options.thickness; \npart.add(mesh);\n//hinge connector\nvar connector = new Connector({\n\tbase: [0,axisOffset,0],\n\tup: [1,0,0],\n\tfront: [0,1,0],\n    accept: ['hinge','slider'],\n\tprefer: 'hinge'\n});\npart.add(connector);\n//base connector\nvar orientation = -1;\nif (options.baseType instanceof Array){\n} else if (options.baseType === 'female') {\n  orientation=1; \n}\nconnector = new Connector({\n\tbase: [0, -baseHeight/2,0],\n\tup: [0, orientation ,0],\n\tfront: [0,0,1],\n    accept: ['fix','hinge'],\n\tprefer: 'fix'\n});\n\npart.add(connector);\n\npart.mesh.position.y = middleHeight/2;\npart.setOptions(options);\n\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1375872015863},"16646142":{"id":16646142,"name":"CameraAndScreen","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":60,\"codeWrapperWidth\":40,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[34.59308936238868,27.600673844354958,116.34501145850967],\"cameraRotation\":[0.023427298743914055,0.05761088886649394,0.8653155713336522],\"cameraTarget\":[0,0,0],\"folder\":\"Sensors\",\"dependencies\":[\"Camera\",\"Screen\"],\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public16646142.html\",\"embed\":\"<a href='http://assemblino.com/show/public16646142.html'><img src='http://assemblino.com/show/public16646142.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"System\"}","code":"/**\n * Provides a camera and a screen to display camera targets.\n * The screen is associated with the camera.\n * \n * unitPixels: the definition, quanity of pixes per unit.\n */\n\nvar SYSTEM = new System();\n\nvar options = _.defaults(arguments[0] || {}, {\n  cameraWidth: 3,\n  cameraHeight: 2,\n  cameraDepth: 1,\n  cameraColor: 0x223322,\n  cameraMass: 0.01,\n  screenWidth: 16,\n  screenHeight: 8,\n  screenDepth: 4,\n  screenColor: 0x333333,\n  screenMass: 0.3,\n  unitPixels: 8\n});\n\nSYSTEM.setOptions(options);\n\nvar sysName = (options.name || \"CS\")+\"_\";\n\nSYSTEM.insert(sysName+'CAMERA','Camera',{\n  width: options.cameraWidth,\n  height: options.cameraHeight,\n  depth: options.cameraDepth,\n  color: options.cameraColor,\n  mass: options.cameraMass  \n});\n\nSYSTEM.insert(sysName+'SCREEN','Screen',{\n  width: options.screenWidth,\n  height: options.screenHeight,\n  depth: options.screenDepth,\n  color: options.screenColor,\n  unitPixels: options.unitPixels,\n  mass: options.screenMass  \n});\nSYSTEM.setPhysics(sysName+'CAMERA',{\n  position: [0,options.cameraHeight/2,options.screenDepth + options.cameraDepth]\n});\nvar program = new Program(SYSTEM);\n\nprogram.beforeDraw = function(){\n  var cam = this.getPart(sysName+'CAMERA');\n  var scr = this.getPart(sysName+'SCREEN');\n  scr.getScreen().render(cam.getCamera().camera);\n};\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376412208530},"16646145":{"id":16646145,"name":"Camera","settings":"{\"code\":\"var part = new Part();\\n\\nvar options = _.defaults(arguments[0] || {}, {\\n  width: 3,\\n  height: 2,\\n  depth: 1,\\n  mass: 0.01,\\n  color: 0x334433,\\n});\\nvar margin = 0.5;\\n\\npart.setOptions(options);\\n\\nvar material = new THREE.MeshLambertMaterial({ \\n  color: options.color\\n});\\nmaterial = Physijs.createMaterial(material, 0.1, 0.1);\\n\\nvar geo = new THREE.CubeGeometry(\\n    options.width, \\n  \\toptions.height,\\n    options.depth\\n);\\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass); \\nmesh.position.y += options.height/2;\\npart.add(mesh);\\n//back\\nvar conn = new Connector({\\n  name: 'back',\\n  base: [0,0,-options.depth/2],\\n  up: [0,0,-1],\\n  front: [1,0,0]\\n});\\npart.add(conn);\\n//top\\nconn = new Connector({\\n  base: [0,options.height/2,0],\\n    up: [0,1,0]\\n});\\npart.add(conn);\\n//bottom\\nconn = new Connector({\\n  base: [0,-options.height/2,0],\\n  up: [0,-1,0],\\n  front: [-1,0,0]\\n});\\npart.add(conn);\\n\\n\\nmaterial = new THREE.MeshLambertMaterial({ \\n  color: 0x000000\\n});\\n\\nvar radius = Math.min(options.width, options.height)/3;\\nvar geometry = new THREE.CylinderGeometry(\\n  radius, \\n  radius,\\n  margin,\\n  16\\n);\\nmesh = new THREE.Mesh(geometry, material);\\nmesh.position.z = (options.depth + margin)/2;\\nmesh.rotation.x = Math.PI/2;\\npart.add(mesh);\\n\\nvar camera = new CameraSensor(options);\\ncamera.setPosition(0, 0, options.depth/2 + margin);\\ncamera.lookAt(0,0, 2 * (options.depth + margin));\\ncamera.addToPart(part);\\n\\nreturn part;\",\"program\":\"\",\"options\":{\"codeEditor\":true,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":73,\"codeWrapperWidth\":35,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":1,\"cameraPosition\":[20.138969634735364,7.76330524458793,2.0981512596758476],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[0.9666248125461157,0.14922312000530755,-0.12730675087319412],\"folder\":\"Sensors\",\"dependencies\":[],\"pause\":false},\"owner\":\"public\",\"content\":{\"declarations\":{},\"physics\":{},\"connections\":[]},\"pointer\":30,\"counter\":0,\"objectType\":\"PART\"}","code":"var part = new Part();\n\nvar options = _.defaults(arguments[0] || {}, {\n  width: 3,\n  height: 2,\n  depth: 1,\n  mass: 0.01,\n  color: 0x334433,\n});\nvar margin = 0.5;\n\npart.setOptions(options);\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color\n});\nmaterial = Physijs.createMaterial(material, 0.1, 0.1);\n\nvar geo = new THREE.CubeGeometry(\n    options.width, \n  \toptions.height,\n    options.depth\n);\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass); \nmesh.position.y += options.height/2;\npart.add(mesh);\n//back\nvar conn = new Connector({\n  name: 'back',\n  base: [0,0,-options.depth/2],\n  up: [0,0,-1],\n  front: [1,0,0]\n});\npart.add(conn);\n//top\nconn = new Connector({\n  base: [0,options.height/2,0],\n    up: [0,1,0]\n});\npart.add(conn);\n//bottom\nconn = new Connector({\n  base: [0,-options.height/2,0],\n  up: [0,-1,0],\n  front: [-1,0,0]\n});\npart.add(conn);\n\n\nmaterial = new THREE.MeshLambertMaterial({ \n  color: 0x000000\n});\n\nvar radius = Math.min(options.width, options.height)/3;\nvar geometry = new THREE.CylinderGeometry(\n  radius, \n  radius,\n  margin,\n  16\n);\nmesh = new THREE.Mesh(geometry, material);\nmesh.position.z = (options.depth + margin)/2;\nmesh.rotation.x = Math.PI/2;\npart.add(mesh);\n\nvar camera = new CameraSensor(options);\ncamera.setPosition(0, 0, options.depth/2 + margin);\ncamera.lookAt(0,0, 2 * (options.depth + margin));\ncamera.addToPart(part);\n\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1373637714414},"16646146":{"id":16646146,"name":"Screen","settings":"{\"code\":\"var part = new Part();\\n\\nvar options = _.defaults(arguments[0] || {}, {\\n  width: 14,\\n  height: 10,\\n  depth: 5,\\n  unitPixels: 8,\\n  mass: 0.01,\\n  color: 0x444444,\\n});\\nvar margin = options.depth/25;\\n\\npart.setOptions(options);\\n\\nvar material = new THREE.MeshLambertMaterial({ \\n  color: options.color\\n});\\nmaterial = Physijs.createMaterial(material, 0.1, 0.1);\\n\\nvar geo = new THREE.CubeGeometry(\\n    options.width, \\n  \\toptions.height,\\n    options.depth\\n);\\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass); \\nmesh.position.y += options.height/2;\\npart.add(mesh);\\n\\nvar conn = new Connector({\\n  base: [0,0,-options.depth/2],\\n  up: [0,0,-1],\\n  front: [1,0,0]\\n});\\npart.add(conn);\\nconn = new Connector({\\n  base: [0,options.height/2,0]\\n});\\npart.add(conn);\\n\\nvar screen = new CameraScreen(options);\\nscreen.setPosition(0, 0, options.depth/2 + margin);\\nscreen.addToPart(part);\\n\\nreturn part;\",\"program\":\"\",\"options\":{\"codeEditor\":true,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":73,\"codeWrapperWidth\":35,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":1,\"cameraPosition\":[-45.74856168634557,24.654862887671666,12.045764274773031],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[-0.5187161382111729,0.09539063651723302,0.8282632702249496],\"folder\":\"Sensors\",\"dependencies\":[],\"pause\":false},\"owner\":\"public\",\"content\":{\"declarations\":{},\"physics\":{},\"connections\":[]},\"pointer\":29,\"counter\":0,\"objectType\":\"PART\"}","code":"var part = new Part();\n\nvar options = _.defaults(arguments[0] || {}, {\n  width: 14,\n  height: 10,\n  depth: 5,\n  unitPixels: 8,\n  mass: 0.01,\n  color: 0x444444,\n});\nvar margin = options.depth/25;\n\npart.setOptions(options);\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color\n});\nmaterial = Physijs.createMaterial(material, 0.1, 0.1);\n\nvar geo = new THREE.CubeGeometry(\n    options.width, \n  \toptions.height,\n    options.depth\n);\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass); \nmesh.position.y += options.height/2;\npart.add(mesh);\n\nvar conn = new Connector({\n  base: [0,0,-options.depth/2],\n  up: [0,0,-1],\n  front: [1,0,0]\n});\npart.add(conn);\nconn = new Connector({\n  base: [0,options.height/2,0]\n});\npart.add(conn);\n\nvar screen = new CameraScreen(options);\nscreen.setPosition(0, 0, options.depth/2 + margin);\nscreen.addToPart(part);\n\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1373642333127},"16674048":{"id":16674048,"name":"UserCameraScreen","settings":"{\"code\":\"/**\\n * This projects the user camera capture into a plane faced on\\n * a cubic object.\\n * \\n * unitPixels: the quantity of pixels per unit\\n */\\n\\nvar part = new Part();\\n\\nvar options = _.defaults(arguments[0] || {}, {\\n  width: 32,\\n  height: 24,\\n  depth: 8,\\n  mass: 0.5,\\n  unitPixels: 8,\\n  color: 0x444444,\\n});\\nvar margin = options.depth/25;\\n\\npart.setOptions(options);\\n\\nvar material = new THREE.MeshLambertMaterial({ \\n  color: options.color\\n});\\nmaterial = Physijs.createMaterial(material, 0.1, 0.1);\\n\\nvar geo = new THREE.CubeGeometry(\\n    options.width, \\n  \\toptions.height,\\n    options.depth\\n);\\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass); \\nmesh.position.y += options.height/2;\\npart.add(mesh);\\n\\nvar conn = new Connector({\\n  base: [0,0,-options.depth/2],\\n  up: [0,0,-1],\\n  front: [1,0,0]\\n});\\npart.add(conn);\\nconn = new Connector({\\n  base: [0,options.height/2,0]\\n});\\npart.add(conn);\\n\\nvar screen = new UserCameraScreen(options);\\nscreen.setPosition(0, 0, options.depth/2 + margin);\\nscreen.addToPart(part);\\n\\nvar program = new Program(part);\\n\\nprogram.beforeDraw = function (){\\n  \\tthis.getScreen().render();\\n};\\n  \\nreturn part;\",\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":true,\"codeWrapperHeight\":41,\"codeWrapperWidth\":35,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":1,\"cameraPosition\":[-68.55723409375294,64.04838222582791,150.09907342934576],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[0.23485696719287896,0.10081123515814064,0.825507113274116],\"folder\":\"Sensors\",\"dependencies\":[],\"pause\":false,\"connectorRadius\":1.0089470710114898},\"owner\":\"public\",\"content\":{\"declarations\":{},\"physics\":{},\"connections\":[]},\"pointer\":2,\"counter\":0,\"objectType\":\"PART\"}","code":"/**\n * This projects the user camera capture into a plane faced on\n * a cubic object.\n * \n * unitPixels: the quantity of pixels per unit\n */\n\nvar part = new Part();\n\nvar options = _.defaults(arguments[0] || {}, {\n  width: 32,\n  height: 24,\n  depth: 8,\n  mass: 0.5,\n  unitPixels: 8,\n  color: 0x444444,\n});\nvar margin = options.depth/25;\n\npart.setOptions(options);\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color\n});\nmaterial = Physijs.createMaterial(material, 0.1, 0.1);\n\nvar geo = new THREE.CubeGeometry(\n    options.width, \n  \toptions.height,\n    options.depth\n);\nvar mesh = new Physijs.BoxMesh(geo, material, options.mass); \nmesh.position.y += options.height/2;\npart.add(mesh);\n\nvar conn = new Connector({\n  base: [0,0,-options.depth/2],\n  up: [0,0,-1],\n  front: [1,0,0]\n});\npart.add(conn);\nconn = new Connector({\n  base: [0,options.height/2,0]\n});\npart.add(conn);\n\nvar screen = new UserCameraScreen(options);\nscreen.setPosition(0, 0, options.depth/2 + margin);\nscreen.addToPart(part);\n\nvar program = new Program(part);\n\nprogram.beforeDraw = function (){\n  \tthis.getScreen().render();\n};\n  \nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1373886685689},"16674411":{"id":16674411,"name":"TestsCamera","settings":"{\"program\":\"/**\\n * This is a multi functionality demo.\\n * here you have a capture from the users camera,\\n * and a capture from the robots camera.\\n * The robot camera can be directioned with the CAM_SERVO sliderr.\\n * Use arrows to move the robot.\\n * Press and release CTRL to swith to and from robots camera views.\\n * \\n */\\nvar ASSEMBLE = this;\\nvar program = new Program(this);\\nASSEMBLE.addProgram(program);\\n_.extend(ASSEMBLE, { \\n  directions: {\\n    'FRON_LEFT': -1,\\n    'FRON_RIGHT': 1,\\n    'REAR_LEFT': 1,\\n    'REAR_RIGHT': -1\\n  },\\n  straight: {\\n    'FRON_LEFT': 2,\\n    'FRON_RIGHT': 2,\\n    'REAR_LEFT': 2,\\n    'REAR_RIGHT': 2\\n  },\\n  left: {\\n    'FRON_LEFT': -1,\\n    'FRON_RIGHT': 1,\\n    'REAR_LEFT': 1,\\n    'REAR_RIGHT': -1\\n  },\\n  right: {\\n    'FRON_LEFT': 1,\\n    'FRON_RIGHT': -1,\\n    'REAR_LEFT': -1,\\n    'REAR_RIGHT': 1\\n  }\\n});\\nASSEMBLE.bind = ASSEMBLE.straight;\\nvar vel = 30;\\nprogram.keys['+up'] = function(){\\n  //console.log(bind === straight ? 's' : (bind === left ? 'l' : 'r') );\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.enable();\\n    control.setVelocity(_this.bind[c] * _this.directions[c] * vel);\\n  });\\n};\\n\\nprogram.keys['-up'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.disable();\\n  });\\n};\\n\\nprogram.keys['+down'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.enable();\\n    control.setVelocity(_this.bind[c] * _this.directions[c] * -vel);\\n  });\\n};\\n\\nprogram.keys['-down'] = function(){\\n  var _this = this;\\n  _.keys(_this.directions).map(function(c){\\n  \\tvar control = _this.getController(c);\\n    control.disable();\\n  });\\n};\\n\\nprogram.keys['+left'] = function(){\\n  this.bind = this.left;\\n};\\n\\nprogram.keys['+right'] = function(){\\n  this.bind = this.right;\\n};\\n\\nprogram.keys['-right'] = program.keys['-left'] = function(){\\n  this.bind = this.straight;\\n};\\n\\nprogram.beforeDraw = function(){\\n  var cam = this.getPart('CAMERA').getCamera().camera;\\n  var screen = this.getPart('BOT_SCREEN').getScreen();\\n  screen.render(cam);\\n};\\n\\nprogram.keys['-ctrl'] = function(){\\n  var cam = this.getPart('CAMERA').getCamera().camera;\\n  if (Assemblino.simulator.camera===cam){\\n    Assemblino.simulator.camera = cam._bkCamera;\\n  } else {\\n \\tcam._bkCamera = Assemblino.simulator.camera;\\n    Assemblino.simulator.camera = cam;\\n  }\\n};\\n\",\"options\":{\"Toggled\":false,\"autoLoad\":true,\"autoStart\":true,\"codeWrapperHeight\":68,\"codeWrapperOpacity\":100,\"codeWrapperWidth\":39,\"moveWithForce\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":5,\"codeEditor\":false,\"cameraPosition\":[-194.1267907728552,93.56977325357617,-144.40078242395847],\"cameraRotation\":[-0.8440911473434881,-0.09998790657136196,-0.062212204516154196],\"cameraTarget\":[0,0,0],\"folder\":\"Demos\",\"dependencies\":[\"BasicCube\",\"Wheel\",\"BasicCircularTube\",\"Camera\",\"UserCameraScreen\",\"Screen\"],\"pause\":false,\"connectorRadius\":1,\"scale\":\"centimeter\",\"softHandling\":false,\"link\":\"http://assemblino.com/show/public16674411.html\",\"embed\":\"<a href='http://assemblino.com/show/public16674411.html'><img src='http://assemblino.com/show/public16674411.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"declarations\":{\"BASE\":{\"object\":\"BasicCube\",\"options\":{\"depth\":35,\"height\":5,\"width\":15,\"mass\":1,\"friction\":0.8579636131503351,\"restitution\":0.08171082030003192,\"color\":8857150,\"opacity\":1,\"margin\":0.1,\"connectorSet\":\"male\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"BASE\"}},\"FRONT_LEFT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":11155005,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":64,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"FRONT_LEFT\"}},\"FRONT_RIGHT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":11155005,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":64,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"FRONT_RIGHT\"}},\"REAR_LEFT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":3633322,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":64,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"REAR_LEFT\"}},\"REAR_RIGHT\":{\"object\":\"Wheel\",\"options\":{\"length\":4,\"innerDiameter\":2,\"outerDiameter\":15,\"mass\":0.1,\"friction\":0.99,\"restitution\":0.5,\"color\":3633322,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":64,\"margin\":2,\"heightSegments\":1,\"cut\":0,\"name\":\"REAR_RIGHT\"}},\"HEAD\":{\"object\":\"BasicCube\",\"options\":{\"depth\":5,\"height\":4,\"width\":5,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":2900903,\"opacity\":0.8,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"HEAD\"}},\"CAMERA\":{\"object\":\"Camera\",\"options\":{\"width\":8,\"height\":3,\"depth\":12,\"mass\":0.1,\"color\":13789256,\"name\":\"CAMERA\"}},\"USER_CAMERA\":{\"object\":\"UserCameraScreen\",\"options\":{\"width\":32,\"height\":16,\"depth\":8,\"mass\":0.5,\"color\":7829367,\"unitPixels\":8,\"name\":\"USER_CAMERA\"}},\"BOT_SCREEN\":{\"object\":\"Screen\",\"options\":{\"width\":32,\"height\":16,\"depth\":8,\"unitPixels\":8,\"mass\":0.5,\"color\":5251104,\"name\":\"BOT_SCREEN\"}}},\"physics\":{\"BASE\":{\"position\":[-32.21329879760742,7.5276288986206055,-73.43167114257812],\"quaternion\":[0.9667092561721802,-0.00007962506788317114,-0.25587737560272217,-0.00001907252772070933]},\"FRONT_LEFT\":{\"position\":[-14.711363792419434,7.531338214874268,-66.1346664428711],\"quaternion\":[0.6838684678077698,0.5053564310073853,0.17980843782424927,-0.4945782423019409]},\"FRONT_RIGHT\":{\"position\":[-34.87364959716797,7.531259536743164,-54.65709686279297],\"quaternion\":[-0.6788352131843567,0.6878800988197327,0.19779270887374878,-0.163956418633461]},\"REAR_LEFT\":{\"position\":[-49.71529769897461,7.53187370300293,-80.72882080078125],\"quaternion\":[0.6982560753822327,-0.5520139932632446,0.11102712154388428,0.4420316517353058]},\"REAR_RIGHT\":{\"position\":[-29.553117752075195,7.5319390296936035,-92.20628356933594],\"quaternion\":[-0.24625945091247559,-0.5419807434082031,0.6627811193466187,-0.4542403817176819]},\"HEAD\":{\"position\":[-24.792749404907227,12.222397804260254,-60.39449691772461],\"quaternion\":[0.9667131304740906,0.00007969548460096121,-0.25586262345314026,-0.00015826642629690468]},\"CAMERA\":{\"position\":[-24.792877197265625,15.92239761352539,-60.39337158203125],\"quaternion\":[0.00017689637024886906,-0.413678377866745,-0.00002978509473905433,0.9104230999946594]},\"USER_CAMERA\":{\"position\":[-18.66545867919922,7.999996662139893,21.01067543029785],\"quaternion\":[2.6529669128194655e-8,0.9929608702659607,0.0000018252831068821251,0.11844278126955032]},\"BOT_SCREEN\":{\"position\":[44.615020751953125,7.999964714050293,-25.03862953186035],\"quaternion\":[0.000005933432930760318,-0.6868849992752075,0.0000071917274908628315,0.7267661094665527]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"FRONT_RIGHT\",\"fixedIndex\":49,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"FRON_RIGHT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":1,\"mirror\":false,\"reverse\":false,\"gui\":true}},{\"fixed\":\"BASE\",\"moved\":\"FRONT_LEFT\",\"fixedIndex\":42,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"FRON_LEFT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":1,\"mirror\":false,\"reverse\":false,\"gui\":true}},{\"fixed\":\"BASE\",\"moved\":\"REAR_LEFT\",\"fixedIndex\":55,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"REAR_LEFT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":1,\"mirror\":false,\"reverse\":false,\"gui\":true}},{\"fixed\":\"BASE\",\"moved\":\"REAR_RIGHT\",\"fixedIndex\":48,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"REAR_RIGHT\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0,\"rpm\":1,\"mirror\":false,\"reverse\":false,\"gui\":true}},{\"fixed\":\"BASE\",\"moved\":\"HEAD\",\"fixedIndex\":28,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"fix0\",\"force\":10000,\"invert\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true,\"mirror\":false}},{\"fixed\":\"HEAD\",\"moved\":\"CAMERA\",\"fixedIndex\":1,\"movedIndex\":2,\"controllerOptions\":{\"type\":\"servo\",\"name\":\"CAM_SERVO\",\"rpm\":200,\"torque\":5,\"isEnabled\":true,\"angle\":-78.52163921869015,\"low\":-180,\"high\":180,\"invert\":true,\"offset\":-0.1,\"gui\":true,\"mirror\":false}}],\"connectorOptions\":[],\"options\":{\"name\":\"ASSEMBLE0\"}};\nASSEMBLE.setOptions(_.extend({\"name\":\"ASSEMBLE0\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376410205205},"16746995":{"id":16746995,"name":"GearProbe1","settings":"{\"program\":\"/**\\n * Some experiences made to chack wether one can implement gear systems.\\n * \\n * The result is promissing but there are some behavihours which are not correct.\\n * The gears teeth seam to sink sometimes into each other.\\n * \\n */ \",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":22,\"codeWrapperWidth\":50,\"moveWithForce\":true,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":45,\"simulationQuality\":3,\"cameraPosition\":[7.748373816528375,384.90853226043106,248.32176432037247],\"cameraRotation\":[0.10438525609890646,0.703688781987611,0.7877255615428818],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"RoundTube\",\"Particle\",\"AuxRoundTube\",\"BasicCube\"],\"connectorRadius\":1.2536635901299682,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public16746995.html\",\"embed\":\"<a href='http://assemblino.com/show/public16746995.html'><img src='http://assemblino.com/show/public16746995.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"declarations\":{\"RoundTube1\":{\"object\":\"RoundTube\",\"options\":{\"length\":5,\"innerDiameter\":10,\"outerDiameter\":15,\"mass\":1,\"color\":4478310,\"opacity\":1,\"segments\":16,\"name\":\"RoundTube1\"}},\"RoundTube10\":{\"object\":\"RoundTube\",\"options\":{\"length\":5,\"innerDiameter\":5,\"outerDiameter\":7,\"mass\":1,\"color\":4478310,\"opacity\":1,\"segments\":16,\"name\":\"RoundTube10\"}},\"RoundTube2_particle\":{\"object\":\"Particle\",\"options\":{\"length\":10,\"innerDiameter\":5,\"outerDiameter\":15,\"mass\":0.5,\"color\":4478310,\"opacity\":1,\"segments\":12,\"name\":\"RoundTube2_particle\",\"collide\":false,\"size\":0.05,\"show\":false}},\"COMPENSATED\":{\"object\":\"AuxRoundTube\",\"options\":{\"length\":5,\"innerDiameter\":5,\"outerDiameter\":18,\"mass\":1,\"color\":6702170,\"opacity\":1,\"segments\":8,\"name\":\"COMPENSATED\",\"collide\":false,\"size\":0.05,\"show\":false}},\"SUPPORT\":{\"object\":\"BasicCube\",\"options\":{\"depth\":5,\"height\":50,\"width\":5,\"mass\":10,\"friction\":0.9,\"restitution\":0,\"color\":10066346,\"opacity\":1,\"margin\":5,\"connectorSet\":\"male\",\"connectorDistance\":5,\"connectorRadius\":0.5,\"name\":\"SUPPORT\"}},\"ANOTHER\":{\"object\":\"AuxRoundTube\",\"options\":{\"length\":5,\"innerDiameter\":5,\"outerDiameter\":15,\"mass\":1,\"color\":4482648,\"opacity\":1,\"segments\":8,\"name\":\"ANOTHER\",\"collide\":false,\"size\":0.05,\"show\":false}}},\"physics\":{\"RoundTube1\":{\"position\":[-34.017295837402344,2.4999935626983643,19.94144630432129],\"quaternion\":[-8.945697800299968e-7,0.9871054291725159,-0.00000131262765989959,0.16007140278816223]},\"RoundTube10\":{\"position\":[-39.80284118652344,0.5001071095466614,-49.835018157958984],\"quaternion\":[0.5913738012313843,0.3875267803668976,-0.38765525817871094,0.5914587378501892]},\"RoundTube2_particle\":{\"position\":[35.59302520751953,9.984079360961914,1.7944960594177246],\"quaternion\":[-0.0013190570753067732,-0.6537786722183228,-0.0003005089529324323,0.7566846609115601]},\"COMPENSATED\":{\"position\":[24.214824676513672,10.011487007141113,3.4636433124542236],\"quaternion\":[-0.0013190570753067732,-0.6537786722183228,-0.0003005088656209409,0.7566846609115601]},\"SUPPORT\":{\"position\":[48.57477569580078,2.5000107288360596,9.807918548583984],\"quaternion\":[0.4005645513534546,0.5827547907829285,0.58270663022995,-0.4004969596862793]},\"ANOTHER\":{\"position\":[48.57391357421875,9.999258995056152,9.810589790344238],\"quaternion\":[-0.00010083991946885362,0.5660327076911926,-0.00014503736747428775,0.8243827819824219]}},\"connections\":[{\"fixed\":\"COMPENSATED\",\"moved\":\"RoundTube2_particle\",\"movedIndex\":\"center\",\"fixedIndex\":\"aux\",\"controllerOptions\":{\"name\":\"massBalance\",\"type\":\"fix\",\"isEnabled\":true,\"angle\":0}},{\"fixed\":\"SUPPORT\",\"moved\":\"COMPENSATED\",\"fixedIndex\":20,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR\",\"velocity\":3,\"torque\":100000,\"isEnabled\":true,\"low\":-5,\"high\":5,\"step\":0.01,\"invert\":false,\"offset\":0,\"rpm\":1}},{\"fixed\":\"SUPPORT\",\"moved\":\"ANOTHER\",\"fixedIndex\":23,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"OTHER\",\"low\":1,\"high\":0,\"invert\":false,\"offset\":0}}],\"programs\":[],\"connectorOptions\":[],\"options\":{\"name\":\"id0\"}};\nASSEMBLE.setOptions(_.extend({\"name\":\"id0\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407357361},"16746996":{"id":16746996,"name":"RoundTube","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":63,\"codeWrapperWidth\":35,\"moveWithForce\":true,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":1,\"cameraPosition\":[-142.85839834250433,77.73701735419306,68.64774325869082],\"cameraRotation\":[-0.46301892188639304,0.19775502675591963,0.35515755610178884],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[],\"connectorRadius\":1.8829346392917687},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"PART\"}","code":"var options = _.defaults(arguments[0] || {}, {\n  length: 10,\n  innerDiameter: 5,\n  outerDiameter: 15,\n  mass: 1,\n  color: 0x445566,\n  opacity: 1,\n  segments: 12, \n});\n\nvar part = new Part();\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\nmaterial = Physijs.createMaterial(material, 0.8, 0.3);\n\nvar innerSize = options.innerDiameter * Math.PI / options.segments;\nvar outerSize = options.outerDiameter * Math.PI / options.segments;\nvar thickness = (options.outerDiameter-options.innerDiameter)/2;\n\nvar geoOut;\nvar mesh; \n\nvar zOffset = options.innerDiameter/2+thickness/2;\n//first\n  geoOut = new THREE.CubeGeometry(\n    innerSize, \n    options.length,\n    thickness\n  );\n  mesh = new Physijs.BoxMesh(geoOut, material, options.mass);\n  part.add(mesh);\n\nfor (var i = 1; i < options.segments; i++){\n  geoOut = new THREE.CubeGeometry(\n    innerSize, \n    options.length,\n    thickness\n  );\n  mesh = new Physijs.BoxMesh(geoOut, material, options.mass);\n  mesh.translateZ(-zOffset);\n  mesh.rotateOnAxis(Vec3(0,1,0), (i)*2*Math.PI/options.segments);\n  mesh.translateZ(options.innerDiameter/2+thickness/2);\n  part.add(mesh);\n}\npart.mesh.position.y += options.length/2;\npart.mesh.position.z += zOffset;\nvar conn = new Connector({\n  base: [0,0,-zOffset]\n});\npart.add(conn);\npart.setOptions(options);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1374595790914},"16746997":{"id":16746997,"name":"Particle","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":63,\"codeWrapperWidth\":35,\"moveWithForce\":true,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":1,\"cameraPosition\":[15.033067647440461,2.206157232677921,-18.515670906769156],\"cameraRotation\":[0.38260526343599516,0.028158043871055347,-0.7647326300992319],\"cameraTarget\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[],\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/**\n * An implementation of a particle abstraction, \n * consisting of a sphere and a connector.\n */ \nvar part = new Part();\n\nvar options = _.defaults(arguments[0] || {}, {\n  mass: 0.01,\n  radius: 0.9,\n  color: 0xffffff,\n  collide: true,\n  show: true\n});\nvar size = options.radius;\n\nvar material = new THREE.MeshBasicMaterial({ \n  color: options.color,\n  transparent: true,\n  opacity: options.show ? 1 : 0\n});\nmaterial = Physijs.createMaterial(material, 0, 0);\n\nvar geoOut = new THREE.SphereGeometry(size,8);\nvar mesh = new Physijs.BoxMesh(geoOut, material, options.mass);\npart.add(mesh);\n\npart.mesh.position.y += size/2;\nvar conn = new Connector({\n  name: 'center',\n  base: [0,0,0],\n  touchable: options.show\n});\npart.add(conn);\n!options.collide && part.setCollisionMask(0,0);\npart.setOptions(options);\n\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657125035},"16746999":{"id":16746999,"name":"AuxRoundTube","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":63,\"codeWrapperWidth\":35,\"moveWithForce\":true,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":1,\"cameraPosition\":[25.18559038518777,43.87049433776308,49.19658977857854],\"cameraRotation\":[0.22196172737034653,0.23784243428148621,0.7884587260437754],\"cameraTarget\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[],\"connectorRadius\":1.8829346392917687,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"var options = _.defaults(arguments[0] || {}, {\n  length: 10,\n  innerDiameter: 5,\n  outerDiameter: 15,\n  mass: 1,\n  color: 0x445566,\n  opacity: 1,\n  segments: 12, \n});\n\nvar part = new Part();\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\nmaterial = Physijs.createMaterial(material, 0.8, 0.3);\n\nvar innerSize = options.innerDiameter * Math.PI / options.segments;\nvar outerSize = options.outerDiameter * Math.PI / options.segments;\nvar thickness = (options.outerDiameter-options.innerDiameter)/2;\n\nvar geoOut;\nvar mesh; \n\nvar zOffset = options.innerDiameter/2+thickness/2;\n//first\n  geoOut = new THREE.CubeGeometry(\n    innerSize, \n    options.length,\n    thickness\n  );\n  mesh = new Physijs.BoxMesh(geoOut, material, options.mass);\n  part.add(mesh);\n\nfor (var i = 1; i < options.segments; i++){\n  geoOut = new THREE.CubeGeometry(\n    innerSize, \n    options.length,\n    thickness\n  );\n  mesh = new Physijs.BoxMesh(geoOut, material, 0);\n  mesh.translateZ(-zOffset);\n  mesh.rotateOnAxis(Vec3(0,1,0), (i)*2*Math.PI/options.segments);\n  mesh.translateZ(options.innerDiameter/2+thickness/2);\n  part.add(mesh);\n}\npart.mesh.position.y += options.length/2;\npart.mesh.position.z += zOffset;\nvar conn = new Connector({\n  name: 'center',\n  base: [0,0,-zOffset]\n});\npart.add(conn);\nconn = new Connector({\n  name: 'aux',\n  base: [0,0,-2*zOffset],\n  touchable: false\n});\npart.add(conn);\npart.setOptions(options);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376656988897},"17491710":{"id":17491710,"name":"Part01","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":71,\"codeWrapperWidth\":45,\"moveWithForce\":true,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-123.51594476221331,90.90978551874183,-30.629109010965625],\"cameraRotation\":[-0.8092257206545256,0.28132443583854466,-0.11677250849598153],\"cameraTarget\":[0,0,0],\"folder\":\"Examples/Parts\",\"dependencies\":[],\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public17491710.html\",\"embed\":\"<a href='http://assemblino.com/show/public17491710.html'><img src='http://assemblino.com/show/public17491710.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/**\n * This example creates a sphere as the center of mass body,\n * a cube without physical interaction around it and one connector.\n * \n * A program is defined to change the cube size periodically.\n * \n * Next: also in Tutorials check Assemble01\n */ \n\n/*\nAll this code in the editor will be used to defined a function.\nIt expects to receive no arguments or just one argument\nwhich is an object with several options defining properties.\n\nThis next piece of code gets the arguments and extend them\nwith default values if they are not provided.\n\nHere we are using undesrcore.js libray, the function _.defaults\n\nIt is important that for each part you program, you include this.\n*/\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('Part01_'), //assign an initial name. nextName creates sequential sufixes.\n  sphereColor: 0x555555, //colors can be defined as hex 0xFFFFFF or integer 0-16777215\n  boxColor: randomColor(),\n  size: 5\n});\n\n//this is the object that will be returned by this function!!\n//adds a mesh with physical properties\nvar part = new Part({\n  shape: 'sphere',\n  color: options.sphereColor,\n  size: options.size,\n  material: 'rubber',\n  restitution: 0.9,\n  y: options.size/2\n});\n\n//adds\npart.addBody({\n  shape: 'cylinder',\n  color: options.sphereColor,\n  diameter: options.size,\n  height: options.size/2,\n  material: 'steel',\n  restitution: 0.9,\n  y: options.size/2\n});\n\n//adds to the part a mesh without physical interaction\nvar dress = part.addDress({\n  shape: 'box',\n  size: options.size * 0.8,\n  material: 'plastic', //this uses a predefined material, plastic, as template\n  color: options.boxColor, //use the color received from the arguments\n  rz: Math.PI/5 //rotation around z. could also be defined as rotation: [0,0,Math.PI/5]\n});\n\n//add as many connectors as you want\n//vectors can be defined as arrays\npart.addConnector({\n  name: 'first', //this identifies the connector. If not defined it will be identifyed by an index.\n  base: [0,0,-options.size/2], //the position of\n  up: [0,0,-1], //the direction of y axis. default [0,1,0]\n  front: [0,1,0], //if you define up, define also front, z axis. they should be orthogonal. default [1,0,0],\n  prefer: 'point', //the kind of constraint this connector prefers. it will be the default.\n  accept: ['point','fix','hinge', 'servo', 'motor'] //the kinds of constraints the connector accepts\n});\n\npart.addConnector({\n  name: 'second', \n  base: [0,0,options.size/2], \n  up: [0,0,1], \n  front: [0,1,0], \n  prefer: 'fix', \n  accept: ['point','fix'] \n});\n\n//programs are optional. they allow to change some properties dinamically\n//listen and process user keyboard commands and mouse clicks\n//use the part as argument\nvar program = new Program(part);\n\n//this is the first function to be called when objects and constraints are \n//added to scene\nprogram.init = function(){\n    this.periodic = true;\n\tthis.initialTime = Date.now();\n};\n\n//called before rendering the scene, \n//.afterDraw would becalled afterwards\n//.step is called before each simulation step\nprogram.beforeDraw = function(){\n    if (!this.periodic) return;\n\tvar time = Date.now() - this.initialTime;\n    var scale = 1 + 0.1*Math.sin(time/1000);\n\tdress.scale.x = dress.scale.y = dress.scale.z = scale;  \n};  \n\n//clicking this objects name will change the color\n//.mouse['*'] standes for clicking this part\nprogram.mouse['*'] = function(){\n\tdress.material.color.set(randomColor());  \n};\n\n//clicking space will toggle the scaling\nprogram.keys['+space'] = function(){\n\tthis.periodic = !this.periodic; \n};\n//save the options to the object!!\npart.setOptions(options);\n//return the object !!\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376412271256},"17500096":{"id":17500096,"name":"Assemble01","settings":"{\"program\":\"/**\\n * This assemble uses only replications of Examples/Parts/Part01, with different sizes.\\n * \\n * Try the several operations in the interaction menu.\\n * \\n * To flip or rotate the parts, it helps sometimes to Pause the simulation in Interaction » Pause\\n * \\n * To Connect the parts and create the motor contraint enable Connection Mode, click and drag the connector\\n * of one part to the connector of other part. A menu will be displayed where you can define the type of constraint.\\n * \\n * Something is behaving weird? You can undo/redo the operations you perform. \\n *\\n * When connecting, sometimes the axis orientation of the connectors, the green y, when aligned, may\\n * try to push a part inside the other. Try inverting the direction of the connection.\\n */ \",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":true,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[41.00666607583603,42.47331496207911,-68.16651144606543],\"cameraRotation\":[0,0,0],\"cameraTarget\":[0,0,0],\"folder\":\"Examples/Assembles/\",\"dependencies\":[\"Part01\"],\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public17500096.html\",\"embed\":\"<a href='http://assemblino.com/show/public17500096.html'><img src='http://assemblino.com/show/public17500096.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"declarations\":{\"FIRST_PART\":{\"name\":\"FIRST_PART\",\"path\":[\"FIRST_PART\"],\"object\":\"Part01\",\"options\":{\"name\":\"FIRST_PART\",\"sphereColor\":10761525,\"boxColor\":3355443,\"size\":10}},\"SECOND_PART\":{\"name\":\"SECOND_PART\",\"path\":[\"SECOND_PART\"],\"object\":\"Part01\",\"options\":{\"name\":\"SECOND_PART\",\"sphereColor\":3486884,\"boxColor\":3355443,\"size\":5}},\"CLONE_PART0\":{\"name\":\"CLONE_PART0\",\"path\":[\"CLONE_PART0\"],\"object\":\"Part01\",\"options\":{\"name\":\"CLONE_PART0\",\"sphereColor\":3384477,\"boxColor\":3355443,\"size\":5}}},\"physics\":{\"FIRST_PART\":{\"position\":[-13.604887008666992,7.500011444091797,-0.4311657249927521],\"quaternion\":[-0.632855236530304,-0.000027923928428208455,0.7742701768875122,0.00003366607052157633]},\"SECOND_PART\":{\"position\":[-6.254880905151367,7.492361068725586,-1.9232823848724365],\"quaternion\":[0.4100341200828552,0.6568347811698914,0.3355073034763336,0.5365397334098816]},\"CLONE_PART0\":{\"position\":[-20.905033111572266,6.755809783935547,1.054344654083252],\"quaternion\":[-0.4675951302051544,-0.43103668093681335,0.6955721378326416,0.33427777886390686]}},\"connections\":[{\"fixed\":\"FIRST_PART\",\"moved\":\"SECOND_PART\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR\",\"velocity\":3,\"torque\":1000,\"isEnabled\":true,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":true,\"offset\":0,\"rpm\":1}},{\"fixed\":\"FIRST_PART\",\"moved\":\"CLONE_PART0\",\"fixedIndex\":1,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"point\",\"name\":\"FIXED\"}}],\"programs\":[],\"connectorOptions\":[],\"options\":{}};\nASSEMBLE.setOptions(_.extend({},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376406855097},"17501633":{"id":17501633,"name":"Assemble02","settings":"{\"code\":\"var ASSEMBLE = new Assemble();\\nASSEMBLE.setOptions(arguments[0]);\\nASSEMBLE.content = {\\\"declarations\\\":{\\\"BASE\\\":{\\\"name\\\":\\\"BASE\\\",\\\"path\\\":[\\\"BASE\\\"],\\\"object\\\":\\\"BasicPlatform\\\",\\\"options\\\":{\\\"depth\\\":25,\\\"height\\\":5,\\\"width\\\":15,\\\"mass\\\":0.2,\\\"friction\\\":0.9,\\\"restitution\\\":0,\\\"color\\\":11607325,\\\"opacity\\\":0.7946627131208303,\\\"connectorMargin\\\":5,\\\"name\\\":\\\"BASE\\\"}},\\\"WHEEL1\\\":{\\\"name\\\":\\\"WHEEL1\\\",\\\"path\\\":[\\\"WHEEL1\\\"],\\\"object\\\":\\\"Wheel\\\",\\\"options\\\":{\\\"length\\\":2,\\\"innerDiameter\\\":3,\\\"outerDiameter\\\":10,\\\"mass\\\":0.02,\\\"friction\\\":0.99,\\\"restitution\\\":0.5,\\\"color\\\":2236962,\\\"opacity\\\":1,\\\"units\\\":\\\"cm\\\",\\\"radiusSegments\\\":24,\\\"margin\\\":0.25,\\\"heightSegments\\\":1,\\\"cut\\\":0,\\\"name\\\":\\\"WHEEL1\\\"}},\\\"WHEEL2\\\":{\\\"name\\\":\\\"WHEEL2\\\",\\\"path\\\":[\\\"WHEEL2\\\"],\\\"object\\\":\\\"Wheel\\\",\\\"options\\\":{\\\"length\\\":2,\\\"innerDiameter\\\":3,\\\"outerDiameter\\\":10,\\\"mass\\\":0.02,\\\"friction\\\":0.99,\\\"restitution\\\":0.5,\\\"color\\\":2236962,\\\"opacity\\\":1,\\\"units\\\":\\\"cm\\\",\\\"radiusSegments\\\":24,\\\"margin\\\":0.25,\\\"heightSegments\\\":1,\\\"cut\\\":0,\\\"name\\\":\\\"WHEEL2\\\"}},\\\"WHEEL3\\\":{\\\"name\\\":\\\"WHEEL3\\\",\\\"path\\\":[\\\"WHEEL3\\\"],\\\"object\\\":\\\"Wheel\\\",\\\"options\\\":{\\\"length\\\":2,\\\"innerDiameter\\\":3,\\\"outerDiameter\\\":10,\\\"mass\\\":0.02,\\\"friction\\\":0.99,\\\"restitution\\\":0.5,\\\"color\\\":2236962,\\\"opacity\\\":1,\\\"units\\\":\\\"cm\\\",\\\"radiusSegments\\\":24,\\\"margin\\\":0.25,\\\"heightSegments\\\":1,\\\"cut\\\":0,\\\"name\\\":\\\"WHEEL3\\\"}}},\\\"physics\\\":{\\\"BASE\\\":{\\\"position\\\":[-13.272838592529297,4.990916728973389,18.45039939880371],\\\"quaternion\\\":[-0.00027406556182540953,0.004992923699319363,-0.00020200954168103635,0.9999874830245972],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]},\\\"WHEEL1\\\":{\\\"position\\\":[-21.922101974487305,4.997831344604492,28.53702163696289],\\\"quaternion\\\":[0.6708082556724548,0.6682822108268738,0.22407272458076477,-0.23066550493240356],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]},\\\"WHEEL2\\\":{\\\"position\\\":[-4.423370361328125,4.99781608581543,28.362455368041992],\\\"quaternion\\\":[0.4689832329750061,-0.46376633644104004,0.5291073322296143,0.5338735580444336],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]},\\\"WHEEL3\\\":{\\\"position\\\":[-22.12254524230957,4.998236179351807,8.538524627685547],\\\"quaternion\\\":[0.6360681056976318,0.632616400718689,0.3093286454677582,-0.3154832422733307],\\\"linear\\\":[0,0,0],\\\"angular\\\":[0,0,0]}},\\\"connections\\\":[{\\\"fixed\\\":\\\"BASE\\\",\\\"moved\\\":\\\"WHEEL2\\\",\\\"fixedIndex\\\":34,\\\"movedIndex\\\":0,\\\"controllerOptions\\\":{\\\"type\\\":\\\"motor\\\",\\\"name\\\":\\\"MOTOR1\\\",\\\"velocity\\\":0.5,\\\"torque\\\":1000,\\\"isEnabled\\\":false,\\\"low\\\":-20,\\\"high\\\":20,\\\"step\\\":0.1,\\\"invert\\\":false,\\\"offset\\\":0}},{\\\"fixed\\\":\\\"BASE\\\",\\\"moved\\\":\\\"WHEEL1\\\",\\\"fixedIndex\\\":39,\\\"movedIndex\\\":0,\\\"controllerOptions\\\":{\\\"type\\\":\\\"motor\\\",\\\"name\\\":\\\"MOTOR2\\\",\\\"velocity\\\":0.5,\\\"torque\\\":1000,\\\"isEnabled\\\":false,\\\"low\\\":-20,\\\"high\\\":20,\\\"step\\\":0.1,\\\"invert\\\":false,\\\"offset\\\":0}},{\\\"fixed\\\":\\\"BASE\\\",\\\"moved\\\":\\\"WHEEL3\\\",\\\"fixedIndex\\\":35,\\\"movedIndex\\\":0,\\\"controllerOptions\\\":{\\\"type\\\":\\\"motor\\\",\\\"name\\\":\\\"WHEEL3\\\",\\\"velocity\\\":0.5,\\\"torque\\\":1000,\\\"isEnabled\\\":false,\\\"low\\\":-20,\\\"high\\\":20,\\\"step\\\":0.1,\\\"invert\\\":false,\\\"offset\\\":0}}],\\\"programs\\\":[]};\\nreturn ASSEMBLE;\",\"program\":\"/**\\n * <h3>Exercise: Include one more wheel.</h3>\\n * This platform misses a wheel. To include one of the same wheels,\\n * you can click one of those wheels, and clone it Interaction » (wheel name) » clone.\\n * \\n * If Interaction » Connection Mode is enabled, to click the wheel you must click one of its connectors. If not, just click any \\n * place of the wheel.\\n *\\n * Disable Interaction » Soft handling. Soft handling is used to move the parts while still running the simulation. The\\n * parts will collide. If soft handling is disabled, object are moved overriding their positions, without\\n * simulation, so you can move parts trough others. Soft Handling is usefull sometimes in complicated \\n * connections, as those with linear motors.\\n * \\n * After cloning, connect the wheel to the base, by enabling Connection mode and dragging the wheel's\\n * connector to one of the bases's connector.\\n * \\n * Regard the direction of the y, green axis in the connectors. When connections are made, all axis of both connectors will\\n * try to be aligned with the same origin. If you choose 'invert' in the connection menu, the axis will oppose. Choosing\\n * the wrong direction may lead to erroneous alignment and some strange simulation behavior.\\n * \\n */ \",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[75.8673164173687,61.128428576024916,-20.589212048684217],\"cameraRotation\":[0,0,0],\"cameraTarget\":[0,0,0],\"folder\":\"Examples/Assembles\",\"dependencies\":[\"BasicPlatform\",\"Wheel\",\"BasicCircularTube\"],\"connectorRadius\":0.5},\"owner\":\"public\",\"content\":{\"declarations\":{\"BASE\":{\"name\":\"BASE\",\"path\":[\"BASE\"],\"object\":\"BasicPlatform\",\"options\":{\"depth\":25,\"height\":5,\"width\":15,\"mass\":0.2,\"friction\":0.9,\"restitution\":0,\"color\":11607325,\"opacity\":0.7946627131208303,\"connectorMargin\":5,\"name\":\"BASE\"}},\"WHEEL1\":{\"name\":\"WHEEL1\",\"path\":[\"WHEEL1\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL1\"}},\"WHEEL2\":{\"name\":\"WHEEL2\",\"path\":[\"WHEEL2\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL2\"}},\"WHEEL3\":{\"name\":\"WHEEL3\",\"path\":[\"WHEEL3\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL3\"}}},\"physics\":{\"BASE\":{\"position\":[-13.272838592529297,4.990916728973389,18.45039939880371],\"quaternion\":[-0.00027406556182540953,0.004992923699319363,-0.00020200954168103635,0.9999874830245972],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"WHEEL1\":{\"position\":[-21.922101974487305,4.997831344604492,28.53702163696289],\"quaternion\":[0.6708082556724548,0.6682822108268738,0.22407272458076477,-0.23066550493240356],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"WHEEL2\":{\"position\":[-4.423370361328125,4.99781608581543,28.362455368041992],\"quaternion\":[0.4689832329750061,-0.46376633644104004,0.5291073322296143,0.5338735580444336],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"WHEEL3\":{\"position\":[-22.12254524230957,4.998236179351807,8.538524627685547],\"quaternion\":[0.6360681056976318,0.632616400718689,0.3093286454677582,-0.3154832422733307],\"linear\":[0,0,0],\"angular\":[0,0,0]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"WHEEL2\",\"fixedIndex\":34,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR1\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL1\",\"fixedIndex\":39,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR2\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL3\",\"fixedIndex\":35,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"WHEEL3\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0}}],\"programs\":[]},\"pointer\":23,\"objectType\":\"ASSEMBLE\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.setOptions(arguments[0]);\nASSEMBLE.content = {\"declarations\":{\"BASE\":{\"name\":\"BASE\",\"path\":[\"BASE\"],\"object\":\"BasicPlatform\",\"options\":{\"depth\":25,\"height\":5,\"width\":15,\"mass\":0.2,\"friction\":0.9,\"restitution\":0,\"color\":11607325,\"opacity\":0.7946627131208303,\"connectorMargin\":5,\"name\":\"BASE\"}},\"WHEEL1\":{\"name\":\"WHEEL1\",\"path\":[\"WHEEL1\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL1\"}},\"WHEEL2\":{\"name\":\"WHEEL2\",\"path\":[\"WHEEL2\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL2\"}},\"WHEEL3\":{\"name\":\"WHEEL3\",\"path\":[\"WHEEL3\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL3\"}}},\"physics\":{\"BASE\":{\"position\":[-13.272838592529297,4.990916728973389,18.45039939880371],\"quaternion\":[-0.00027406556182540953,0.004992923699319363,-0.00020200954168103635,0.9999874830245972],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"WHEEL1\":{\"position\":[-21.922101974487305,4.997831344604492,28.53702163696289],\"quaternion\":[0.6708082556724548,0.6682822108268738,0.22407272458076477,-0.23066550493240356],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"WHEEL2\":{\"position\":[-4.423370361328125,4.99781608581543,28.362455368041992],\"quaternion\":[0.4689832329750061,-0.46376633644104004,0.5291073322296143,0.5338735580444336],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"WHEEL3\":{\"position\":[-22.12254524230957,4.998236179351807,8.538524627685547],\"quaternion\":[0.6360681056976318,0.632616400718689,0.3093286454677582,-0.3154832422733307],\"linear\":[0,0,0],\"angular\":[0,0,0]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"WHEEL2\",\"fixedIndex\":34,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR1\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL1\",\"fixedIndex\":39,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR2\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL3\",\"fixedIndex\":35,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"WHEEL3\",\"velocity\":0.5,\"torque\":1000,\"isEnabled\":false,\"low\":-20,\"high\":20,\"step\":0.1,\"invert\":false,\"offset\":0}}],\"programs\":[]};\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1374501502791},"17503134":{"id":17503134,"name":"Assemble03","settings":"{\"program\":\"/**\\n * \\n * <b>Exercise: connect the wheel to the base</b>\\n * \\n * The base is just standing in the air. This is happening because the mass\\n * of the base is set to 0. Objects with 0 mass will not move.\\n * \\n * Check if Interaction » Connection Mode is enabled.\\n * \\n * Connectors are too small. Make them bigger. Go to Settings » Scenario and change Connector Radius.\\n * \\n * Drag the wheels connector to some of the bases's connectors. Choose\\n * \\n * type: motor\\n * \\n * name: MOTOR\\n * \\n * offset: 1\\n * \\n * then click Connect.\\n * \\n * Play with the motor slider in \\n * Interaction » Controllers » MOTOR\\n * \\n * <a href='assemblino.html?name=Assemble01'>go to other example: Assemble01</a>\\n */ \",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":true,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[76.38069193074227,36.97839677567561,42.948472662968086],\"cameraRotation\":[0,0,0],\"cameraTarget\":[0,0,0],\"folder\":\"Examples/Assembles\",\"dependencies\":[\"BasicCube\",\"Wheel\",\"BasicCircularTube\"],\"connectorRadius\":0.1699190054624223,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":12,\"objectType\":\"ASSEMBLE\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.setOptions(arguments[0]);\nASSEMBLE.content = {\"declarations\":{\"BASE\":{\"name\":\"BASE\",\"path\":[\"BASE\"],\"object\":\"BasicCube\",\"options\":{\"depth\":25,\"height\":5,\"width\":15,\"mass\":0,\"friction\":0.9,\"restitution\":0,\"color\":10066346,\"opacity\":1,\"margin\":0.1,\"connectorSet\":\"female\",\"connectorDistance\":5,\"name\":\"BASE\"}},\"WHEEL1\":{\"name\":\"WHEEL1\",\"path\":[\"WHEEL1\"],\"object\":\"Wheel\",\"options\":{\"length\":5,\"innerDiameter\":2,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL1\"}}},\"physics\":{\"BASE\":{\"position\":[-32.55161666870117,13.924022674560547,1.7771145105361938],\"quaternion\":[-1.1803356070316795e-9,-0.0000015907774013612652,2.4326902714477683e-9,1],\"linear\":[0,0,0],\"angular\":[0,0,0]},\"WHEEL1\":{\"position\":[-13.040997505187988,2.539586067199707,6.986021995544434],\"quaternion\":[-0.000019723385776160285,-0.0030381381511688232,0.0000427979975938797,0.9999954104423523],\"linear\":[0,0,0],\"angular\":[0,0,0]}},\"connections\":[],\"programs\":[]};\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1374683174469},"17981639":{"id":17981639,"name":"RoundTube2","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":true,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[60,60,60],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"AuxRoundTube\",\"Particle\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"SYSTEM\"}","code":"/**\n * FIXME: use convex mesh and change the vertices, in order to be rounded.\n * \n * \n * This tube has the center of mass corrected, but at cost of building a system and adding\n * a particle and constraint to compensate for the center of mass offset.\n */ \nvar options = _.defaults(arguments[0] || {}, {\n  length: 10,\n  innerDiameter: 5,\n  outerDiameter: 15,\n  mass: 1,\n  color: 0x445566,\n  opacity: 1,\n  segments: 12, \n});\nvar SYSTEM = new System();\nSYSTEM.setOptions(JSON.parse(JSON.stringify(options)));\noptions.mass = options.mass/2;\noptions.collide = false;\noptions.size = options.innerDiameter/100;\noptions.show = false;\nvar thickness = (options.outerDiameter-options.innerDiameter)/2;\nvar zOffset = options.innerDiameter/2+thickness/2;\nSYSTEM.insert('tube','AuxRoundTube', options);\nSYSTEM.insert('particle','Particle', options);\nSYSTEM.setPhysics('particle',{position:[0,options.length/2,-zOffset]});\nSYSTEM.join({\n  fixed: 'tube',\n  moved: 'particle',\n  movedIndex: 'center',\n  fixedIndex: 'aux'\n},{\n  name: 'massBalance',\n  type: 'fix'\n});\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1375093220414},"18365851":{"id":18365851,"name":"GearLike","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":5,\"cameraPosition\":[60,60,60],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"AuxRoundTube\",\"Particle\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":3,\"objectType\":\"System\"}","code":"/**\n * This is an experiment to further develop gears.\n */ \nvar options = _.defaults(arguments[0] || {}, {\n  length: 10,\n  innerDiameter: 5,\n  outerDiameter: 15,\n  mass: 1,\n  color: 0x445566,\n  opacity: 1,\n  segments: 12, \n});\nvar SYSTEM = new System();\nSYSTEM.setOptions(JSON.parse(JSON.stringify(options)));\noptions.mass = options.mass/2;\noptions.collide = false;\noptions.size = options.innerDiameter/100;\noptions.show = false;\nvar thickness = (options.outerDiameter-options.innerDiameter)/2;\nvar zOffset = options.innerDiameter/2+thickness/2;\nSYSTEM.insert('tube','AuxRoundTube', options);\nSYSTEM.insert('particle','Particle', options);\nSYSTEM.setPhysics('particle',{position:[0,options.length/2,-zOffset]});\nSYSTEM.join({\n  fixed: 'tube',\n  moved: 'particle',\n  movedIndex: 'center',\n  fixedIndex: 'aux'\n},{\n  name: 'massBalance',\n  type: 'fix'\n});\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1375364328447},"18794789":{"id":18794789,"name":"SimpleWheel","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":66,\"codeWrapperWidth\":43,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[11.687855658004054,24.69503885956603,13.224691424630837],\"cameraTarget\":[0,0,0],\"lastEdited\":776881554,\"pause\":false,\"cameraRotation\":[0.2617276960559592,0.6363448698212927,-0.6219324715325184],\"folder\":\"Wheels\",\"dependencies\":[],\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18794789.html\",\"embed\":\"<a href='http://assemblino.com/show/public18794789.html'><img src='http://assemblino.com/show/public18794789.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Part\"}","code":"/**\n * Simple wheel\n */\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('WHEEL'),\n  width: 2,\n  diameter: 7,\n  mass: 0.02,\n  friction: 0.99,\n  restitution: 0.5,\n  color: 0x222222,\n  opacity: 1,\n  segments: 24,\n  margin: 0.25,\n});\n\nvar part = new Part(_.extend(_.clone(options),{\n  shape: 'cylinder',\n  diameter: options.diameter,\n  height: options.width,\n  y: options.width*3,\n  rz: Math.PI/7,\n}));\n\npart.addDress(_.extend(_.clone(options),{\n  shape: 'cylinder',\n  diameter: options.diameter/4,\n  height: options.width + options.margin,\n  color: 0x444444\n}));\n\npart.addConnector({\n  name: 'left',\n  base: [0, options.width/2 + options.margin, 0],\n  radius: 0.5,\n  up: [0,1,0],\n  front: [1,0,0],\n  prefer: 'motor'\n});\n\npart.addConnector({\n  name: 'right',\n  base: [0, -options.width/2 - options.margin, 0],\n  radius: 0.5,\n  up: [0,1,0],\n  front: [1,0,0],\n  prefer: 'motor'\n});\n\npart.setOptions(options);\n\nreturn part;\n\n\n\n\n\n\n\n\n\n\n\n\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407311058},"18795701":{"id":18795701,"name":"SupportWheel","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":63,\"codeWrapperWidth\":40,\"softHandling\":false,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":5,\"cameraPosition\":[-31.37451555284044,19.225395313175884,-17.001408640178596],\"cameraTarget\":[0,0,0],\"folder\":\"Wheels\",\"dependencies\":[],\"connectorRadius\":1,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18795701.html\",\"embed\":\"<a href='http://assemblino.com/show/public18795701.html'><img src='http://assemblino.com/show/public18795701.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"System\"}","code":"/*\n    SupportWheel\n    \n    A wheel with a base and hinge connector, as some wheels used only to support\n    platforms while allowing for smoothly rolling.\n    \n*/\n\nvar options = _.defaults(arguments[0] || {}, {\n  width: 2,\n  diameter: 7,\n  mass: 0.05,\n  friction: 0.99,\n  restitution: 0.5,\n  wheelColor: 0x222222,\n  supportColor: 0x666666,\n  opacity: 1,\n  segments: 24,\n  margin: 0.5,\n});\n\nvar margin = options.margin;\nvar radius = options.diameter/2;\nvar supSize = options.diameter/2 + margin;\nvar supWidth = options.width + 2*margin;\n\nvar system = new System();\nsystem.setOptions(options);\n\nvar wheel = new Part(_.extend(_.clone(options),{\n  name: 'WHEEL',\n  shape: 'cylinder',\n  height: options.width,\n  mass: 4 * options.mass/5,\n  color: options.wheelColor,\n  material: 'rubber',\n  y: radius,\n  rz: Math.PI/2,\n}));\n\nvar support = new Part(_.extend(_.clone(options),{\n  name: 'SUPPORT',\n  shape: 'box',\n  height: supSize,\n  depth:  supSize,\n  width: supWidth,\n  material: 'metal',\n  color: options.supportColor,\n  mass: 1 * options.mass/5,\n  y: radius + supSize/2,\n  z: -supSize/2\n}));\nsupport.addDress({\n  shape: 'cylinder',\n  material: 'metal',\n  color: options.supportColor,\n  radius: radius/5,\n  height: margin,\n  x: -options.width/2-margin/2,\n  y: -supSize/2,\n  z: supSize/2,\n  rz: Math.PI/2,\n});\nsupport.addDress({\n  shape: 'cylinder',\n  material: 'metal',\n  color: options.supportColor,\n  radius: radius/5,\n  height: margin,\n  x: options.width/2+margin/2,\n  y: -supSize/2,\n  z: supSize/2,\n  rz: Math.PI/2,\n});\nwheel.addConnector({\n  name: 'axis',\n  base: [0, 0, 0],\n  up: [0,1,0],\n  front: [1,0,0],\n  touchable: false\n});\nsupport.addConnector({\n  name: 'axis',\n  base: [0, -supSize/2, supSize/2],\n  up: [-1,0,0],\n  front: [0,1,0],\n  touchable: false\n});\nsupport.addConnector({\n  name: 'top',\n  base: [0, supSize/2, -supSize/2+margin],\n  up: [0,1,0],\n  front: [1,0,0],\n  prefer: 'hinge',\n  accept: ['hinge','fix']\n});\n\n//they will not collide\nwheel.avoidCollisionWith(support);\n\nsystem.add(wheel);\nsystem.add(support);\n\nsystem.join({\n  fixed: 'SUPPORT',\n  moved: 'WHEEL',\n  fixedIndex: 'axis',\n  movedIndex: 'axis'\n}, {\n  name: \"HINGE\",\n  type: 'hinge'\n});\n\nreturn system;\n    ","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407146490},"18799669":{"id":18799669,"name":"BallWheel","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":74,\"codeWrapperWidth\":40,\"softHandling\":true,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":5,\"cameraPosition\":[35.21537751441908,12.545889218792764,78.82064428073461],\"cameraTarget\":[0,0,0],\"folder\":\"Wheels\",\"dependencies\":[],\"connectorRadius\":1,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18799669.html\",\"embed\":\"<a href='http://assemblino.com/show/public18799669.html'><img src='http://assemblino.com/show/public18799669.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"System\"}","code":"/*\n    BallWheel\n    \n    This is a support wheel, where instead of the typical cylinder-like shape,\n    a sphere is used\n    \n*/\n\nvar options = _.defaults(arguments[0] || {}, {\n  diameter: 7,\n  margin: 0.5,\n  mass: 0.05,\n  friction: 0.1,\n  restitution: 0.1,\n  wheelColor: 0x991111,\n  supportColor: 0x555555,\n  opacity: 1,\n  segments: 24,\n});\n\nvar margin = options.margin;\nvar radius = options.diameter/2;\nvar supRadius = radius + margin;\n\nvar system = new System();\nsystem.setOptions(options);\n\nvar wheel = new Part(_.extend(_.clone(options),{\n  name: 'WHEEL',\n  shape: 'sphere',\n  mass: 4 * options.mass/5,\n  radius: radius,\n  color: options.wheelColor,\n  material: 'metal',\n  y: radius\n}));\n\nvar geo = new THREE.SphereGeometry(supRadius, options.segments, options.segments);\nvar vertices = _.filter(geo.vertices, function(v){\n\treturn v.y>=-supRadius/5 && v.y!=supRadius;\n});\n\nvar support =  new Part(_.extend(_.clone(options),{\n  name: 'SUPPORT',\n  shape: 'convex',\n  vertices : vertices,\n  mass: 1 * options.mass/5,\n  color: options.supportColor,\n  material: 'metal',\n  y: radius,\n  rz: -Math.PI/5\n}));\n\nwheel.addConnector({\n  name: 'center',\n  base: [0, 0, 0],\n  up: [0,1,0],\n  front: [1,0,0],\n  touchable: true\n});\nsupport.addConnector({\n  name: 'center',\n  base: [0, 0, 0],\n  touchable: true\n});\nsupport.addConnector({\n  name: 'top',\n  base: [0, radius + margin, 0],\n  up: [0,1,0],\n  front: [1,0,0],\n  prefer: 'hinge',\n  accept: ['hinge','fix']\n});\n\n//they will not collide\nwheel.avoidCollisionWith(support);\n\nsystem.add(wheel);\nsystem.add(support);\n\nsystem.join({\n  fixed: 'SUPPORT',\n  moved: 'WHEEL',\n  fixedIndex: 'center',\n  movedIndex: 'center'\n}, {\n  name: \"ROLL\",\n  type: 'point'\n});\n\nreturn system;\n    ","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407126437},"18802623":{"id":18802623,"name":"WheelsDemo","settings":"{\"program\":\"/*\\n     WheelsDemo\\n     \\n     2 types of support wheels.\\n     \\n     Drag the platforma around to check the wheels behavior.\\n     \\n     */\\n    \",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":true,\"renderInterval\":150,\"scenario\":\"grass\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[-25.411794575720183,98.68419468820882,212.73289014246586],\"cameraTarget\":[0,0,0],\"folder\":\"Demos\",\"dependencies\":[\"BallWheel\",\"SupportWheel\",\"BasicCube\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18802623.html\",\"embed\":\"<a href='http://assemblino.com/show/public18802623.html'><img src='http://assemblino.com/show/public18802623.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"Assemble609\"},\"declarations\":{\"BallWheel0\":{\"name\":\"BallWheel0\",\"path\":[\"BallWheel0\"],\"object\":\"BallWheel\",\"options\":{\"diameter\":7,\"margin\":0.5,\"mass\":0.05,\"friction\":0.1,\"restitution\":0.1,\"wheelColor\":1124761,\"supportColor\":5592405,\"opacity\":1,\"segments\":24,\"name\":\"BallWheel0\"}},\"SupportWheel0\":{\"name\":\"SupportWheel0\",\"path\":[\"SupportWheel0\"],\"object\":\"SupportWheel\",\"options\":{\"width\":2,\"diameter\":7,\"mass\":0.05,\"friction\":0.99,\"restitution\":0.5,\"wheelColor\":2236962,\"supportColor\":6710886,\"opacity\":1,\"segments\":24,\"margin\":0.5,\"name\":\"SupportWheel0\"}},\"SupportWheel2\":{\"name\":\"SupportWheel2\",\"path\":[\"SupportWheel2\"],\"object\":\"SupportWheel\",\"options\":{\"width\":2,\"diameter\":7,\"mass\":0.05,\"friction\":0.99,\"restitution\":0.5,\"wheelColor\":2236962,\"supportColor\":6710886,\"opacity\":1,\"segments\":24,\"margin\":0.5,\"name\":\"SupportWheel2\"}},\"BASE\":{\"name\":\"BASE\",\"path\":[\"BASE\"],\"object\":\"BasicCube\",\"options\":{\"depth\":30,\"height\":2,\"width\":30,\"mass\":0.3,\"friction\":0.9,\"restitution\":0,\"color\":1921111,\"opacity\":0.8,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"name\":\"BASE\"}}},\"physics\":{\"BASE\":{\"position\":[-8.42108154296875,4.292515754699707,-4.818825721740723],\"quaternion\":[0.30701878666877747,0.01654716581106186,0.9369722604751587,0.16597798466682434]},\"BallWheel0/WHEEL\":{\"position\":[-15.757881164550781,0.20679885149002075,-12.249673843383789],\"quaternion\":[0.8790442943572998,0.4389401376247406,0.07116689532995224,0.17189514636993408]},\"BallWheel0/SUPPORT\":{\"position\":[-15.76341438293457,0.18593399226665497,-12.25055980682373],\"quaternion\":[0.1659652292728424,0.936974048614502,-0.016516825184226036,-0.30702173709869385]},\"SupportWheel0/WHEEL\":{\"position\":[0.6051844954490662,-3.1824393272399902,0.1163761094212532],\"quaternion\":[-0.30005839467048645,-0.38196927309036255,0.6175065040588379,0.6186680197715759]},\"SupportWheel0/SUPPORT\":{\"position\":[2.8071844577789307,-1.9993524551391602,-1.2040334939956665],\"quaternion\":[-0.13933390378952026,-0.4698375463485718,-0.10824154317378998,0.8649407625198364]},\"SupportWheel2/WHEEL\":{\"position\":[-8.357748985290527,0.9601472020149231,9.872004508972168],\"quaternion\":[0.5457481145858765,0.4049612581729889,0.35666191577911377,0.6410598158836365]},\"SupportWheel2/SUPPORT\":{\"position\":[-9.675944328308105,3.4318079948425293,9.489568710327148],\"quaternion\":[0.05703146383166313,0.6835122108459473,-0.1567477583885193,0.7106254696846008]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"BallWheel0/SUPPORT\",\"fixedIndex\":10,\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN4\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BASE\",\"moved\":\"SupportWheel2/SUPPORT\",\"fixedIndex\":24,\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONN5\",\"mirror\":false,\"offset\":0}},{\"fixed\":\"BASE\",\"moved\":\"SupportWheel0/SUPPORT\",\"fixedIndex\":4,\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONN6\",\"mirror\":false,\"offset\":0}}],\"connectorOptions\":[[\"BallWheel0/SUPPORT\",\"center\",{}],[\"SupportWheel0/SUPPORT\",\"axis\",{}],[\"SupportWheel2/SUPPORT\",\"axis\",{}]],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"Assemble609\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376410321451},"18807183":{"id":18807183,"name":"Tutorial_01_Connecting","settings":"{\"program\":\"\\n/*\\n\\n Tutorial 01 - Connecting\\n\\n With this small tutorial you will learn how to connect components\\n and how to use some modes in the Interaction Menu.\\n\\n 1) To connect components, the checkbox - Interaction » Connection Mode - must be enabled.\\n\\n 2) The spheres with axis on components are Connectors. They enable defining constraints between components,\\n such as motors, servos, hinges and other type of constraints. When in Connection Mode you can click and\\n drag components by clicking and dragging the Connectors. Try it!\\n\\n 3) Now disable Connection Mode. Without this mode the components can be moved by clicking anywhere.\\n\\n 4) Please turn Connection Mode on again.\\n\\n 5) Go to Edit » Insert » public » Wheels and choose SimpleWheel. Name it myWheel and press Insert.\\n\\n 6) Click on one of the wheels connectors and drag it towards the BASE, the gray platform, until the mouse cursor is on\\n some connector of the BASE. Then release the mouse. The movement looks strange because the wheel seams not to follow the mouse; the important thing\\n is that the mouse should be well positioned on the target connector when you release it.\\n\\n 7) A pop menu should appear. Choose the type of connection: motor.\\n Name it myMotor and press Connect.\\n\\n 8) Now you can control myMotor by going to Interaction » Controllers » myMotor.\\n\\n 9) You may change the size of Connectors going to Settings » World » Connector Radius\\n */\\n\\n\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[53.21841193284537,39.69059878928875,36.292003693836214],\"cameraTarget\":[0,0,0],\"folder\":\"\",\"dependencies\":[\"SimpleWheel\",\"BasicCube\"],\"connectorRadius\":1,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/Tutorial18807183.html\",\"embed\":\"<a href='http://assemblino.com/show/Tutorial18807183.html'><img src='http://assemblino.com/show/Tutorial18807183.png'/></a>\"},\"owner\":\"Tutorial\",\"pointer\":2,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"Tutorial_01_Connecting\"},\"declarations\":{\"WHEEL3\":{\"name\":\"WHEEL3\",\"path\":[\"WHEEL3\"],\"object\":\"SimpleWheel\",\"options\":{\"name\":\"WHEEL3\",\"width\":2,\"diameter\":7,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"segments\":24,\"margin\":0.25}},\"WHEEL2\":{\"name\":\"WHEEL2\",\"path\":[\"WHEEL2\"],\"object\":\"SimpleWheel\",\"options\":{\"name\":\"WHEEL2\",\"width\":2,\"diameter\":7,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"segments\":24,\"margin\":0.25}},\"WHEEL1\":{\"name\":\"WHEEL1\",\"path\":[\"WHEEL1\"],\"object\":\"SimpleWheel\",\"options\":{\"name\":\"WHEEL1\",\"width\":2,\"diameter\":7,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":1,\"segments\":24,\"margin\":0.25}},\"BASE\":{\"name\":\"BASE\",\"path\":[\"BASE\"],\"object\":\"BasicCube\",\"options\":{\"depth\":30,\"height\":5,\"width\":15,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":8948087,\"opacity\":0.9,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"name\":\"BASE\"}}},\"physics\":{\"WHEEL3\":{\"position\":[-10.328166007995605,3.499995708465576,23.71371078491211],\"quaternion\":[0.6106353402137756,-0.5000108480453491,-0.35655564069747925,-0.49998173117637634]},\"WHEEL2\":{\"position\":[-22.366609573364258,3.500049591064453,-0.12681394815444946],\"quaternion\":[0.19210316240787506,0.01290665939450264,-0.6805539727210999,0.7069483995437622]},\"WHEEL1\":{\"position\":[-27.44739532470703,3.4997665882110596,19.217098236083984],\"quaternion\":[0.0019443717319518328,-0.17775800824165344,-0.7071173191070557,0.6843854784965515]},\"BASE\":{\"position\":[-16.347352981567383,3.4984757900238037,11.79343032836914],\"quaternion\":[-0.00004731787703349255,-0.1280776560306549,-0.00008732566493563354,0.9917641282081604]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"WHEEL2\",\"fixedIndex\":35,\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONN0\",\"mirror\":true,\"offset\":0}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL1\",\"fixedIndex\":39,\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR1\",\"rpm\":0,\"torque\":5,\"isEnabled\":true,\"low\":-300,\"high\":300,\"mirror\":true,\"reverse\":false,\"offset\":0,\"gui\":true}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL3\",\"fixedIndex\":34,\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONN3\",\"mirror\":false,\"offset\":0}}],\"connectorOptions\":[],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"Tutorial_01_Connecting\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"Tutorial","last_change":1376407417963},"18859865":{"id":18859865,"name":"Tutorial_02_Moving","settings":"{\"program\":\"\\n/*\\n\\n Tutorial 02 - Moving components, Zooming, Rotating\\n\\n You will learn the different possibilities for moving, rotating and making components static; and how to zoom, pan\\n and rotate the scene.\\n\\n 1) When <i>Interaction » Connection Mode</i> is enabled components can be moved with the mouse only by clicking and dragging the Connectors.\\n\\n 2) Without Connection Mode, components can be moved with the mouse by clicking and dragging anywhere on the component.\\n\\n 3) With <i>Interaction » Soft Handling</i> enabled, components are moved while the physics engine is running, and objects will collide. Soft Handling\\n  is useful when you want to interact with objects while the simulation is running, sometimes to flip them, or making them collide with other objects on purpose.\\n  It is also useful when you are connecting objects in a loop.\\n\\n 4) Without Soft Handling, when moving objects the simulation stops and the objects are moved overwriting their positions\\n  without the simulation engine, thus passing trough each other. The preferred mode to connect components is without soft handling, because\\n  they should be somehow static when you do that. Disabling soft handling allows you to free objects when they are stuck.\\n\\n 5) To zoom in and out you may a)try the mouse wheel or b)by pressing the mouse button and key S, while moving the mouse forth and backwards.\\n\\n 6) To pan the scene press the mouse button and key D, while moving the mouse in any direction.\\n\\n 7) To rotate the scene a) try click and drag anywhere except on components or b) Press the mouse button and key A while moving the mouse in any direction.\\n\\n */\\n\\n\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[60,60,60],\"cameraTarget\":[0,0,0],\"folder\":\"\",\"dependencies\":[\"BasicCube\",\"Wheel\",\"BasicCircularTube\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/Tutorial18859865.html\",\"embed\":\"<a href='http://assemblino.com/show/Tutorial18859865.html'><img src='http://assemblino.com/show/Tutorial18859865.png'/></a>\"},\"owner\":\"Tutorial\",\"pointer\":1,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"Tutorial_02_Moving\"},\"declarations\":{\"BOX\":{\"name\":\"BOX\",\"path\":[\"BOX\"],\"object\":\"BasicCube\",\"options\":{\"depth\":30,\"height\":5,\"width\":15,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":8948087,\"opacity\":0.8,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"name\":\"BOX\"}},\"WHEEL\":{\"name\":\"WHEEL\",\"path\":[\"WHEEL\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL\"}},\"WHEEL2\":{\"name\":\"WHEEL2\",\"path\":[\"WHEEL2\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL2\"}}},\"physics\":{\"BOX\":{\"position\":[-10.401007652282715,3.6705126762390137,15.739486694335938],\"quaternion\":[0.0003074839187320322,0.003484343644231558,0.0805995911359787,0.9967404007911682]},\"WHEEL\":{\"position\":[-1.7362322807312012,5.093672275543213,5.67881441116333],\"quaternion\":[0.1511020064353943,-0.12407924979925156,0.7466405630111694,0.6358461976051331]},\"WHEEL2\":{\"position\":[4.948171138763428,1.0399997234344482,-5.90589714050293],\"quaternion\":[-1.1265069765897806e-8,0.0019233821658417583,-1.314864994661491e-9,0.999998152256012]}},\"connections\":[{\"fixed\":\"BOX\",\"moved\":\"WHEEL\",\"fixedIndex\":30,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR1\",\"rpm\":0,\"torque\":5,\"isEnabled\":false,\"low\":-180,\"high\":180,\"mirror\":false,\"reverse\":false,\"offset\":0,\"gui\":true}}],\"connectorOptions\":[],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"Tutorial_02_Moving\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"Tutorial","last_change":1376407432959},"18861315":{"id":18861315,"name":"Tutorial_03_Changing","settings":"{\"program\":\"\\n/*\\n\\n <h3>Tutorial 03 - Changing objects and constraints properties</h3>\\n\\n 1) To select an object to change it's properties you just need to click on them, regarding that when Connection Mode is enabled, the selection will\\n happen only if you click on some Connector of the object. Without Connection Mode the object is selected by clicking anywhere on it.\\n\\n 2) Once the object is selected it's properties may be changed by clicking <i>Interaction » Context » (object name) » Properties</i>. The pop menu will\\n  allow you to choose new values for some parameters. You can change the name of the component as well. After changing what you want, press Save.\\n\\n 3) Changing a constraint can be done only with Connection Mode enabled. You need to click on the respective connectors, and then click\\n <i>Interaction » Context » (object name, connector) » Change Connection</i>. Then you can alter the type, name and some other parameters of the\\n constraint. As you choose different types of constraints a short explanation of the variables is displayed. When you are done click Save.\\n\\n 4) Some constraint types have the option to display a GUI slider under <i>Interaction » Controllers</i>. This slider will change the angles for servos, rpm\\n for motors, and position for linear motors.\\n\\n */\\n\\n\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[60,60,60],\"cameraTarget\":[0,0,0],\"folder\":\"\",\"dependencies\":[\"BasicCube\",\"Wheel\",\"BasicCircularTube\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/Tutorial18861315.html\",\"embed\":\"<a href='http://assemblino.com/show/Tutorial18861315.html'><img src='http://assemblino.com/show/Tutorial18861315.png'/></a>\"},\"owner\":\"Tutorial\",\"pointer\":1,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"Tutorial_03_Changing\"},\"declarations\":{\"BOX\":{\"name\":\"BOX\",\"path\":[\"BOX\"],\"object\":\"BasicCube\",\"options\":{\"depth\":30,\"height\":5,\"width\":15,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":8948087,\"opacity\":0.8,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"name\":\"BOX\"}},\"WHEEL\":{\"name\":\"WHEEL\",\"path\":[\"WHEEL\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL\"}},\"WHEEL2\":{\"name\":\"WHEEL2\",\"path\":[\"WHEEL2\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL2\"}}},\"physics\":{\"BOX\":{\"position\":[-10.361230850219727,3.6711745262145996,15.722395896911621],\"quaternion\":[0.00027437848621048033,0.003237691940739751,0.08057404309511185,0.9967433214187622]},\"WHEEL\":{\"position\":[-1.6913158893585205,5.093594551086426,5.666080951690674],\"quaternion\":[0.15095195174217224,-0.12426218390464783,0.7466651797294617,0.6358172297477722]},\"WHEEL2\":{\"position\":[4.946958065032959,1.0399997234344482,-5.907344341278076],\"quaternion\":[-6.64827437546478e-9,0.002080304315313697,-7.959251036027126e-9,0.9999978542327881]}},\"connections\":[{\"fixed\":\"BOX\",\"moved\":\"WHEEL\",\"fixedIndex\":30,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR1\",\"rpm\":0,\"torque\":5,\"isEnabled\":false,\"low\":-180,\"high\":180,\"mirror\":false,\"reverse\":false,\"offset\":0,\"gui\":true}}],\"connectorOptions\":[],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"Tutorial_03_Changing\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"Tutorial","last_change":1376407394425},"18865910":{"id":18865910,"name":"Platform","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":76,\"codeWrapperWidth\":25,\"moveWithForce\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":50,\"simulationQuality\":2,\"cameraPosition\":[-22.112695613331372,12.068346162424037,-14.769573066347396],\"cameraTarget\":[0,0,0],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraRotation\":[-0.081981278223244,0.39327318617231016,-0.5179167335771793],\"folder\":\"Structures\",\"dependencies\":[],\"pause\":false,\"connectorRadius\":0.25,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18865910.html\",\"embed\":\"<a href='http://assemblino.com/show/public18865910.html'><img src='http://assemblino.com/show/public18865910.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\n/**\n * A cubic building block with evenly spaced connectors.\n *\n * connectorSet: defines the orientation of connectors\n * connectorDistance: the distance between connectors\n * margin: the margin/distance between connectors and the face\n */\n\nvar opt = _.defaults(arguments[0] || {}, {\n  name: nextName('PLATE'),\n  depth: 18,\n  height: 1,\n  width: 10,\n  mass: 0.1,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0x666677,\n  opacity: 1.0,\n  margin: 0.01,\n  connectorSet: ['female','mixed','male', 'none'],\n  connectorDistance: 4\n});\n\nvar part = new Part(_.extend(_.clone(opt), {\n  shape: 'box',\n  material: 'metal',\n  y: opt.height/2\n}));\n\npart.setOptions(opt);\n\nvar connSet = opt.connectorSet;\nif (connSet instanceof Array){\n  connSet = connSet[0];\n}\nvar antiConn;\nif (connSet==='male'){\n  connSet = 1;\n  antiConn = -1;\n} else if (connSet==='female'){\n  connSet = -1;\n  antiConn = 1;\n} else if (connSet==='none'){\n  return part;\n} else {\n  connSet = -1;\n  antiConn = -1;\n}\n\nvar distance = opt.connectorDistance;\nvar axis = {x: 'width', y: 'height', z: 'depth'};\n['x','y','z'].map(function(dim){\n  var positions = [];\n  var quant = Math.floor(opt[axis[dim]]/distance)+1;\n  if (quant % 2 == 0) quant--;\n  var rest = opt[axis[dim]] - quant*distance;\n  if (quant>0) for (var i = 0; i < quant; i++){\n  positions.push((i - quant/2)*distance + distance/2);\n  }\n  axis[dim + \"_positions\"] = positions;\n});\n\nvar combinations = [\n  {\n  //top surface\n  x: axis[\"x_positions\"],\n  y: [opt.height/2 + opt.margin],\n  z: axis[\"z_positions\"],\n  up: [0,connSet,0]\n  },\n  {\n  //bottom surface\n  x: axis[\"x_positions\"],\n  y: [-opt.height/2 - opt.margin],\n  z: axis[\"z_positions\"],\n  up: [0,antiConn,0]\n  },\n  {\n  //front surface\n  x: [opt.width/2 + opt.margin],\n  y: axis[\"y_positions\"],\n  z: axis[\"z_positions\"],\n  up: [connSet,0,0],\n  front: [0,0,1]\n  },\n  {\n  //back surface\n  x: [-opt.width/2 - opt.margin],\n  y: axis[\"y_positions\"],\n  z: axis[\"z_positions\"],\n  up: [antiConn,0,0],\n  front: [0,0,1]\n  },\n  {\n  //left surface\n  x: axis[\"x_positions\"],\n  y: axis[\"y_positions\"],\n  z: [opt.depth/2 + opt.margin],\n  up: [0,0,connSet]\n  },\n  {\n  //right surface\n  x: axis[\"x_positions\"],\n  y: axis[\"y_positions\"],\n  z: [-opt.depth/2 - opt.margin],\n  up: [0,0,antiConn]\n  }\n];\n\nfunction connName(){\n  //Arguments are a strange array, they do not have the method join\n  return (opt.cprefix||\"\") + [].join.call(arguments, \"-\");\n}\n_.map(combinations, function(comb, index){\n  for (var i = 0; i < comb.x.length; i++){\n  for (var j = 0; j < comb.y.length; j++){\n      for (var k = 0; k < comb.z.length; k++){\n          part.addConnector({\n              name: connName(index,i,j,k),\n              base: [comb.x[i], comb.y[j], comb.z[k]],\n              up: comb.up,\n              front: comb.front || [1,0,0],\n              prefer: 'fix'\n          });\n      }\n  }\n  }\n});\n\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376406879425},"18868307":{"id":18868307,"name":"Profile_L","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":79,\"codeWrapperWidth\":42,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":2,\"cameraPosition\":[24.616558257541783,19.30827070747173,22.019600980980243],\"cameraTarget\":[0,0,0],\"folder\":\"Structures\",\"dependencies\":[\"Platform\"],\"connectorRadius\":0.25,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18868307.html\",\"embed\":\"<a href='http://assemblino.com/show/public18868307.html'><img src='http://assemblino.com/show/public18868307.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/*\n     L Profile\n*/\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('L'),\n  length: 25,\n  thickness: 1,\n  height: 5,\n  base: 7,\n  mass: 0.05,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0x666677,\n  opacity: 1.0,\n  margin: 0.01,\n  connectorSet: ['female','mixed','male','none'],\n  connectorDistance: 4\n});\n\nvar part = new Part();\n\nvar base = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.base,\n  depth: options.length,\n  height: options.thickness,\n  cprefix: 'b'\n}));\n\nvar wing = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.thickness,\n  depth: options.length,\n  height: options.height,\n  cprefix: 'h'\n}));\n\nwing.mesh.position.y = options.height/2 - options.thickness/2; \nwing.mesh.position.x = -options.base/2 + options.thickness/2; \n\npart.add(base);\npart.add(wing);\npart.setOptions(options);\n\nreturn part;\n    ","program":null,"info":null,"permissions":null,"username":"public","last_change":1376406921317},"18870348":{"id":18870348,"name":"Profile_U","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":61,\"codeWrapperWidth\":42,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":1,\"cameraPosition\":[-22.79540069791051,23.2268948003369,-42.72434033376602],\"cameraTarget\":[0,0,0],\"folder\":\"Structures\",\"dependencies\":[\"Platform\"],\"connectorRadius\":0.3,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18870348.html\",\"embed\":\"<a href='http://assemblino.com/show/public18870348.html'><img src='http://assemblino.com/show/public18870348.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/*\n     U Profile\n*/\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('U'),\n  length: 22,\n  thickness: 1,\n  height1: 5,\n  height2: 6,\n  base: 7,\n  mass: 0.1,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0x666677,\n  opacity: 1.0,\n  margin: 0.01,\n  connectorSet: ['female','mixed','male','none'],\n  connectorDistance: 4\n});\n\nvar part = new Part();\n\nvar base = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.base,\n  depth: options.length,\n  height: options.thickness,\n  cprefix: 'b'\n}));\n\nvar wing = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.thickness,\n  depth: options.length,\n  height: options.height1,\n  cprefix: 'H'\n}));\n\nwing.mesh.position.y = options.height1/2 - options.thickness/2; \nwing.mesh.position.x = -options.base/2 + options.thickness/2; \n\nvar wing2 = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.thickness,\n  depth: options.length,\n  height: options.height2,\n  cprefix: 'h'\n}));\n\nwing2.mesh.position.y = options.height2/2 - options.thickness/2; \nwing2.mesh.position.x = options.base/2 - options.thickness/2; \n\n\npart.add(base);\npart.add(wing);\npart.add(wing2);\npart.setOptions(options);\n\nreturn part;\n    ","program":null,"info":null,"permissions":null,"username":"public","last_change":1376406945290},"18873929":{"id":18873929,"name":"OpenedBox","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":71,\"codeWrapperWidth\":35,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":1,\"cameraPosition\":[13.644133961625696,16.39514420319208,24.353657022915304],\"cameraTarget\":[0,0,0],\"folder\":\"Structures\",\"dependencies\":[\"Platform\"],\"connectorRadius\":0.3,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18873929.html\",\"embed\":\"<a href='http://assemblino.com/show/public18873929.html'><img src='http://assemblino.com/show/public18873929.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/*\n     Simple opened box.\n*/\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('BOX'),\n  width: 13,\n  depth: 15,\n  height: 5,\n  thickness: 1,\n  mass: 0.1,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0xCDC0B0,\n  opacity: 1.0,\n  margin: 0.01,\n  connectorSet: ['female','mixed','male'],\n  connectorDistance: 4\n});\n\nvar part = new Part();\n\nvar base = Assemblino.get('Platform', _.extend(_.clone(options), {\n  height: options.thickness,\n  cprefix: 'b'\n}));\n\nvar wing = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.thickness,\n  cprefix: 'H'\n}));\n\nwing.mesh.position.y = options.height/2 - options.thickness/2; \nwing.mesh.position.x = -options.width/2 + options.thickness/2; \n\nvar wing2 = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.thickness,\n  cprefix: 'h'\n}));\n\nwing2.mesh.position.y = options.height/2 - options.thickness/2; \nwing2.mesh.position.x = options.width/2 - options.thickness/2; \n\nvar close1 = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.width,\n  depth: options.thickness,\n  cprefix: 'C'\n}));\n\nclose1.mesh.position.y = options.height/2 - options.thickness/2; \nclose1.mesh.position.z = options.depth/2 - options.thickness/2; \n\nvar close2 = Assemblino.get('Platform', _.extend(_.clone(options), {\n  width: options.width,\n  depth: options.thickness,\n  cprefix: 'c'\n}));\n\nclose2.mesh.position.y = options.height/2 - options.thickness/2; \nclose2.mesh.position.z = -options.depth/2 + options.thickness/2; \n\npart.add(base);\npart.add(wing);\npart.add(wing2);\npart.add(close1);\npart.add(close2);\npart.setOptions(options);\n\nreturn part;\n\n\n    ","program":null,"info":null,"permissions":null,"username":"public","last_change":1376406904730},"18875447":{"id":18875447,"name":"TestsOpenedBox","settings":"{\"program\":\"/*\\n     Tests with the OpenedBox structure     \\n*/\\n    \",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":true,\"renderInterval\":125,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":3,\"cameraPosition\":[-67.06363592049978,28.80991692058231,96.72100738147624],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"OpenedBox\",\"Platform\",\"BallWheel\",\"SimpleWheel\",\"SupportWheel\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18875447.html\",\"embed\":\"<a href='http://assemblino.com/show/public18875447.html'><img src='http://assemblino.com/show/public18875447.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"TestsOpenedBox\"},\"declarations\":{\"BOX\":{\"name\":\"BOX\",\"path\":[\"BOX\"],\"object\":\"OpenedBox\",\"options\":{\"name\":\"BOX\",\"width\":13,\"depth\":25,\"height\":5,\"thickness\":1,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":13484208,\"opacity\":0.8,\"margin\":0.01,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"BALL\":{\"name\":\"BALL\",\"path\":[\"BALL\"],\"object\":\"BallWheel\",\"options\":{\"diameter\":2.6,\"margin\":0.2,\"mass\":0.05,\"friction\":0.1,\"restitution\":0.1,\"wheelColor\":10031377,\"supportColor\":6972064,\"opacity\":1,\"segments\":24,\"name\":\"BALL\"}},\"WHEEL0\":{\"name\":\"WHEEL0\",\"path\":[\"WHEEL0\"],\"object\":\"SimpleWheel\",\"options\":{\"name\":\"WHEEL0\",\"width\":3,\"diameter\":10,\"mass\":0.05,\"friction\":0.99,\"restitution\":0.5,\"color\":6886163,\"opacity\":1,\"segments\":24,\"margin\":0.25}},\"WHEEL1\":{\"name\":\"WHEEL1\",\"path\":[\"WHEEL1\"],\"object\":\"SimpleWheel\",\"options\":{\"name\":\"WHEEL1\",\"width\":3,\"diameter\":10,\"mass\":0.05,\"friction\":0.99,\"restitution\":0.5,\"color\":6886163,\"opacity\":1,\"segments\":24,\"margin\":0.25}},\"STUFF1\":{\"name\":\"STUFF1\",\"path\":[\"STUFF1\"],\"object\":\"BallWheel\",\"options\":{\"diameter\":2,\"margin\":0.5,\"mass\":0.05,\"friction\":0.1,\"restitution\":0.1,\"wheelColor\":1577369,\"supportColor\":5592405,\"opacity\":1,\"segments\":24,\"name\":\"STUFF1\"}},\"STUFF2\":{\"name\":\"STUFF2\",\"path\":[\"STUFF2\"],\"object\":\"BallWheel\",\"options\":{\"diameter\":2,\"margin\":0.5,\"mass\":0.05,\"friction\":0.1,\"restitution\":0.1,\"wheelColor\":1126809,\"supportColor\":12929353,\"opacity\":1,\"segments\":24,\"name\":\"STUFF2\"}},\"STUFF3\":{\"name\":\"STUFF3\",\"path\":[\"STUFF3\"],\"object\":\"SupportWheel\",\"options\":{\"width\":2,\"diameter\":3,\"mass\":0.05,\"friction\":0.99,\"restitution\":0.5,\"wheelColor\":2185664,\"supportColor\":1545818,\"opacity\":1,\"segments\":8,\"margin\":0.5,\"name\":\"STUFF3\"}}},\"physics\":{\"BOX\":{\"position\":[-5.349370002746582,3.0899744033813477,18.805082321166992],\"quaternion\":[-0.005153735633939505,-0.35321033000946045,-0.003308635437861085,0.9355238676071167]},\"WHEEL0\":{\"position\":[8.790294647216797,4.998778820037842,15.240966796875],\"quaternion\":[0.18802520632743835,-0.5916226506233215,0.681709349155426,0.38717120885849]},\"WHEEL1\":{\"position\":[-3.6041409969329834,5.000053405761719,4.32530403137207],\"quaternion\":[0.43377766013145447,0.6946319937705994,0.5584374070167542,-0.13217784464359283]},\"BALL/WHEEL\":{\"position\":[-13.283822059631348,1.3000001907348633,27.823596954345703],\"quaternion\":[0.9961219429969788,-0.047555193305015564,0.07036203145980835,0.02299458719789982]},\"BALL/SUPPORT\":{\"position\":[-13.284618377685547,1.2037174701690674,27.82248878479004],\"quaternion\":[-0.0027010017074644566,-0.35340291261672974,0.0009978049201890826,0.9354667663574219]},\"STUFF1/WHEEL\":{\"position\":[4.3261871337890625,4.459705352783203,14.007380485534668],\"quaternion\":[0.3378119468688965,0.028598438948392868,0.888796865940094,-0.30839160084724426]},\"STUFF1/SUPPORT\":{\"position\":[4.325008392333984,4.447315692901611,14.009783744812012],\"quaternion\":[-0.01824226975440979,-0.5011038780212402,0.26842305064201355,0.8225029706954956]},\"STUFF2/WHEEL\":{\"position\":[2.216628313064575,4.473161220550537,12.16360855102539],\"quaternion\":[-0.28861865401268005,-0.28600478172302246,0.23735637962818146,0.882361888885498]},\"STUFF2/SUPPORT\":{\"position\":[2.218824625015259,4.467722415924072,12.161421775817871],\"quaternion\":[-0.22364021837711334,0.22349604964256287,0.16057156026363373,0.9350140690803528]},\"STUFF3/WHEEL\":{\"position\":[2.6484079360961914,4.993676662445068,15.782369613647461],\"quaternion\":[0.5131882429122925,0.06252459436655045,-0.4877554774284363,0.7034366130828857]},\"STUFF3/SUPPORT\":{\"position\":[1.7152526378631592,4.923490524291992,16.841970443725586],\"quaternion\":[-0.14224599301815033,0.8550860285758972,0.3795161843299866,0.32335957884788513]}},\"connections\":[{\"fixed\":\"BOX\",\"moved\":\"BALL/SUPPORT\",\"fixedIndex\":\"C1-1-0-0\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BOX\",\"moved\":\"WHEEL0\",\"fixedIndex\":\"c2-0-0-0\",\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR0\",\"rpm\":5,\"torque\":5,\"isEnabled\":true,\"low\":-300,\"high\":300,\"mirror\":false,\"reverse\":false,\"offset\":0,\"gui\":true}},{\"fixed\":\"BOX\",\"moved\":\"WHEEL1\",\"fixedIndex\":\"c3-0-0-0\",\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR1\",\"rpm\":0,\"torque\":5,\"isEnabled\":true,\"low\":-300,\"high\":300,\"mirror\":false,\"reverse\":true,\"offset\":0,\"gui\":true}}],\"connectorOptions\":[[\"BALL/SUPPORT\",\"center\",{}],[\"STUFF1/SUPPORT\",\"center\",{}],[\"STUFF2/SUPPORT\",\"center\",{}],[\"STUFF3/SUPPORT\",\"axis\",{}]],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"TestsOpenedBox\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407083281},"18884736":{"id":18884736,"name":"GenericServo","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":100,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":5,\"cameraPosition\":[11.364555160842603,17.311453321247868,-8.259353097138101],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Servos\",\"dependencies\":[],\"connectorRadius\":0.25,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18884736.html\",\"embed\":\"<a href='http://assemblino.com/show/public18884736.html'><img src='http://assemblino.com/show/public18884736.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"System\"}","code":"\n/*\n Generic Servo\n\n Measures taken from:<br />\n http://www.servocity.com/html/hs-485hb_servo.html\n */\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('SERVO'),\n  color: 0x222222,\n  torqueKgCm: 6,\n  massKg: 0.045,\n  lowAngle: -90,\n  highAngle: 90,\n  rpm: 50,\n  shaftDiameter: 0.6,\n  opacity: 1,\n  A: 1.982,\n  B: 1.39,\n  C: 3.435,\n  D: 1,\n  E: 1,\n  F: 3,\n  G: 1.2,\n  H: 2.8,\n  J: 5.31,\n  K: 0.975,\n  L: 0.442,\n  M: 4,\n  X: 0.32\n});\n\nvar shaftHeight = options.G - options.K;\n\nvar width = options.M;\nvar height = options.H + options.K;\nvar depth = options.A;\n\n\nvar system = new System();\n\nvar box = new Part(_.extend(_.clone(options), {\n  name: 'CASE',\n  shape: 'box',\n  width: width,\n  height: height,\n  depth: depth,\n  mass: 0.8*options.massKg,\n  material: 'plastic',\n  y: height / 2,\n  x: options.M/2 - options.E\n}));\n//the screw wings\nvar wingHeight = options.K/4;\nbox.addDress( {\n  shape: 'box',\n  color: options.color,\n  width: options.J,\n  height: wingHeight,\n  depth: options.A,\n  material: 'plastic',\n  opacity: options.opacity,\n  y: height/2 - options.K + wingHeight/2\n});\nbox.addDress( {\n  shape: 'cylinder',\n  color: options.color,\n  radius: 0.7 * Math.min(options.E, options.A),\n  height: options.G - options.K,\n  material: 'plastic',\n  opacity: options.opacity,\n  y: height/2 + shaftHeight/2,\n  x: -options.M/2 + options.E\n});\nbox.addConnector({\n  name: 'top',\n  front: [-1,0,0],\n  base: [-options.M/2 + options.E, height / 2 + shaftHeight/2, 0],\n  touchable: false\n});\nvar bx = (options.B+options.C)/2;\nvar by = height/2 - options.K;\nvar bz =  options.D/2;\nvar bases = [\n  [-bx,by,bz],\n  [-bx,by, 0],\n  [-bx,by, -bz],\n  [bx,by, bz],\n  [bx,by, 0],\n  [bx,by, -bz]\n];\nvar fronts = [\n  [1,0,0],\n  [-1,0,0],\n  [1,0,0],\n  [-1,0,0],\n  [1,0,0],\n  [-1,0,0]\n];\nvar names =   ['f+', 'f!', 'f-', 'r+','r!','r-'];\nfor (var i = 0; i < names.length; i++){\n  box.addConnector({\n  name: names[i],\n  base: bases[i],\n  up: [0,-1,0],\n  front: fronts[i],\n  accept: ['hinge', 'fix'],\n  prefer: ['hinge']\n  });\n}\nsystem.add(box);\n\nvar shaft = new Part({\n  name: 'SHAFT',\n  mass: 0.2 * options.massKg,\n  material: 'metal',\n  shape: 'cylinder',\n  diameter: options.shaftDiameter,\n  height: shaftHeight,\n  opacity: options.opacity,\n  y: shaftHeight/2 + height\n});\n\nshaft.addDress({\n  material: 'metal',\n  shape: 'cylinder',\n  diameter: options.shaftDiameter,\n  height: shaftHeight * 2,\n  opacity: options.opacity\n});\n\nshaft.addConnector({\n  name: 'center',\n  base: [0, 0, 0],\n  front: [-1,0,0],\n  touchable: false\n});\n\nshaft.addConnector({\n  name: 'shaft',\n  front: [-1,0,0],\n  base: [0, shaftHeight/2, 0],\n  prefer: 'fix',\n  allow: ['fix']\n});\n\nsystem.add(shaft);\n\nsystem.join({\n  fixed: 'CASE',\n  moved: 'SHAFT',\n  fixedIndex: 'top',\n  movedIndex: 'center'\n}, {\n  name: \"SERVO\",\n  type: 'servo',\n  isEnabled: true,\n  rpm: options.rpm,\n  torque: options.torqueKgCm,\n  angle: 0,\n  low: options.lowAngle,\n  high: options.highAngle\n});\n\nsystem.setOptions(options);\n\nreturn system;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376409785180},"18896903":{"id":18896903,"name":"GenericServo2","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":100,\"scenario\":\"plain\",\"showAxis\":false,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":5,\"cameraPosition\":[14.507907105332839,11.285312558926398,17.7845908573625],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Servos\",\"dependencies\":[],\"connectorRadius\":0.25,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18896903.html\",\"embed\":\"<a href='http://assemblino.com/show/public18896903.html'><img src='http://assemblino.com/show/public18896903.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"System\"}","code":"\n/*\n Generic Servo 2\n\n Measures taken from:<br />\n http://www.servocity.com/html/hs-485hb_servo.html\n <br/>\n layout base on <br />\n http://hitecrcd.com/products/servos/discontinued-servos-servo-accessories/hsr-5498sg-hmi-premium-robot-servo/product\n */\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('SERVO'),\n  color: 0x222222,\n  torqueKgCm: 6,\n  massKg: 0.045,\n  lowAngle: -90,\n  highAngle: 90,\n  rpm: 50,\n  shaftDiameter: 0.6,\n  opacity: 1,\n  A: 1.982,\n  B: 1.39,\n  C: 3.435,\n  D: 1,\n  E: 1,\n  F: 3,\n  G: 1.2,\n  H: 2.8,\n  J: 5.31,\n  K: 0.975,\n  L: 0.442,\n  M: 4,\n  X: 0.32\n});\n//to be shorter\nvar $ = options;\n\nvar shaftHeight = $.G - $.K;\n\nvar width = $.M;\nvar height = $.H + $.K;\nvar depth = $.A;\n\n\nvar system = new System();\n\nvar box = new Part(_.extend(_.clone(options), {\n  name: 'CASE',\n  shape: 'box',\n  width: width,\n  height: height,\n  depth: depth,\n  mass: 0.5*options.massKg,\n  material: 'plastic',\n  y: height / 2,\n  x: $.M/2 - $.E\n}));\nvar cylOptions =  {\n  shape: 'cylinder',\n  color: options.color,\n  radius: 0.7 * Math.min($.E, $.A),\n  height: $.G - $.K,\n  material: 'plastic',\n  opacity: options.opacity,\n  y: height/2 + shaftHeight/2,\n  x: -$.M/2 + $.E\n};\nbox.addDress(_.clone(cylOptions));\nbox.addDress(_.extend(_.clone(cylOptions), {\n  x: -cylOptions.x\n}));\nbox.addDress(_.extend(_.clone(cylOptions), {\n  y: -cylOptions.y,\n  x: cylOptions.x\n}));\nbox.addDress(_.extend(_.clone(cylOptions), {\n  y: -cylOptions.y,\n  x: -cylOptions.x\n}));\nbox.addConnector({\n  name: 'shaft',\n  front: [-1,0,0],\n  base: [-$.M/2 + $.E, height / 2 + shaftHeight/2, 0],\n  touchable: false\n});\nbox.addConnector({\n  name: 'shaft-bottom',\n  front: [-1,0,0],\n  base: [-$.M/2 + $.E, -height / 2 - shaftHeight, 0],\n  accept: ['hinge','fix'],\n  prefer: 'hinge'\n});\nbox.addConnector({\n  name: 'aux-bottom',\n  front: [1,0,0],\n  base: [$.M/2 - $.E, -height / 2 - shaftHeight, 0],\n  accept: ['hinge','fix'],\n  prefer: 'fix'\n});\nbox.addConnector({\n  name: 'aux-top',\n  up: [0,-1,0],\n  front: [1,0,0],\n  base: [$.M/2 - $.E, height / 2 + shaftHeight, 0],\n  accept: ['hinge','fix'],\n  prefer: 'fix'\n});\nsystem.add(box);\n\nvar shaft = new Part({\n  name: 'SHAFT',\n  mass: 0.5 * options.massKg,\n  material: 'metal',\n  shape: 'cylinder',\n  diameter: options.shaftDiameter,\n  height: shaftHeight,\n  opacity: options.opacity,\n  y: shaftHeight/2 + height\n});\n\nshaft.addDress({\n  material: 'metal',\n  shape: 'cylinder',\n  diameter: options.shaftDiameter,\n  height: shaftHeight * 2,\n  opacity: options.opacity\n});\n\nshaft.addConnector({\n  name: 'center',\n  base: [0, 0, 0],\n  front: [-1,0,0],\n  touchable: false\n});\n\nshaft.addConnector({\n  name: 'shaft-top',\n  front: [-1,0,0],\n  base: [0, shaftHeight/2, 0],\n  prefer: 'fix',\n  allow: ['fix']\n});\n\nsystem.add(shaft);\n\nsystem.join({\n  fixed: 'CASE',\n  moved: 'SHAFT',\n  fixedIndex: 'shaft',\n  movedIndex: 'center'\n}, {\n  name: \"SERVO\",\n  type: 'servo',\n  isEnabled: true,\n  rpm: options.rpm,\n  torque: options.torqueKgCm,\n  angle: 0,\n  low: options.lowAngle,\n  high: options.highAngle\n});\nbox.avoidCollisionWith(shaft);\nsystem.setOptions(options);\n\nreturn system;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376409803303},"18898959":{"id":18898959,"name":"Brackets_U","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":1,\"cameraPosition\":[5.143242182588698,8.177762047099826,14.804970279566584],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Servos/Brackets\",\"dependencies\":[],\"connectorRadius\":0.25,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\n/*\n C or U shape Bracket\n */\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('BRACK'), //its important to include the name\n  mass: 0.05, //Kg\n  color: 0x666666,\n  width: 2.8 + 0.975 + 2 * (1.2 - 0.975) + 2 * 0.2, //H + K + 2*(G-K) + 2 * thickness\n  depth: 2,\n  height: 4,\n  thickness: 0.2,\n  friction: 0.3\n});\nvar part = new Part(_.extend(_.clone(options), {\n  shape: 'cube',\n  height: options.thickness,\n  y: options.thickness/2\n}));\n\npart.setOptions(_.clone(options));\n\npart.addBody(_.extend(_.clone(options), {\n  shape: 'cube',\n  height: options.height - options.depth/2,\n  width: options.thickness,\n  y: (options.height - options.depth/2)/2,\n  x: -options.width/2+options.thickness/2\n}));\n\npart.addBody(_.extend(_.clone(options), {\n  shape: 'cube',\n  height: options.height - options.depth/2,\n  width: options.thickness,\n  y: (options.height - options.depth/2)/2,\n  x: options.width/2-options.thickness/2\n}));\n\npart.addDress(_.extend(_.clone(options), {\n  shape: 'cylinder',\n  diameter: options.depth,\n  height: options.thickness,\n  y: options.height - options.depth/2,\n  x: -options.width/2+options.thickness/2,\n  rz: Math.PI/2\n}));\n\npart.addDress(_.extend(_.clone(options), {\n  shape: 'cylinder',\n  diameter: options.depth,\n  height: options.thickness,\n  y: options.height - options.depth/2,\n  x: options.width/2-options.thickness/2,\n  rz: Math.PI/2\n}));\n\npart.addConnector({\n  name: 'left',\n  base: [-options.width/2+options.thickness, options.height - options.depth/2, 0],\n  up: [1,0,0],\n  front: [0,-1,0],\n  accept: ['fix','hinge','servo'],\n  prefer: 'fix'\n});\npart.addConnector({\n  name: 'right',\n  base: [options.width/2-options.thickness, options.height - options.depth/2, 0],\n  up: [1,0,0],\n  front: [0,-1,0],\n  accept: ['fix','hinge','servo'],\n  prefer: 'servo'\n});\npart.addConnector({\n  name: 'top',\n  base: [0, -options.thickness/2, 0],\n  up: [0,-1,0],\n  front: [0,0,1],\n  prefer: 'fix'\n});\nreturn part;\n\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1375957058945},"18901152":{"id":18901152,"name":"TestServoBrackets","settings":"{\"program\":\"/*\\n     <h3>Test with Servo Brackets and Servos</h3>\\n\\n     The best results are obtained with the blue set, with GenericServo3.\\n\\n     The servos connected with the red brackets are copies of GenericServo 2\\n     \\n     The servos connected with blue brackets are copies of Generic Servo 3\\n     \\n     Analysis:\\n      \\n     In the red set the servos are systems, where the shaft is a separate part from the case, and there is a built in \\n     servo constraint between the shaft part and the case. This was made this way to isolate the servo parameters.\\n     \\n     In the red set the servos are simple parts, without any built in constraint. The servo must be defined when\\n     connecting the brackets.\\n     \\n     In both systems, not all connectors are used, because the more constraints there are the more demanding is the simulation,\\n     and for reasonable results one must increase the simulation quality. So, in the brackets, in oposite connectors one of them is \\n     free. If one o them is a servo the oposite is free, if one of them is fixed the other is free. In real situations you want\\n     also to make an hinge or a fixed connection in the oposite side. In this simulations case, this is not so relevant.\\n     \\n   \\n     \\n\\n*/\\n    \",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[-22.518959114975246,24.76993271091704,88.86839717520557],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"Brackets_U\",\"GenericServo3\",\"Platform\",\"GenericServo2\"],\"connectorRadius\":0.7642305518930118,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18901152.html\",\"embed\":\"<a href='http://assemblino.com/show/public18901152.html'><img src='http://assemblino.com/show/public18901152.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"TestServoBrackets\"},\"declarations\":{\"BRACK000\":{\"name\":\"BRACK000\",\"path\":[\"BRACK000\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK000\",\"mass\":0.01,\"color\":10951451,\"width\":4.6,\"depth\":1.5,\"height\":4,\"thickness\":0.2}},\"BRACK2\":{\"name\":\"BRACK2\",\"path\":[\"BRACK2\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK2\",\"mass\":0.01,\"color\":13581629,\"width\":4.6,\"depth\":1.5,\"height\":4,\"thickness\":0.2}},\"BRACK0000\":{\"name\":\"BRACK0000\",\"path\":[\"BRACK0000\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK0000\",\"mass\":0.01,\"color\":11152171,\"width\":4.6,\"depth\":1.5,\"height\":4,\"thickness\":0.2}},\"BRACK00000\":{\"name\":\"BRACK00000\",\"path\":[\"BRACK00000\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK00000\",\"mass\":0.01,\"color\":11606040,\"width\":4.6,\"depth\":1.5,\"height\":4,\"thickness\":0.2}},\"SERVO20\":{\"name\":\"SERVO20\",\"path\":[\"SERVO20\"],\"object\":\"GenericServo3\",\"options\":{\"name\":\"SERVO20\",\"color\":2236962,\"massKg\":0.045,\"opacity\":1,\"A\":1.982,\"B\":1.39,\"C\":3.435,\"D\":1,\"E\":1,\"F\":3,\"G\":1.2,\"H\":2.8,\"J\":5.31,\"K\":0.975,\"L\":0.442,\"M\":4,\"X\":0.32}},\"SERVO200\":{\"name\":\"SERVO200\",\"path\":[\"SERVO200\"],\"object\":\"GenericServo3\",\"options\":{\"name\":\"SERVO200\",\"color\":2236962,\"massKg\":0.045,\"opacity\":1,\"A\":1.982,\"B\":1.39,\"C\":3.435,\"D\":1,\"E\":1,\"F\":3,\"G\":1.2,\"H\":2.8,\"J\":5.31,\"K\":0.975,\"L\":0.442,\"M\":4,\"X\":0.32}},\"BRACK40\":{\"name\":\"BRACK40\",\"path\":[\"BRACK40\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK40\",\"mass\":0.05,\"color\":1723818,\"width\":4.625,\"depth\":1.5,\"height\":4,\"thickness\":0.2,\"friction\":0.3}},\"BRACK400\":{\"name\":\"BRACK400\",\"path\":[\"BRACK400\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK400\",\"mass\":0.01,\"color\":1723818,\"width\":4.625,\"depth\":1.5,\"height\":4,\"thickness\":0.2,\"friction\":0.3}},\"BRACK4\":{\"name\":\"BRACK4\",\"path\":[\"BRACK4\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK4\",\"mass\":0.05,\"color\":1723818,\"width\":4.625,\"depth\":1.5,\"height\":4,\"thickness\":0.2,\"friction\":0.3}},\"BRACK41\":{\"name\":\"BRACK41\",\"path\":[\"BRACK41\"],\"object\":\"Brackets_U\",\"options\":{\"name\":\"BRACK41\",\"mass\":0.05,\"color\":1723818,\"width\":4.625,\"depth\":1.5,\"height\":4,\"thickness\":0.2,\"friction\":0.3}},\"REDBASE\":{\"name\":\"REDBASE\",\"path\":[\"REDBASE\"],\"object\":\"Platform\",\"options\":{\"name\":\"REDBASE\",\"depth\":3,\"height\":3,\"width\":3,\"mass\":0,\"friction\":0.9,\"restitution\":0,\"color\":3938609,\"opacity\":1,\"margin\":0.01,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"BLUEBASE\":{\"name\":\"BLUEBASE\",\"path\":[\"BLUEBASE\"],\"object\":\"Platform\",\"options\":{\"name\":\"BLUEBASE\",\"depth\":3,\"height\":3,\"width\":3,\"mass\":0,\"friction\":0.9,\"restitution\":0,\"color\":1644604,\"opacity\":1,\"margin\":0.01,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"SERVO_RED_1\":{\"name\":\"SERVO_RED_1\",\"path\":[\"SERVO_RED_1\"],\"object\":\"GenericServo2\",\"options\":{\"name\":\"SERVO_RED_1\",\"color\":2236962,\"torqueKgCm\":60,\"massKg\":0.45,\"lowAngle\":-270,\"highAngle\":90,\"rpm\":50,\"shaftDiameter\":0.6,\"opacity\":1,\"A\":1.982,\"B\":1.39,\"C\":3.435,\"D\":1,\"E\":1,\"F\":3,\"G\":1.2,\"H\":2.8,\"J\":5.31,\"K\":0.975,\"L\":0.442,\"M\":4,\"X\":0.32}},\"SERVO_RED_2\":{\"name\":\"SERVO_RED_2\",\"path\":[\"SERVO_RED_2\"],\"object\":\"GenericServo2\",\"options\":{\"name\":\"SERVO_RED_2\",\"color\":2236962,\"torqueKgCm\":60,\"massKg\":0.45,\"lowAngle\":-270,\"highAngle\":-90,\"rpm\":50,\"shaftDiameter\":0.6,\"opacity\":1,\"A\":1.982,\"B\":1.39,\"C\":3.435,\"D\":1,\"E\":1,\"F\":3,\"G\":1.2,\"H\":2.8,\"J\":5.31,\"K\":0.975,\"L\":0.442,\"M\":4,\"X\":0.32}}},\"physics\":{\"BRACK000\":{\"position\":[4.026428699493408,17.74547576904297,17.52179527282715],\"quaternion\":[0.9981651902198792,0.01874612830579281,0.00377859640866518,0.05745091661810875]},\"BRACK2\":{\"position\":[4.005353927612305,8.887874603271484,16.6934871673584],\"quaternion\":[0.02056022919714451,0.9825840592384338,0.18467681109905243,-0.0005180378793738782]},\"BRACK0000\":{\"position\":[-0.7983351349830627,3.1476950645446777,14.623201370239258],\"quaternion\":[0.4790213108062744,0.6663460731506348,-0.2513195872306824,0.5131860971450806]},\"BRACK00000\":{\"position\":[3.999311685562134,8.70388412475586,16.614076614379883],\"quaternion\":[-0.6944057941436768,-0.11611230671405792,0.6951571106910706,0.14517280459403992]},\"SERVO20\":{\"position\":[-15.954951286315918,15.24168872833252,-8.681788444519043],\"quaternion\":[0.7099913358688354,0.7026768326759338,-0.03320450335741043,0.032481707632541656]},\"SERVO200\":{\"position\":[-15.431802749633789,7.994575500488281,-12.77942180633545],\"quaternion\":[0.7933270931243896,-0.2135373055934906,-0.3871231973171234,0.41853269934654236]},\"BRACK40\":{\"position\":[-16.005142211914062,11.535173416137695,-10.40195369720459],\"quaternion\":[0.29749906063079834,-0.0017801818903535604,-0.006303692236542702,0.9546996355056763]},\"BRACK400\":{\"position\":[-15.937788963317871,19.49614906311035,-8.76604175567627],\"quaternion\":[0.9994966387748718,-0.0014853918692097068,-0.00016201860853470862,0.03169034793972969]},\"BRACK4\":{\"position\":[-12.847124099731445,5.173977851867676,-14.63041877746582],\"quaternion\":[0.40997329354286194,-0.7119606733322144,0.0222098920494318,0.5696846842765808]},\"BRACK41\":{\"position\":[-16.007816314697266,11.363517761230469,-10.51558780670166],\"quaternion\":[0.6729698777198792,-0.21316444873809814,0.6786510944366455,-0.20274408161640167]},\"REDBASE\":{\"position\":[4.027580738067627,19.488079071044922,17.509977340698242],\"quaternion\":[0,0,0,1]},\"BLUEBASE\":{\"position\":[-15.937416076660156,21.14797019958496,-8.772146224975586],\"quaternion\":[0,0,0,1]},\"SERVO_RED_1/CASE\":{\"position\":[4.111828804016113,13.493207931518555,17.525123596191406],\"quaternion\":[-0.05321267247200012,0.04663331061601639,0.7207232713699341,0.6896026134490967]},\"SERVO_RED_1/SHAFT\":{\"position\":[2.159425735473633,12.385968208312988,17.66696548461914],\"quaternion\":[0.5696530342102051,-0.5411510467529297,-0.44578424096107483,-0.4288675785064697]},\"SERVO_RED_2/CASE\":{\"position\":[3.006438732147217,4.925811290740967,15.279400825500488],\"quaternion\":[-0.1323316991329193,0.8099389672279358,-0.5406088829040527,0.1850113719701767]},\"SERVO_RED_2/SHAFT\":{\"position\":[3.873654365539551,6.141740798950195,13.600744247436523],\"quaternion\":[-0.39829933643341064,-0.5944696664810181,0.4284493327140808,0.5517197251319885]}},\"connections\":[{\"fixed\":\"BRACK000\",\"moved\":\"SERVO_RED_1/CASE\",\"fixedIndex\":\"left\",\"movedIndex\":\"aux-top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":200,\"mirror\":false,\"offset\":0,\"angle\":180,\"isEnabled\":true}},{\"fixed\":\"SERVO_RED_1/SHAFT\",\"moved\":\"BRACK2\",\"fixedIndex\":\"shaft-top\",\"movedIndex\":\"right\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"SERVO_RED_2/CASE\",\"moved\":\"BRACK0000\",\"fixedIndex\":\"aux-bottom\",\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN1\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BRACK00000\",\"moved\":\"SERVO_RED_2/SHAFT\",\"fixedIndex\":\"right\",\"movedIndex\":\"shaft-top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BRACK2\",\"moved\":\"BRACK00000\",\"fixedIndex\":\"top\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":90,\"isEnabled\":true}},{\"fixed\":\"SERVO20\",\"moved\":\"BRACK40\",\"fixedIndex\":\"shaft\",\"movedIndex\":\"right\",\"controllerOptions\":{\"type\":\"servo\",\"name\":\"SERVO_in_BLUE_1\",\"rpm\":200,\"torque\":60,\"isEnabled\":true,\"angle\":-137.63692072003064,\"low\":-270,\"high\":-90,\"mirror\":false,\"offset\":0,\"gui\":true}},{\"fixed\":\"SERVO20\",\"moved\":\"BRACK400\",\"fixedIndex\":\"aux-bottom\",\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"SERVO200\",\"moved\":\"BRACK41\",\"fixedIndex\":\"shaft\",\"movedIndex\":\"right\",\"controllerOptions\":{\"type\":\"servo\",\"name\":\"SERVO_in_BLUE_2\",\"rpm\":200,\"torque\":5,\"isEnabled\":true,\"angle\":-219.26081960934508,\"low\":-270,\"high\":-90,\"mirror\":false,\"offset\":0,\"gui\":true}},{\"fixed\":\"SERVO200\",\"moved\":\"BRACK4\",\"fixedIndex\":\"aux-bottom\",\"movedIndex\":\"left\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"C\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BRACK40\",\"moved\":\"BRACK41\",\"fixedIndex\":\"top\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"C2\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":90,\"isEnabled\":true}},{\"fixed\":\"BLUEBASE\",\"moved\":\"BRACK400\",\"fixedIndex\":\"1-0-0-0\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"REDBASE\",\"moved\":\"BRACK000\",\"fixedIndex\":\"1-0-0-0\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONN0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}}],\"connectorOptions\":[[\"SERVO_RED_1/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":-265.5878973573343}],[\"SERVO_RED_2/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":-252.35158942933742}]],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"TestServoBrackets\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407057656},"18953158":{"id":18953158,"name":"GenericServo3","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":1,\"cameraPosition\":[7.379336200864661,13.21913334334161,2.7727304078560278],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Servos\",\"dependencies\":[],\"connectorRadius\":0.5,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Part\"}","code":"\n/*\n Generic Servo 3\n\n Like Generic Servo 2, but without additional part for the shaft, expecting to reduce the number or constraints, thus\n having better simulations with less CPU usage. The shaft connector is free to have a servo connection.\n\n\n Measures taken from:<br />\n http://www.servocity.com/html/hs-485hb_servo.html\n <br/>\n layout base on <br />\n http://hitecrcd.com/products/servos/discontinued-servos-servo-accessories/hsr-5498sg-hmi-premium-robot-servo/product\n */\n\nvar opt = _.defaults(arguments[0] || {}, {\n  name: nextName('SERVO'),\n  color: 0x222222,\n  massKg: 0.045,\n  opacity: 1,\n  A: 1.982,\n  B: 1.39,\n  C: 3.435,\n  D: 1,\n  E: 1,\n  F: 3,\n  G: 1.2,\n  H: 2.8,\n  J: 5.31,\n  K: 0.975,\n  L: 0.442,\n  M: 4,\n  X: 0.32\n});\n\nvar shaftHeight = opt.G - opt.K;\nvar width = opt.M;\nvar height = opt.H + opt.K;\nvar depth = opt.A;\n\nvar part = new Part(_.extend(_.clone(opt), {\n  name: 'CASE',\n  shape: 'box',\n  width: width,\n  height: height,\n  depth: depth,\n  mass: opt.massKg,\n  material: 'plastic',\n  y: depth / 2,\n  x: opt.M/2 - opt.E,\n  rx: Math.PI/2\n}));\nvar cylOptions =  {\n  shape: 'cylinder',\n  color: opt.color,\n  radius: 0.7 * Math.min(opt.E, opt.A),\n  height: opt.G - opt.K,\n  material: 'plastic',\n  opacity: opt.opacity,\n  y: height/2 + shaftHeight/2,\n  x: -opt.M/2 + opt.E\n};\n//the shaft\npart.addDress(_.extend(_.clone(cylOptions), {\n  material: 'metal',\n  color: 0xdddddd,\n  radius: cylOptions.radius/3,\n  height: cylOptions.height * 4\n}));\n//the prominences\npart.addDress(_.clone(cylOptions));\npart.addDress(_.extend(_.clone(cylOptions), {\n  x: -cylOptions.x\n}));\npart.addDress(_.extend(_.clone(cylOptions), {\n  y: -cylOptions.y,\n  x: cylOptions.x\n}));\npart.addDress(_.extend(_.clone(cylOptions), {\n  y: -cylOptions.y,\n  x: -cylOptions.x\n}));\npart.addConnector({\n  name: 'shaft',\n  front: [-1,0,0],\n  base: [-opt.M/2 + opt.E, height / 2 + shaftHeight, 0],\n  accept: ['servo'],\n  prefer: 'servo'\n});\npart.addConnector({\n  name: 'shaft-bottom',\n  front: [-1,0,0],\n  base: [-opt.M/2 + opt.E, -height / 2 - shaftHeight, 0],\n  accept: ['hinge'],\n  prefer: 'hinge'\n});\npart.addConnector({\n  name: 'aux-bottom',\n  front: [1,0,0],\n  base: [opt.M/2 - opt.E, -height / 2 - shaftHeight, 0],\n  accept: ['fix'],\n  prefer: 'fix'\n});\npart.addConnector({\n  name: 'aux-top',\n  up: [0,-1,0],\n  front: [1,0,0],\n  base: [opt.M/2 - opt.E, height / 2 + shaftHeight, 0],\n  accept: ['fix'],\n  prefer: 'fix'\n});\n\npart.setOptions(opt);\n\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1375977493309},"18959598":{"id":18959598,"name":"ServoWithBrackets1","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[9.082819660568688,8.847869588899613,18.78712139670232],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Servos\",\"dependencies\":[\"GenericServo3\",\"Brackets_U\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public18959598.html\",\"embed\":\"<a href='http://assemblino.com/show/public18959598.html'><img src='http://assemblino.com/show/public18959598.png'/></a>\"},\"owner\":\"public\",\"pointer\":4,\"objectType\":\"System\"}","code":"\n/*\n Generic Servo 3 with brackets\n */\n\nvar opt = _.defaults(arguments[0] || {}, {\n  name: nextName('SERVO'),\n  massKg: 0.045,\n  torqueKgCm: 6,\n  lowAngle: -90,\n  highAngle: 90,\n  initialAngle: -30,\n  rpm: 50,\n  servoColor: 0x111111,\n  brackets: ['shaft + auxiliary', 'shaft', 'auxiliary', 'none'],\n  bracketsColor: 0x333366,\n  opacity: 1,\n  width: 4\n});\n\nvar bracketsSet = opt.brackets instanceof Array ? opt.brackets[0] : opt.brackets;\nvar dimensions = {\n  A: 1.982,\n  B: 1.39,\n  C: 3.435,\n  D: 1,\n  E: 1,\n  F: 3,\n  G: 1.2,\n  H: 2.8,\n  J: 5.31,\n  K: 0.975,\n  L: 0.442,\n  M: 4,\n  X: 0.32\n};\nvar system = new System();\n\nvar scale = opt.width / dimensions.M;\nif (scale != 1) {\n  _.map(dimensions, function (value, key) {\n  dimensions[key] = value * scale;\n  });\n}\nsystem.setOptions(_.clone(opt));\n\nvar servoCase = Assemblino.get('GenericServo3', _.extend(_.extend(_.clone(opt), dimensions), {\n  name: 'CASE',\n  massKg: 0.9 * opt.massKg,\n  color: opt.servoColor\n}));\nvar sOpt = servoCase.getOptions();\nvar bracket = Assemblino.get('Brackets_U', _.extend(_.clone(opt), {\n  width: sOpt.H + sOpt.K + 4 * (sOpt.G - sOpt.K),\n  thickness: (sOpt.G - sOpt.K),\n  height: 2 * sOpt.A,\n  depth: sOpt.A,\n  name: 'BRK1',\n  mass: 0.1 * opt.massKg,\n  color: opt.bracketsColor\n}));\nvar bOpt = bracket.getOptions();\nbracket.setPhysics({\n  rotation: [-Math.PI / 2, -0, -Math.PI / 2],\n  position: [-bOpt.height + bOpt.depth / 2, bOpt.depth / 2, 0]\n});\n\nif (bracketsSet.match(/aux/i)) {\n  //fixed bracket\n  var bracket2 = Assemblino.get('Brackets_U', _.extend(_.clone(bOpt), {\n  name: 'BRK2',\n  mass: 0.1 * opt.massKg,\n  color: opt.bracketsColor\n  }));\n  bracket2.setPhysics({\n  rotation: [0, 0, Math.PI / 2],\n  position: [bOpt.height - bOpt.depth / 2 + sOpt.M / 2 - sOpt.E, 0, 0]\n  });\n  servoCase.add(bracket2);\n}\nsystem.add(servoCase);\nif (bracketsSet.match(/shaft/i)) {\n  system.add(bracket);\n\n  system.join({\n  fixed: 'CASE',\n  moved: 'BRK1',\n  fixedIndex: 'shaft',\n  movedIndex: 'right'\n  }, {\n  name: \"SERVO\",\n  type: 'servo',\n  isEnabled: true,\n  rpm: opt.rpm,\n  torque: opt.torqueKgCm,\n  angle: opt.initialAngle,\n  low: opt.lowAngle,\n  high: opt.highAngle,\n  angleOffset: -180\n  });\n}\nreturn system;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376409876029},"18979576":{"id":18979576,"name":"TestServoWithBrackets","settings":"{\"program\":\"/*\\n     TestServoWithBrackets\\n\\n     public\\n\\n     2013-08-08 18:06\\n     */\\n    \",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":30,\"cameraPosition\":[-45.12624683941711,24.558527294641884,-4.7558737290015785],\"cameraTarget\":[-3.5705999341569443,11.603992258933893,-0.63090085761163],\"folder\":\"Tests\",\"dependencies\":[\"ServoWithBrackets1\",\"GenericServo3\",\"Brackets_U\",\"Platform\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":26,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"TestServoWithBrackets\"},\"declarations\":{\"S1\":{\"name\":\"S1\",\"path\":[\"S1\"],\"object\":\"ServoWithBrackets1\",\"options\":{\"name\":\"S1\",\"massKg\":0.045,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":1774869,\"bracketsColor\":9840166,\"opacity\":1}},\"STATIC\":{\"name\":\"STATIC\",\"path\":[\"STATIC\"],\"object\":\"Platform\",\"options\":{\"name\":\"STATIC\",\"depth\":1,\"height\":5,\"width\":1,\"mass\":0,\"friction\":0.9,\"restitution\":0,\"color\":3359023,\"opacity\":0.7353595255744997,\"margin\":0,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"WEIGHT\":{\"name\":\"WEIGHT\",\"path\":[\"WEIGHT\"],\"object\":\"Platform\",\"options\":{\"name\":\"WEIGHT\",\"depth\":3,\"height\":3,\"width\":3,\"mass\":0.3,\"friction\":0.9,\"restitution\":0,\"color\":1411465,\"opacity\":1,\"margin\":0,\"connectorSet\":\"female\",\"connectorDistance\":4}}},\"physics\":{\"STATIC\":{\"position\":[-4.14312219619751,19.257490158081055,-1.5059292316436768],\"quaternion\":[0,0,0,1]},\"WEIGHT\":{\"position\":[-4.142809867858887,13.103489875793457,-8.067553520202637],\"quaternion\":[0.7069388628005981,0.706021785736084,-0.02970043197274208,0.02980838343501091]},\"S1/CASE\":{\"position\":[-4.14257287979126,13.574580192565918,-2.501370906829834],\"quaternion\":[0.47878849506378174,0.47842633724212646,-0.5207249522209167,0.5203031301498413]},\"S1/BRK1\":{\"position\":[-4.1432271003723145,16.617958068847656,-1.499387502670288],\"quaternion\":[0.9996441006660461,0.0004243121074978262,0.00005092140781925991,0.026674669235944748]}},\"connections\":[{\"fixed\":\"STATIC\",\"moved\":\"S1/BRK1\",\"fixedIndex\":\"1-0-0-0\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"S1/CASE\",\"moved\":\"WEIGHT\",\"fixedIndex\":\"top\",\"movedIndex\":\"5-0-0-0\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}}],\"connectorOptions\":[[\"S1/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":-90}]],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"TestServoWithBrackets\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376045015267},"19037847":{"id":19037847,"name":"ChildrenTests","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":5,\"cameraPosition\":[52.48725942864806,36.041430170926,40.94007556886588],\"cameraTarget\":[0,0,0],\"folder\":\"Tests/Composition\",\"dependencies\":[],\"connectorRadius\":1.5,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"System\"}","code":"\n/*\n This is a system composed by 3 parts Green, Red, Blue.\n\n All parts are created with some original translation and rotation.\n\n Blue is added as child of Green and then Green is added as child of Red.\n\n The result looks good: see TestsChildren assemble to verify that the children also collide respecting their geometries.\n\n Unfortunately the center of mass of th whole resulting part is the center of mass of the first parent part.\n */\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('ChildrenTests'),\n  color: 0x773333,\n  size: 5,\n  mass: 0.1,\n  friction: 10\n});\nvar system = new System();\nsystem.setOptions(options);\nvar parts = [];\nfor (var i = 0; i < 3; i++) {\n  var part = new Part(_.extend(_.clone(options), {\n  name: 'P' + i,\n  shape: 'box',\n  color: [0x772222, 0x227722, 0x222277][i],\n  x: (i && 1 || 0) * options.size,\n  y: (i == 0 ? 1: 0) * options.size,\n  ry: Math.PI/(i + 1.5),\n  rz: Math.PI/(i + 1.2),\n  rx: Math.PI/(i + 1.7)\n  }));\n  part.addConnector({\n  name: 'C' + i,\n  base: [0, options.size / 2, 0]\n  });\n  parts.push(part);\n}\nparts[1].add(parts[2]);\nparts[0].add(parts[1]);\nsystem.add(parts[0]);\n\nreturn system;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376047092626},"19042186":{"id":19042186,"name":"TestsChildren","settings":"{\"program\":\"/*\\nThis tests the connections between parts or system composed by other parts and systems.\\n\\nin the scene there are 2 copies of ~/Tests/Composition/ChildrenTest and some copies of\\nPlatform.\\n\\nThe platformss should connect to the ChildrenTest, without any margin or rotations to the faces. \\n\\nThe objects should be somehow static.\\n*/\\n    \",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[29.17800725048056,26.917286071681787,45.28057704230304],\"cameraTarget\":[0,0,0],\"folder\":\"Tests/Composition\",\"dependencies\":[\"ChildrenTests\",\"Platform\"],\"connectorRadius\":0.25,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":54,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"TestsChildren\"},\"declarations\":{\"GREEN\":{\"name\":\"GREEN\",\"path\":[\"GREEN\"],\"object\":\"ChildrenTests\",\"options\":{\"name\":\"GREEN\",\"color\":3722604,\"size\":5,\"mass\":0.1,\"friction\":10}},\"BLUE\":{\"name\":\"BLUE\",\"path\":[\"BLUE\"],\"object\":\"ChildrenTests\",\"options\":{\"name\":\"BLUE\",\"color\":3706829,\"size\":3,\"mass\":1,\"friction\":10}},\"PLATE0\":{\"name\":\"PLATE0\",\"path\":[\"PLATE0\"],\"object\":\"Platform\",\"options\":{\"name\":\"PLATE0\",\"depth\":2,\"height\":2,\"width\":2,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":12575690,\"opacity\":1,\"margin\":0.01,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"PLATE1\":{\"name\":\"PLATE1\",\"path\":[\"PLATE1\"],\"object\":\"Platform\",\"options\":{\"name\":\"PLATE1\",\"depth\":2,\"height\":2,\"width\":2,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":11194319,\"opacity\":1,\"margin\":0.01,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"PLATE2\":{\"name\":\"PLATE2\",\"path\":[\"PLATE2\"],\"object\":\"Platform\",\"options\":{\"name\":\"PLATE2\",\"depth\":1,\"height\":1,\"width\":1,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":14788067,\"opacity\":1,\"margin\":0.01,\"connectorSet\":\"female\",\"connectorDistance\":4}}},\"physics\":{\"PLATE0\":{\"position\":[-14.0107421875,2.6390931606292725,-8.123826026916504],\"quaternion\":[-0.4044676721096039,0.6538178324699402,0.6112693548202515,0.18782417476177216]},\"PLATE1\":{\"position\":[-7.662423133850098,6.5270676612854,-6.2825608253479],\"quaternion\":[0.8890135884284973,0.032916419208049774,-0.24112005531787872,-0.38785624504089355]},\"PLATE2\":{\"position\":[-7.669910430908203,6.7699360847473145,-12.046158790588379],\"quaternion\":[-0.4227520227432251,0.6316162347793579,-0.46089911460876465,0.45816338062286377]},\"GREEN/P0\":{\"position\":[-11.902676582336426,3.6963300704956055,-5.519728183746338],\"quaternion\":[-0.7478042840957642,0.1753605157136917,0.30068325996398926,0.565355658531189]},\"BLUE/P0\":{\"position\":[-15.516766548156738,1.8830372095108032,-9.989139556884766],\"quaternion\":[0.19593867659568787,0.761193573474884,0.5572317242622375,-0.2677409052848816]}},\"connections\":[{\"fixed\":\"GREEN/P0\",\"moved\":\"PLATE1\",\"fixedIndex\":\"C1\",\"movedIndex\":\"0-0-0-0\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL0\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"GREEN/P0\",\"moved\":\"PLATE0\",\"fixedIndex\":\"C0\",\"movedIndex\":\"3-0-0-0\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL1\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"GREEN/P0\",\"moved\":\"PLATE2\",\"fixedIndex\":\"C2\",\"movedIndex\":\"5-0-0-0\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL3\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"PLATE0\",\"moved\":\"BLUE/P0\",\"fixedIndex\":\"2-0-0-0\",\"movedIndex\":\"C0\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL5\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}}],\"connectorOptions\":[],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"TestsChildren\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376046761520},"19050626":{"id":19050626,"name":"GenericServo4","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":1,\"cameraPosition\":[3.7151638322301457,10.721155646917445,16.28321420513284],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Servos\",\"dependencies\":[],\"connectorRadius\":0.4,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public19050626.html\",\"embed\":\"<a href='http://assemblino.com/show/public19050626.html'><img src='http://assemblino.com/show/public19050626.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\n/*\n Generic Servo 4\n\n Like Generic Servo, but without additional part for the shaft, expecting to reduce the number or constraints, thus\n having better simulations with less CPU usage. The shaft connector is free to have a servo connection.\n\n\n Measures taken from:<br />\n http://www.servocity.com/html/hs-485hb_servo.html\n\n */\n\nvar opt = _.defaults(arguments[0] || {}, {\n  name: nextName('SERVO'),\n  color: 0x222222,\n  massKg: 0.045,\n  opacity: 1,\n  A: 1.982,\n  B: 1.39,\n  C: 3.435,\n  D: 1,\n  E: 1,\n  F: 3,\n  G: 1.2,\n  H: 2.8,\n  J: 5.31,\n  K: 0.975,\n  L: 0.442,\n  M: 4,\n  X: 0.32\n});\n\nvar shaftHeight = opt.G - opt.K;\nvar width = opt.M;\nvar height = opt.H + opt.K;\nvar depth = opt.A;\n\nvar part = new Part(_.extend(_.clone(opt), {\n  name: 'CASE',\n  shape: 'box',\n  width: width,\n  height: height,\n  depth: depth,\n  mass: opt.massKg,\n  material: 'plastic',\n  y: height / 2,\n  x: opt.M/2 - opt.E\n}));\n\n//the screw wings\nvar wingHeight = opt.K/4;\npart.addDress( {\n  shape: 'box',\n  color: opt.color,\n  width: opt.J,\n  height: wingHeight,\n  depth: opt.A,\n  material: 'plastic',\n  opacity: opt.opacity,\n  y: height/2 - opt.K + wingHeight/2\n});\n\nvar cylOptions =  {\n  shape: 'cylinder',\n  color: opt.color,\n  radius: 0.7 * Math.min(opt.E, opt.A),\n  height: opt.G - opt.K,\n  material: 'plastic',\n  opacity: opt.opacity,\n  y: height/2 + shaftHeight/2,\n  x: -opt.M/2 + opt.E\n};\n//the shaft\npart.addDress(_.extend(_.clone(cylOptions), {\n  material: 'metal',\n  color: 0xdddddd,\n  radius: cylOptions.radius/3,\n  height: cylOptions.height * 4\n}));\n//the prominences\npart.addDress(_.clone(cylOptions));\n\npart.addConnector({\n  name: 'shaft',\n  front: [-1,0,0],\n  base: [-opt.M/2 + opt.E, height / 2 + shaftHeight, 0],\n  accept: ['servo'],\n  prefer: 'servo'\n});\n\nvar bx = (opt.B+opt.C)/2;\nvar by = height/2 - opt.K;\nvar bz =  opt.D/2;\nvar bases = [\n  [-bx,by,bz],\n  [-bx,by, 0],\n  [-bx,by, -bz],\n  [bx,by, bz],\n  [bx,by, 0],\n  [bx,by, -bz]\n];\nvar fronts = [\n  [1,0,0],\n  [-1,0,0],\n  [1,0,0],\n  [-1,0,0],\n  [1,0,0],\n  [-1,0,0]\n];\nvar names =   ['f+', 'f!', 'f-', 'r+','r!','r-'];\nfor (var i = 0; i < names.length; i++){\n  part.addConnector({\n  name: names[i],\n  base: bases[i],\n  up: [0,-1,0],\n  front: fronts[i],\n  accept: ['hinge', 'fix'],\n  prefer: ['hinge']\n  });\n}\npart.setOptions(opt);\n\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376409832430},"19051923":{"id":19051923,"name":"ServoWithBrackets2","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":200,\"scenario\":\"plain\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":10,\"cameraPosition\":[4.997498297347084,11.03359405694144,18.93217985610849],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Servos\",\"dependencies\":[\"GenericServo4\",\"Brackets_U\",\"Platform\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://localhost:5679/show/public19051923.html\",\"embed\":\"<a href='http://localhost:5679/show/public19051923.html'><img src='http://localhost:5679/show/public19051923.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"System\"}","code":"\n/*\n Generic Servo 4 with brackets\n */\n//TODO the mass attribution is not correct\nvar opt = _.defaults(arguments[0] || {}, {\n  name: nextName('SERVO'),\n  massKg: 0.045,\n  torqueKgCm: 6,\n  lowAngle: -90,\n  highAngle: 90,\n  initialAngle: -30,\n  rpm: 50,\n  servoColor: 0x111111,\n  brackets: ['shaft + case', 'shaft', 'case', 'none'],\n  bracketsColor: 0x333366,\n  opacity: 1,\n  width: 4\n});\n\nvar bracketsSet = opt.brackets instanceof Array ? opt.brackets[0] : opt.brackets;\n//http://www.servocity.com/html/hs-485hb_servo.html\nvar dimensions = {\n  A: 1.982,\n  B: 1.39,\n  C: 3.435,\n  D: 1,\n  E: 1,\n  F: 3,\n  G: 1.2,\n  H: 2.8,\n  J: 5.31,\n  K: 0.975,\n  L: 0.442,\n  M: 4,\n  X: 0.32\n};\nvar system = new System();\n\nvar scale = opt.width / dimensions.M;\nif (scale != 1) {\n  _.map(dimensions, function (value, key) {\n  dimensions[key] = value * scale;\n  });\n}\nsystem.setOptions(_.clone(opt));\n\nvar servoCase = Assembler.get('GenericServo4', _.extend(_.extend(_.clone(opt), dimensions), {\n  name: 'CASE',\n  massKg: 0.9 * opt.massKg,\n  color: opt.servoColor\n}));\nvar sOpt = servoCase.getOptions();\n\nvar pos = servoCase.mesh.position;\nservoCase.setPhysics({\n  position: [pos.x,sOpt.A/2, pos.z],\n  rotation: [Math.PI/2,0,0]\n});\nvar bracket = Assembler.get('Brackets_U', _.extend(_.clone(opt), {\n  width: sOpt.H + sOpt.K + 4 * (sOpt.G - sOpt.K),\n  thickness: (sOpt.G - sOpt.K),\n  height: 2 * sOpt.A,\n  depth: sOpt.A,\n  name: 'BRK1',\n  mass: 0.1 * opt.massKg,\n  color: opt.bracketsColor\n}));\nvar bOpt = bracket.getOptions();\nbracket.setPhysics({\n  rotation: [-Math.PI / 2, -0, -Math.PI / 2],\n  position: [-bOpt.height + bOpt.depth / 2, bOpt.depth / 2, 0]\n});\n\nif (bracketsSet.match(/case/i)) {\n  //fixed bracket\n  var bracket2 = Assembler.get('Platform', _.extend(_.clone(bOpt), {\n  width: sOpt.J + bOpt.thickness*2,\n  height: sOpt.H + sOpt.K + bOpt.thickness * 1.9,\n  depth: sOpt.A + bOpt.thickness * 1.9,\n  name: 'BRK2',\n  connectorDistance: (sOpt.J + bOpt.thickness*2)/3\n  }));\n  bracket2.setPhysics({\n  position: [0,0,0]\n  });\n  servoCase.removeConnectorsExcept('shaft');\n  bracket2.removeConnectorsExcept([\n  '5-0-1-0','5-1-1-0','5-2-1-0','4-0-1-0','4-1-1-0','4-2-1-0','2-0-1-0','0-2-0-0','1-2-0-0'\n  ]);\n  //remove connectors\n  servoCase.add(bracket2);\n}\nsystem.add(servoCase);\nif (bracketsSet.match(/shaft/i)) {\n  system.add(bracket);\n\n  system.join({\n  fixed: 'CASE',\n  moved: 'BRK1',\n  fixedIndex: 'shaft',\n  movedIndex: 'right'\n  }, {\n  name: \"SERVO\",\n  type: 'servo',\n  isEnabled: true,\n  rpm: opt.rpm,\n  torque: opt.torqueKgCm,\n  angle: opt.initialAngle,\n  low: opt.lowAngle,\n  high: opt.highAngle,\n  angleOffset: -180\n  });\n}\nreturn system;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376668216985},"19060338":{"id":19060338,"name":"TestsMultipleServos","settings":"{\"program\":\"/*\\n     Tests with Multiple Servos\\n     \\n     Try changing Settings » Simulation » Quality\\n*/\\n    \",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"plain\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":40,\"cameraPosition\":[-26.121625686668764,42.57696616394925,-34.485222884853044],\"cameraTarget\":[8.326672684688674e-17,10.464764896358677,-1.1102230246251565e-16],\"folder\":\"Demos\",\"dependencies\":[\"ServoWithBrackets1\",\"GenericServo3\",\"Brackets_U\",\"ServoWithBrackets2\",\"GenericServo4\",\"Platform\",\"Rod\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://localhost:5679/show/public19060338.html\",\"embed\":\"<a href='http://localhost:5679/show/public19060338.html'><img src='http://localhost:5679/show/public19060338.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"TestsMultipleServos\"},\"declarations\":{\"SERVO0\":{\"name\":\"SERVO0\",\"path\":[\"SERVO0\"],\"object\":\"ServoWithBrackets1\",\"options\":{\"name\":\"SERVO0\",\"massKg\":0.045,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":1118481,\"brackets\":\"shaft + auxiliary\",\"bracketsColor\":3355494,\"opacity\":1,\"width\":4}},\"SERVO2\":{\"name\":\"SERVO2\",\"path\":[\"SERVO2\"],\"object\":\"ServoWithBrackets2\",\"options\":{\"name\":\"SERVO2\",\"massKg\":0.045,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":5585209,\"brackets\":\"shaft + case\",\"bracketsColor\":13899320,\"opacity\":1,\"width\":4}},\"SERVO3\":{\"name\":\"SERVO3\",\"path\":[\"SERVO3\"],\"object\":\"ServoWithBrackets1\",\"options\":{\"name\":\"SERVO3\",\"massKg\":0.045,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":1118481,\"brackets\":\"shaft + auxiliary\",\"bracketsColor\":7641901,\"opacity\":1,\"width\":4}},\"ROD0\":{\"name\":\"ROD0\",\"path\":[\"ROD0\"],\"object\":\"Rod\",\"options\":{\"name\":\"ROD0\",\"mass\":0.02,\"color\":1069726,\"height\":4,\"diameter\":1,\"margin\":0,\"connectorAxis\":\"axial\"}},\"PIVOT\":{\"name\":\"PIVOT\",\"path\":[\"PIVOT\"],\"object\":\"ServoWithBrackets2\",\"options\":{\"name\":\"PIVOT\",\"massKg\":0,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":1118481,\"brackets\":\"case\",\"bracketsColor\":12816924,\"opacity\":1,\"width\":2}}},\"physics\":{\"ROD0\":{\"position\":[-13.531757354736328,19.203449249267578,-1.7838621139526367],\"quaternion\":[-0.04037957265973091,-0.10957862436771393,0.8820481300354004,-0.45645710825920105]},\"SERVO0/CASE\":{\"position\":[-6.615604877471924,17.26582908630371,-10.293431282043457],\"quaternion\":[0.8884506821632385,0.4394104778766632,0.11944011598825455,0.0575140006840229]},\"SERVO0/BRK1\":{\"position\":[-7.999640464782715,16.42627716064453,-7.591217994689941],\"quaternion\":[-0.6300182342529297,0.1351148635149002,-0.3130831718444824,0.6977105140686035]},\"SERVO2/CASE\":{\"position\":[-1.4594882726669312,22.963533401489258,-8.87325668334961],\"quaternion\":[0.7003520727157593,-0.0934811681509018,0.09418196976184845,0.7013543844223022]},\"SERVO2/BRK1\":{\"position\":[-4.156396865844727,20.600481033325195,-9.614388465881348],\"quaternion\":[-0.19341382384300232,-0.7524771094322205,-0.2552471160888672,0.5755155682563782]},\"SERVO3/CASE\":{\"position\":[-9.122873306274414,16.372913360595703,-3.543644905090332],\"quaternion\":[0.7532198429107666,-0.18854576349258423,-0.5751074552536011,-0.25760775804519653]},\"SERVO3/BRK1\":{\"position\":[-11.811962127685547,18.02202606201172,-2.1143221855163574],\"quaternion\":[-0.04037947207689285,-0.10957791656255722,0.882049560546875,-0.4564545750617981]},\"PIVOT/CASE\":{\"position\":[-1.2467671632766724,25.23558807373047,-8.425023078918457],\"quaternion\":[0.8448808789253235,0.0005309664411470294,0.5349537134170532,0.0007145152776502073]}},\"connections\":[{\"fixed\":\"SERVO2/BRK1\",\"moved\":\"SERVO0/CASE\",\"fixedIndex\":\"top\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL1\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":90,\"isEnabled\":true}},{\"fixed\":\"SERVO0/BRK1\",\"moved\":\"SERVO3/CASE\",\"fixedIndex\":\"top\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL2\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":90,\"isEnabled\":true}},{\"fixed\":\"SERVO3/BRK1\",\"moved\":\"ROD0\",\"fixedIndex\":\"top\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL5\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"SERVO2/CASE\",\"moved\":\"PIVOT/CASE\",\"fixedIndex\":\"5-1-1-0\",\"movedIndex\":\"shaft\",\"controllerOptions\":{\"type\":\"servo\",\"name\":\"PIVOT\",\"rpm\":200,\"torque\":5,\"isEnabled\":true,\"angle\":49.42933741861356,\"low\":-180,\"high\":180,\"mirror\":false,\"offset\":0,\"angleOffset\":0,\"gui\":true}}],\"connectorOptions\":[[\"SERVO0/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":-90}],[\"SERVO2/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":51.187284565300644}],[\"SERVO3/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":68.83569513596322}]],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"TestsMultipleServos\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376667442751},"19060692":{"id":19060692,"name":"Rod","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":3,\"cameraPosition\":[29.120000000000008,29.120000000000008,29.120000000000008],\"cameraTarget\":[0,0,0],\"folder\":\"Structures\",\"dependencies\":[],\"connectorRadius\":0.9040685628178564,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public19060692.html\",\"embed\":\"<a href='http://assemblino.com/show/public19060692.html'><img src='http://assemblino.com/show/public19060692.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\n/*\n Rod\n */\nvar part = new Part();\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('ROD'), //its important to include the name\n  mass: 0.02,\n  color: randomColor(),\n  height: 10,\n  diameter: 1,\n  margin: 0.5,\n  connectorAxis: ['axial','perpendicular']\n});\npart.setOptions(options);\nvar axis = options.connectorAxis || 'axial';\nif (typeof axis == 'object'){\n  axis = axis[0];\n}\nvar up = {\n  axial: [0,1,0],\n  perpendicular: [0,0,1]\n}[axis];\npart.addBody(_.extend(_.clone(options), {\n  shape: 'cylinder',\n  material: 'plastic',\n  y: options.height/2\n}));\npart.addConnector({\n  name: 'top',\n  up: up,\n  base: [0,options.height/2 + options.margin, 0],\n  prefer: 'fix',\n  accept: ['fix', 'point', 'motor', 'servo','hinge']\n});\npart.addConnector({\n  name: 'bottom',\n  up: up,\n  base: [0,-options.height/2 - options.margin, 0],\n  prefer: 'fix',\n  accept: ['fix', 'point', 'motor', 'servo','hinge']\n});\npart.addConnector({\n  name: 'middle',\n  up: up,\n  base: [0,0,0],\n  prefer: 'slider',\n  accept: ['fix', 'point', 'motor', 'servo','hinge','slider']\n});\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407005638},"19072707":{"id":19072707,"name":"ArmWheelsAndScreens","settings":"{\"program\":\"/*\\n * Robot with arm and camera.\\n * \\n * The robot has a camera at the edge of its arm. The camera caption is displayed on the screen on top of the bigger one.\\n * If you allow usage of your camera your image will be displayed on the big box.\\n * \\n * Only the black wheel has a motor. The other have hinge connections.\\n * \\n * Try moving the controllers gently...\\n * \\n */ \",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":100,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":30,\"simulationQuality\":40,\"cameraPosition\":[-80.10984400272038,54.75691980040132,189.56236651502283],\"cameraTarget\":[0,0,0],\"folder\":\"Demos\",\"dependencies\":[\"BasicCube\",\"Wheel\",\"BasicCircularTube\",\"ServoWithBrackets2\",\"GenericServo4\",\"Brackets_U\",\"Platform\",\"ServoWithBrackets1\",\"GenericServo3\",\"Rod\",\"CameraAndScreen\",\"Camera\",\"Screen\",\"UserCameraScreen\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public19072707.html\",\"embed\":\"<a href='http://assemblino.com/show/public19072707.html'><img src='http://assemblino.com/show/public19072707.png'/></a>\"},\"owner\":\"public\",\"pointer\":3,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"Tutorial_03_Changing\"},\"declarations\":{\"BOX\":{\"name\":\"BOX\",\"path\":[\"BOX\"],\"object\":\"BasicCube\",\"options\":{\"depth\":30,\"height\":5,\"width\":15,\"mass\":2,\"friction\":0.9,\"restitution\":0,\"color\":8948087,\"opacity\":0.8,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"name\":\"BOX\"}},\"WHEEL\":{\"name\":\"WHEEL\",\"path\":[\"WHEEL\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":2236962,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL\"}},\"WHEEL2\":{\"name\":\"WHEEL2\",\"path\":[\"WHEEL2\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":9320761,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL2\"}},\"WHEEL3\":{\"name\":\"WHEEL3\",\"path\":[\"WHEEL3\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":9320761,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL3\"}},\"WHEEL4\":{\"name\":\"WHEEL4\",\"path\":[\"WHEEL4\"],\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":3,\"outerDiameter\":10,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":9320761,\"opacity\":0.9,\"units\":\"cm\",\"radiusSegments\":24,\"margin\":0.25,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL4\"}},\"SERVO1\":{\"name\":\"SERVO1\",\"path\":[\"SERVO1\"],\"object\":\"ServoWithBrackets2\",\"options\":{\"name\":\"SERVO1\",\"massKg\":0.045,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":1118481,\"brackets\":\"shaft + case\",\"bracketsColor\":3368508,\"opacity\":1,\"width\":6}},\"SERVO5\":{\"name\":\"SERVO5\",\"path\":[\"SERVO5\"],\"object\":\"ServoWithBrackets1\",\"options\":{\"name\":\"SERVO5\",\"massKg\":0.045,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":1118481,\"brackets\":\"shaft + auxiliary\",\"bracketsColor\":3355494,\"opacity\":1,\"width\":4}},\"ROD0\":{\"name\":\"ROD0\",\"path\":[\"ROD0\"],\"object\":\"Rod\",\"options\":{\"name\":\"ROD0\",\"mass\":0.02,\"color\":4169100,\"height\":5,\"diameter\":2,\"margin\":0,\"connectorAxis\":\"axial\"}},\"PAN\":{\"name\":\"PAN\",\"path\":[\"PAN\"],\"object\":\"ServoWithBrackets2\",\"options\":{\"name\":\"PAN\",\"massKg\":0.45,\"torqueKgCm\":6,\"lowAngle\":-90,\"highAngle\":90,\"initialAngle\":-30,\"rpm\":50,\"servoColor\":1118481,\"brackets\":\"case\",\"bracketsColor\":3355494,\"opacity\":1,\"width\":6}},\"CM\":{\"name\":\"CM\",\"path\":[\"CM\"],\"object\":\"CameraAndScreen\",\"options\":{\"cameraWidth\":3,\"cameraHeight\":2,\"cameraDepth\":1,\"cameraColor\":2241314,\"cameraMass\":0.001,\"screenWidth\":16,\"screenHeight\":8,\"screenDepth\":4,\"screenColor\":3355443,\"screenMass\":0.3,\"unitPixels\":8,\"name\":\"CM\"}},\"user\":{\"name\":\"user\",\"path\":[\"user\"],\"object\":\"UserCameraScreen\",\"options\":{\"width\":32,\"height\":24,\"depth\":8,\"mass\":0.5,\"unitPixels\":8,\"color\":4473924,\"name\":\"user\"}},\"BasicCube\":{\"name\":\"BasicCube\",\"path\":[\"BasicCube\"],\"object\":\"BasicCube\",\"options\":{\"depth\":5,\"height\":10,\"width\":5,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":10066346,\"opacity\":1,\"margin\":0.1,\"connectorSet\":\"mixed\",\"connectorDistance\":5,\"name\":\"BasicCube\"}}},\"physics\":{\"BOX\":{\"position\":[-2.178699016571045,4.996785640716553,43.04957580566406],\"quaternion\":[-0.1043289303779602,-0.000002017637370954617,0.9945428371429443,-9.80713252829446e-7]},\"WHEEL\":{\"position\":[-8.76085376739502,4.997246742248535,31.43071746826172],\"quaternion\":[0.29590100049972534,0.1561855673789978,-0.6422194838523865,0.6896396279335022]},\"WHEEL2\":{\"position\":[-12.911235809326172,4.997255802154541,50.995338439941406],\"quaternion\":[0.6753496527671814,0.7041260600090027,0.20953896641731262,-0.06482899934053421]},\"WHEEL3\":{\"position\":[8.55383586883545,4.997247219085693,35.10380554199219],\"quaternion\":[-0.5980886816978455,0.663353681564331,-0.3772059381008148,-0.24488261342048645]},\"WHEEL4\":{\"position\":[4.403449535369873,4.9972662925720215,54.66842269897461],\"quaternion\":[-0.5981010794639587,0.6633625626564026,-0.37718525528907776,-0.24486017227172852]},\"ROD0\":{\"position\":[-5.56020975112915,24.715253829956055,44.15707778930664],\"quaternion\":[0.6607974767684937,0.06575636565685272,-0.058274637907743454,0.7454037666320801]},\"user\":{\"position\":[-21.69213104248047,11.999995231628418,-22.388635635375977],\"quaternion\":[0.000001683830419096921,0.003555130446329713,4.935686774842907e-7,0.9999936819076538]},\"BasicCube\":{\"position\":[-21.69215202331543,29.099960327148438,-22.388221740722656],\"quaternion\":[0.000004673056537285447,0.0035551488399505615,5.234112450125394e-7,0.9999936819076538]},\"SERVO1/CASE\":{\"position\":[-4.125340938568115,15.744319915771484,52.225223541259766],\"quaternion\":[0.5419912934303284,-0.45409122109413147,0.4541589915752411,0.5420204997062683]},\"SERVO1/BRK1\":{\"position\":[-4.480769634246826,20.17085075378418,50.22806167602539],\"quaternion\":[0.08773156255483627,0.05865728110074997,0.9944019913673401,-0.005216690246015787]},\"SERVO5/CASE\":{\"position\":[-4.5689311027526855,24.39598846435547,49.73262023925781],\"quaternion\":[-0.10369855910539627,0.020337969064712524,-0.699458122253418,0.7068177461624146]},\"SERVO5/BRK1\":{\"position\":[-5.106149673461914,25.029125213623047,46.71111297607422],\"quaternion\":[0.6609939932823181,0.0657242089509964,-0.05828353017568588,0.7452316880226135]},\"PAN/CASE\":{\"position\":[-3.8139777183532715,10.758581161499023,50.758033752441406],\"quaternion\":[-0.000002939597152362694,0.6294763684272766,0.000002372995368205011,0.7770196199417114]},\"CM/CM_CAMERA\":{\"position\":[-6.081498622894287,24.355449676513672,41.224788665771484],\"quaternion\":[-0.005287851206958294,0.9943341016769409,-0.059843022376298904,-0.0876956433057785]},\"CM/CM_SCREEN\":{\"position\":[-21.65945053100586,29.099384307861328,-17.78830337524414],\"quaternion\":[0.00005210313611314632,0.003554884810000658,0.0000013213357306085527,0.9999936819076538]}},\"connections\":[{\"fixed\":\"BOX\",\"moved\":\"WHEEL\",\"fixedIndex\":30,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"motor\",\"name\":\"MOTOR1\",\"rpm\":0,\"torque\":5,\"isEnabled\":true,\"low\":-180,\"high\":180,\"mirror\":false,\"reverse\":false,\"offset\":0,\"gui\":true}},{\"fixed\":\"BOX\",\"moved\":\"WHEEL2\",\"fixedIndex\":34,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL0\",\"mirror\":false,\"offset\":0}},{\"fixed\":\"BOX\",\"moved\":\"WHEEL3\",\"fixedIndex\":35,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL2\",\"mirror\":true,\"offset\":0}},{\"fixed\":\"BOX\",\"moved\":\"WHEEL4\",\"fixedIndex\":39,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL5\",\"mirror\":true,\"offset\":0}},{\"fixed\":\"PAN/CASE\",\"moved\":\"SERVO1/CASE\",\"fixedIndex\":\"shaft\",\"movedIndex\":\"4-1-1-0\",\"controllerOptions\":{\"type\":\"servo\",\"name\":\"S-360\",\"rpm\":200,\"torque\":5,\"isEnabled\":true,\"angle\":-157.93948678667178,\"low\":-180,\"high\":180,\"mirror\":false,\"offset\":0,\"angleOffset\":0,\"gui\":true}},{\"fixed\":\"SERVO1/BRK1\",\"moved\":\"SERVO5/CASE\",\"fixedIndex\":\"top\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CONTROL6\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"SERVO5/BRK1\",\"moved\":\"ROD0\",\"fixedIndex\":\"top\",\"movedIndex\":\"top\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"FIX\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BOX\",\"moved\":\"PAN/CASE\",\"fixedIndex\":23,\"movedIndex\":\"1-2-0-0\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"FIX2\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":-90,\"isEnabled\":true}},{\"fixed\":\"ROD0\",\"moved\":\"CM/CM_CAMERA\",\"fixedIndex\":\"bottom\",\"movedIndex\":\"back\",\"controllerOptions\":{\"type\":\"fix\",\"name\":\"CAM_fix\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":180,\"isEnabled\":true}},{\"fixed\":\"user\",\"moved\":\"BasicCube\",\"fixedIndex\":1,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"cv\",\"force\":20,\"mirror\":true,\"offset\":0,\"angle\":0,\"isEnabled\":true}},{\"fixed\":\"BasicCube\",\"moved\":\"CM/CM_SCREEN\",\"fixedIndex\":4,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"fix\",\"name\":\"cb\",\"force\":20,\"mirror\":false,\"offset\":0,\"angle\":0,\"isEnabled\":true}}],\"connectorOptions\":[[\"SERVO1/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":-83.38184603600153}],[\"SERVO5/CASE\",\"shaft\",{\"isEnabled\":true,\"rpm\":50,\"angle\":-90}]],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"Tutorial_03_Changing\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376410148923},"19219969":{"id":19219969,"name":"Tube","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":2,\"cameraPosition\":[-12.849748970061889,20.33907655320169,23.808641107360057],\"cameraTarget\":[0,0,0],\"folder\":\"Structures\",\"dependencies\":[],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public19219969.html\",\"embed\":\"<a href='http://assemblino.com/show/public19219969.html'><img src='http://assemblino.com/show/public19219969.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\n/*\n Circular Tube\n\n This tube allows objects passing trough.\n\n Attention: The center of mass is not centered, but concentrated in one side segment.\n */\nvar part = new Part();\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('Tube'), //its important to include the name\n  mass: 0.01, //Kg\n  color: randomColor(),\n  length: 4,\n  diameter: 8,\n  thickness: 1,\n  segments: 12,\n  friction: 0.6,\n  restitution: 0.3,\n  opacity: 1\n});\nvar i;\n//some validations\nvar min = 0.001;\n//prefix is used to assign a prefix to connectors. allowing to assign different names to connectors if the parent part has repetitions of this part\nvar prefix = options.cprefix || \"\";\nif (options.length < min) options.length = min;\nif (options.diameter < min) options.diameter = min;\nif (options.thickness > (options.diameter / 2 - min)) options.thickness = options.diameter / 2 - min;\noptions.segments = Math.max(Math.round(options.segments), 3);\npart.setOptions(options);\n\nvar outer = new THREE.CylinderGeometry(options.diameter / 2, options.diameter / 2, options.length, options.segments, 1);\nvar inner = new THREE.CylinderGeometry(options.diameter / 2 - options.thickness, options.diameter / 2 - options.thickness, options.length, options.segments, 1);\nvar fv = ['a', 'b', 'c', 'd'];\nvar angleStep = Math.PI / (2 * options.segments + 1);\nvar angle = angleStep;\nfor (i = 0; i < outer.faces.length; i++) {\n  var face = outer.faces[i];\n  var vertices = [];\n  if (!(face instanceof THREE.Face4)) continue;\n  _.map(fv, function (abcd) {\n  vertices.push(outer.vertices[face[abcd]]);\n  vertices.push(inner.vertices[face[abcd]]);\n  });\n  part.addBody(_.clonex(options, {\n  shape: 'convex',\n  material: 'phong',\n  vertices: vertices,\n  height: options.length\n  }));\n  angle += angleStep;\n}\n\npart.mesh.position.y = options.length / 2;\npart.addConnector({\n  name: prefix + 'top',\n  base: [0, options.length / 2, 0]\n});\npart.addConnector({\n  name: prefix + 'bottom',\n  base: [0, -options.length / 2, 0]\n});\npart.addConnector({\n  name: prefix + 'center',\n  base: [0, 0, 0]\n});\nfor (i = 0; i < 4; i++) {\n  part.addConnector({\n  name: prefix + 'r'+i*360/4,\n  base: [(options.diameter/2) * Math.sin(2 * i * Math.PI / 4),0,(options.diameter/2) * Math.cos(2 * i * Math.PI / 4)],\n  up: [Math.sin(2 * i * Math.PI / 4),0,Math.cos(2 * i * Math.PI / 4)],\n  front: [0,1,0]\n  });\n}\nreturn part;\n\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376412016781},"19224907":{"id":19224907,"name":"TestTubes","settings":"{\"program\":\"/*\\nThe tubes should pass trough each other.\\n*/\\n    \",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":50,\"simulationQuality\":3,\"cameraPosition\":[106.49223333793768,144.85135278454055,59.39186167680255],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"Tube\",\"RectangularTube\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public19224907.html\",\"embed\":\"<a href='http://assemblino.com/show/public19224907.html'><img src='http://assemblino.com/show/public19224907.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"TestTubes\"},\"declarations\":{\"BIG\":{\"name\":\"BIG\",\"path\":[\"BIG\"],\"object\":\"Tube\",\"options\":{\"name\":\"BIG\",\"mass\":0.1,\"color\":3297844,\"length\":20,\"diameter\":32,\"thickness\":2,\"segments\":32}},\"Tube2\":{\"name\":\"Tube2\",\"path\":[\"Tube2\"],\"object\":\"Tube\",\"options\":{\"name\":\"Tube2\",\"mass\":0.1,\"color\":15998480,\"length\":15,\"diameter\":8,\"thickness\":1,\"segments\":8}},\"Tube3\":{\"name\":\"Tube3\",\"path\":[\"Tube3\"],\"object\":\"Tube\",\"options\":{\"name\":\"Tube3\",\"mass\":0.01,\"color\":1028340,\"length\":4,\"diameter\":8,\"thickness\":1,\"segments\":8}},\"MEDIUM\":{\"name\":\"MEDIUM\",\"path\":[\"MEDIUM\"],\"object\":\"Tube\",\"options\":{\"name\":\"MEDIUM\",\"mass\":0.1,\"color\":1343404,\"length\":16,\"diameter\":52,\"thickness\":3,\"segments\":32}},\"TUB\":{\"name\":\"TUB\",\"path\":[\"TUB\"],\"object\":\"RectangularTube\",\"options\":{\"name\":\"TUB\",\"mass\":0.01,\"color\":3910061,\"height\":16,\"width\":70,\"depth\":80,\"thickness\":2,\"friction\":0.6,\"restitution\":0.3,\"opacity\":0.8}}},\"physics\":{\"BIG\":{\"position\":[-6.763794422149658,10.039999961853027,2.502439260482788],\"quaternion\":[7.090326903380628e-7,0.9485560655593872,-0.0000014276097317633685,0.3166091740131378]},\"Tube2\":{\"position\":[-6.228581428527832,7.540058612823486,-7.198698997497559],\"quaternion\":[-0.000021089766960358247,-0.4322909712791443,0.000005357428563002031,0.9017341732978821]},\"Tube3\":{\"position\":[-21.556211471557617,3.7355451583862305,28.95453453063965],\"quaternion\":[0.6987353563308716,0.3675882816314697,-0.10845082998275757,0.6040580868721008]},\"MEDIUM\":{\"position\":[-1.5773351192474365,8.039998054504395,0.8114242553710938],\"quaternion\":[6.980247935217676e-9,-0.015621660277247429,2.3519759473344948e-9,0.9998779892921448]},\"TUB\":{\"position\":[2.902050256729126,8.039998054504395,-2.352487564086914],\"quaternion\":[1.7167603449941282e-10,-0.0000010231690339423949,2.6319024737375685e-10,1]}},\"connections\":[],\"connectorOptions\":[],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"TestTubes\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376407027780},"19226972":{"id":19226972,"name":"RectangularTube","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":false,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":250,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":2,\"cameraPosition\":[-15.174022892134989,27.86154835729952,11.79527987851515],\"cameraTarget\":[0,0,0],\"folder\":\"Structures\",\"dependencies\":[],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public19226972.html\",\"embed\":\"<a href='http://assemblino.com/show/public19226972.html'><img src='http://assemblino.com/show/public19226972.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\n/*\n Rectangular Tube\n\n This tube allows objects passing trough.\n\n Attention: The center of mass is not centered, but concentrated in one side segment.\n */\nvar part = new Part();\n\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('TUBE'), //its important to include the name\n  mass: 0.01, //Kg\n  color: randomColor(),\n  height: 4,\n  width: 8,\n  depth: 6,\n  thickness: 1,\n  friction: 0.6,\n  restitution: 0.3,\n  opacity: 1\n});\nvar i;\n//some validations\nvar min = 0.001;\n//prefix is used to assign a prefix to connectors. allowing to assign different names to connectors if the parent part has repetitions of this part\nvar prefix = options.cprefix || \"\";\nif (options.height < min) options.height = min;\nif (options.width < min) options.width = min;\nif (options.depth < min) options.depth = min;\nif (options.thickness > (options.width / 2 - min)) options.thickness = options.width / 2 - min;\nif (options.thickness > (options.depth / 2 - min)) options.thickness = options.depth / 2 - min;\npart.setOptions(options);\n\nvar outer = new THREE.CubeGeometry(options.width, options.height, options.depth);\nvar inner = new THREE.CubeGeometry(options.width-options.thickness*2, options.height, options.depth-options.thickness*2);\nvar fv = ['a', 'b', 'c', 'd'];\nfor (i = 0; i < 4; i++) {\n  var face = outer.faces[[0,1,4,5][i]];\n  var vertices = [];\n  if (!(face instanceof THREE.Face4)) continue;\n  _.map(fv, function (abcd) {\n  vertices.push(outer.vertices[face[abcd]]);\n  vertices.push(inner.vertices[face[abcd]]);\n  });\n  part.addBody(_.clonex(options, {\n  shape: 'convex',\n  material: 'lambert',\n  vertices: vertices,\n  height: options.height\n  }));\n}\npart.mesh.position.y = options.height / 2;\npart.addConnector({\n  name: prefix + 'top',\n  base: [0, options.height / 2, 0]\n});\npart.addConnector({\n  name: prefix + 'bottom',\n  base: [0, -options.height / 2, 0]\n});\npart.addConnector({\n  name: prefix + 'center',\n  base: [0, 0, 0]\n});\npart.addConnector({\n  name: prefix + '+d',\n  base: [0, 0, options.depth/2],\n  up: [0,0,1],\n  front: [0,1,0]\n});\npart.addConnector({\n  name: prefix + '-d',\n  base: [0, 0, -options.depth/2],\n  up: [0,0,-1],\n  front: [0,1,0]\n});\npart.addConnector({\n  name: prefix + '+w',\n  base: [options.width/2, 0, 0],\n  up: [1,0,0],\n  front: [0,1,0]\n});\npart.addConnector({\n  name: prefix + '-w',\n  base: [-options.width/2, 0, 0],\n  up: [-1,0,0],\n  front: [0,1,0]\n});\nreturn part;\n\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376406969893},"19648107":{"id":19648107,"name":"LinearMotor","settings":"{\"program\":\"\",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":125,\"scenario\":\"plain\",\"showAxis\":false,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":5,\"cameraPosition\":[8.257935173080478,4.815460415805939,5.777637281275136],\"cameraTarget\":[0,0,0],\"folder\":\"Actuators/Linear Motors/\",\"dependencies\":[],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"https://assemblino.com/show/public19648107.html\",\"embed\":\"<a href='https://assemblino.com/show/public19648107.html'><img src='https://assemblino.com/show/public19648107.png'/></a>\"},\"owner\":\"public\",\"pointer\":14,\"objectType\":\"System\"}","code":"\n/*\n Linear Motor\n <br/><br/>\n Special feature: with Interaction » Run Program enabled you can press the key (default a) \n and up or down arrows to change the position.\n <br/><br/>\n Units:\n <br/>force, mass: Kg;\n <br/>length, stroke: cm;\n <br/>speed: cm/s\n */\nvar options = _.defaults(arguments[0] || {}, {\n  name: nextName('LM'),\n  force: 5,\n  length: 10,\n  stroke: 8,\n  speed: 5,\n  mass: 0.02,\n  width: 1,\n  color: 0x667799,\n  opacity: 1,\n  key: \"a\"\n});\nvar system = new System();\nsystem.setOptions(options);\n//case\nvar box = new Part({\n  name: 'case',\n  mass: (2/3) * options.mass,\n  material: 'metal',\n  shape: 'box',\n  color: options.color,\n  opacity: options.opacity,\n  width: options.width * 0.8,\n  depth: options.length,\n  height: options.width,\n  y: options.width / 2\n});\n//motor attached to case\nbox.addBody({\n  material: 'metal',\n  shape: 'cylinder',\n  color: options.color,\n  opacity: options.opacity,\n  diameter: options.width,\n  height: options.length/3,\n  y: options.width,\n  z: -options.length/2 + options.length/6,\n  rx: Math.PI/2\n});\nbox.addConnector({\n  name: 'center',\n  base: [0,0,0],\n  up: [0,0,1],\n  front: [0,1,0],\n  touchable: false\n});\n//the case metal connector\nbox.addDress({\n  shape: 'cylinder',\n  material: 'metal',\n  opacity: options.opacity,\n  diameter: options.width/2,\n  height: options.width/2,\n  z: -options.length/2-options.width/2,\n  rz: Math.PI/2\n});\n//the hole\nbox.addDress({\n  shape: 'cylinder',\n  material: 'basic',\n  color: 0x000000,\n  opacity: options.opacity,\n  diameter: options.width/4,\n  height: options.width/2 + 0.01,\n  z: -options.length/2-options.width/2,\n  rz: Math.PI/2\n});\n//connection to case\nbox.addDress({\n  shape: 'box',\n  material: 'metal',\n  opacity: options.opacity,\n  depth: options.width/2,\n  height: options.width/2,\n  width: options.width/2,\n  z: -options.length/2-options.width/4,\n  rz: Math.PI/2\n});\nbox.addConnector({\n  name: 'back',\n  base: [0,0,-options.length/2-options.width/2],\n  up: [1,0,0],\n  front: [0,1,0],\n  prefer: 'hinge',\n  accept: ['hinge','point','fix']\n});\nsystem.add(box);\nvar piston = new Part({\n  name: 'piston',\n  mass: (1/3) * options.mass,\n  material: 'metal',\n  shape: 'box',\n  color: options.color,\n  opacity: options.opacity,\n  width: options.width/2,\n  depth: options.length,\n  height: options.width/2,\n  y: options.width / 2\n});\npiston.addConnector({\n  name: 'center',\n  base: [0,0,0],\n  up: [0,0,1],\n  front: [0,1,0],\n  touchable: false\n});\n//\n//the case metal connector\npiston.addDress({\n  shape: 'cylinder',\n  material: 'metal',\n  opacity: options.opacity,\n  diameter: options.width/2,\n  height: options.width/2,\n  z: options.length/2+options.width/2,\n  rz: Math.PI/2\n});\n//the hole\npiston.addDress({\n  shape: 'cylinder',\n  material: 'basic',\n  color: 0x000000,\n  opacity: options.opacity,\n  diameter: options.width/4,\n  height: options.width/2 + 0.01,\n  z: -(-options.length/2-options.width/2),\n  rz: Math.PI/2\n});\n//connection to piston\npiston.addDress({\n  shape: 'box',\n  material: 'metal',\n  opacity: options.opacity,\n  depth: options.width/2,\n  height: options.width/2,\n  width: options.width/2,\n  z: -(-options.length/2-options.width/4),\n  rz: Math.PI/2\n});\npiston.addConnector({\n  name: 'front',\n  base: [0,0,options.length/2+options.width/2],\n  up: [1,0,0],\n  front: [0,1,0],\n  prefer: 'hinge',\n  accept: ['hinge','point','fix']\n});\npiston.avoidCollisionWith(box);\nsystem.add(piston);\n\nsystem.join({\n  fixed: 'case',\n  moved: 'piston',\n  fixedIndex: 'center',\n  movedIndex: 'center'\n}, {\n  name: \"LINEAR\",\n  type: 'linear',\n  isEnabled: true,\n  velocity: options.speed,\n  force: options.force,\n  position: 0,\n  low: 0,\n  high: options.stroke\n});\n\nvar program = new Program(system);\n\nprogram.keys['+' + options.key + ' +up !down'] = function () {\n  var linear = this.getController('LINEAR');\n  var position = linear.getPosition();\n  var high = linear.getHigh();\n  var low = linear.getLow();\n  var delta = 0.05*(high-low);\n  position = Math.min(position + delta, high);\n  linear.setPosition(position);\n  if (!linear.isEnabled()) linear.enable();\n};\nprogram.keys['+' + options.key + ' !up +down'] = function () {\n  var linear = this.getController('LINEAR');\n  var position = linear.getPosition();\n  var high = linear.getHigh();\n  var low = linear.getLow();\n  var delta = 0.05*(high-low);\n  position = Math.max(position - delta, low);\n  linear.setPosition(position);\n  if (!linear.isEnabled()) linear.enable();\n};\nreturn system;\n\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376655081979},"19658272":{"id":19658272,"name":"TestLinearMotor","settings":"{\"program\":\"/*\\n     Tests with linear motors\\n     \\n     Control the linear motors with sliders or while pressing\\n     arrows up or down and keys a,s,d,f\\n*/\\n    \",\"options\":{\"pause\":false,\"autoStart\":true,\"codeEditor\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"softHandling\":false,\"renderInterval\":150,\"scenario\":\"plain\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":30,\"simulationQuality\":3,\"cameraPosition\":[55.97571324111439,22.20812329814046,-33.988351015019354],\"cameraTarget\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"LinearMotor\",\"Platform\"],\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"https://assemblino.com/show/public19658272.html\",\"embed\":\"<a href='https://assemblino.com/show/public19658272.html'><img src='https://assemblino.com/show/public19658272.png'/></a>\"},\"owner\":\"public\",\"pointer\":34,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.content = {\"options\":{\"name\":\"TestLinearMotor\"},\"declarations\":{\"LM1\":{\"name\":\"LM1\",\"path\":[\"LM1\"],\"object\":\"LinearMotor\",\"options\":{\"name\":\"LM1\",\"force\":5,\"length\":10,\"stroke\":8,\"speed\":5,\"mass\":0.02,\"width\":1,\"color\":10053270,\"opacity\":1,\"key\":\"a\"}},\"LM2\":{\"name\":\"LM2\",\"path\":[\"LM2\"],\"object\":\"LinearMotor\",\"options\":{\"name\":\"LM2\",\"force\":5,\"length\":10,\"stroke\":8,\"speed\":5,\"mass\":0.02,\"width\":1,\"color\":4226988,\"opacity\":1,\"key\":\"s\"}},\"LM3\":{\"name\":\"LM3\",\"path\":[\"LM3\"],\"object\":\"LinearMotor\",\"options\":{\"name\":\"LM3\",\"force\":5,\"length\":10,\"stroke\":8,\"speed\":5,\"mass\":0.02,\"width\":1,\"color\":4367395,\"opacity\":1,\"key\":\"d\"}},\"PLATE1\":{\"name\":\"PLATE1\",\"path\":[\"PLATE1\"],\"object\":\"Platform\",\"options\":{\"name\":\"PLATE1\",\"depth\":18,\"height\":1,\"width\":10,\"mass\":0.1,\"friction\":0.9,\"restitution\":0,\"color\":6710903,\"opacity\":1,\"margin\":0.5,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"PLATE5\":{\"name\":\"PLATE5\",\"path\":[\"PLATE5\"],\"object\":\"Platform\",\"options\":{\"name\":\"PLATE5\",\"depth\":18,\"height\":1,\"width\":10,\"mass\":0.5,\"friction\":0.9,\"restitution\":0,\"color\":2391930,\"opacity\":1,\"margin\":0.5,\"connectorSet\":\"female\",\"connectorDistance\":4}},\"LM0\":{\"name\":\"LM0\",\"path\":[\"LM0\"],\"object\":\"LinearMotor\",\"options\":{\"name\":\"LM0\",\"force\":5,\"length\":25,\"stroke\":6,\"speed\":5,\"mass\":0.02,\"width\":1,\"color\":4226988,\"opacity\":1,\"key\":\"f\"}},\"LMX\":{\"name\":\"LMX\",\"path\":[\"LMX\"],\"object\":\"LinearMotor\",\"options\":{\"name\":\"LMX\",\"force\":5,\"length\":25,\"stroke\":6,\"speed\":5,\"mass\":0.02,\"width\":1,\"color\":4226988,\"opacity\":1,\"key\":\"f\"}}},\"physics\":{\"PLATE1\":{\"position\":[6.043562412261963,9.696528434753418,7.949959754943848],\"quaternion\":[0.6445304751396179,-0.353928804397583,0.4572502076625824,0.5002370476722717]},\"PLATE5\":{\"position\":[17.243221282958984,0.4999644458293915,4.028038024902344],\"quaternion\":[0.0000025254337288060924,-0.5781374573707581,-4.482429716290426e-8,0.8159393668174744]},\"LM1/case\":{\"position\":[2.534508466720581,0.43941324949264526,-5.137042999267578],\"quaternion\":[0.4047074317932129,0.43493416905403137,0.5490577220916748,0.5878603458404541]},\"LM1/piston\":{\"position\":[10.171473503112793,0.45689886808395386,-2.782439947128296],\"quaternion\":[0.5576552152633667,0.20360054075717926,0.758181631565094,0.269681453704834]},\"LM2/case\":{\"position\":[9.374939918518066,0.43138647079467773,-12.75615119934082],\"quaternion\":[-0.359953373670578,-0.3848503828048706,0.5804919004440308,0.6207679510116577]},\"LM2/piston\":{\"position\":[2.2076053619384766,0.42638099193573,-9.200796127319336],\"quaternion\":[-0.3613967299461365,-0.3836705982685089,0.5829182863235474,0.6183813810348511]},\"LM3/case\":{\"position\":[19.054792404174805,0.43190160393714905,-17.967039108276367],\"quaternion\":[-0.3406442403793335,-0.36405128240585327,0.5922040343284607,0.6330264806747437]},\"LM3/piston\":{\"position\":[19.05507469177246,0.4318895637989044,-17.96705436706543],\"quaternion\":[-0.33625900745391846,-0.3681263327598572,0.5850477814674377,0.6396342515945435]},\"LM0/case\":{\"position\":[16.888837814331055,8.427074432373047,9.972054481506348],\"quaternion\":[-0.2629646062850952,-0.5473052859306335,-0.18582551181316376,0.7725123763084412]},\"LM0/piston\":{\"position\":[15.653121948242188,9.44692325592041,10.402318000793457],\"quaternion\":[-0.5472207069396973,0.2643347978591919,0.7717183232307434,0.18742315471172333]},\"LMX/case\":{\"position\":[13.242573738098145,8.428417205810547,-0.40514880418777466],\"quaternion\":[-0.2629658877849579,-0.5472438335418701,-0.18587085604667664,0.7725445628166199]},\"LMX/piston\":{\"position\":[12.052814483642578,9.39475154876709,0.01123331394046545],\"quaternion\":[-0.26522570848464966,-0.5464367270469666,-0.18354514241218567,0.772899329662323]}},\"connections\":[{\"fixed\":\"LM1/case\",\"moved\":\"LM2/piston\",\"fixedIndex\":\"back\",\"movedIndex\":\"front\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL0\",\"mirror\":false,\"offset\":0}},{\"fixed\":\"LM2/case\",\"moved\":\"LM3/piston\",\"fixedIndex\":\"back\",\"movedIndex\":\"front\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL3\",\"mirror\":false,\"offset\":0}},{\"fixed\":\"PLATE5\",\"moved\":\"PLATE1\",\"fixedIndex\":\"4-0-0-0\",\"movedIndex\":\"4-0-0-0\",\"controllerOptions\":{\"type\":\"point\",\"name\":\"CONTROL4\",\"offset\":0,\"mirror\":false}},{\"fixed\":\"PLATE5\",\"moved\":\"PLATE1\",\"fixedIndex\":\"4-2-0-0\",\"movedIndex\":\"4-2-0-0\",\"controllerOptions\":{\"type\":\"point\",\"name\":\"CONTROL6\",\"offset\":0,\"mirror\":true}},{\"fixed\":\"PLATE1\",\"moved\":\"LM0/piston\",\"fixedIndex\":\"2-0-0-0\",\"movedIndex\":\"front\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL13\",\"mirror\":false,\"offset\":0}},{\"fixed\":\"PLATE5\",\"moved\":\"LM0/case\",\"fixedIndex\":\"2-0-0-0\",\"movedIndex\":\"back\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL15\",\"mirror\":true,\"offset\":0}},{\"fixed\":\"PLATE5\",\"moved\":\"LM1/piston\",\"fixedIndex\":\"3-0-0-2\",\"movedIndex\":\"front\",\"controllerOptions\":{\"type\":\"point\",\"name\":\"CONTROL17\",\"offset\":0,\"mirror\":true}},{\"fixed\":\"PLATE1\",\"moved\":\"LMX/piston\",\"fixedIndex\":\"3-0-0-0\",\"movedIndex\":\"front\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL2\",\"mirror\":false,\"offset\":0}},{\"fixed\":\"PLATE5\",\"moved\":\"LMX/case\",\"fixedIndex\":\"3-0-0-0\",\"movedIndex\":\"back\",\"controllerOptions\":{\"type\":\"hinge\",\"name\":\"CONTROL5\",\"mirror\":false,\"offset\":0}}],\"connectorOptions\":[[\"LM1/case\",\"center\",{\"isEnabled\":true,\"position\":8}],[\"LM2/case\",\"center\",{\"isEnabled\":true,\"position\":8}],[\"LM3/case\",\"center\",{\"isEnabled\":true,\"position\":0}],[\"LM0/case\",\"center\",{\"isEnabled\":true,\"position\":1.5000000000000022}],[\"LMX/case\",\"center\",{\"isEnabled\":true,\"position\":1.5000000000000022}]],\"programs\":[],\"isCompiled\":false};\nASSEMBLE.setOptions(_.extend({\"name\":\"TestLinearMotor\"},arguments[0]||{}));\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376663093956},"776881554":{"id":776881554,"name":"Car2","settings":"{\"program\":\"/**\\n * Use the several sliders located in folders bellow iInteraction - Controllers\\n * to interact with this robots servos and motors.\\n */ \",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":true,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":125,\"scenario\":\"grass\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-155.31976981242863,62.672198740519654,81.25353327871335],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0,0,0],\"folder\":\"Tests\",\"dependencies\":[\"BasicPlatform\",\"Wheel\",\"BasicCircularTube\",\"ServoBlock\",\"BasicRectangularTube\",\"DistanceSensor\",\"BasicCube\"],\"pause\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"softHandling\":false},\"owner\":\"public\",\"pointer\":3,\"objectType\":\"Assemble\"}","code":"var ASSEMBLE = new Assemble();\nASSEMBLE.setOptions(arguments[0]);\nASSEMBLE.content = {\"declarations\":{\"BASE\":{\"object\":\"BasicPlatform\",\"options\":{\"depth\":15,\"height\":5,\"width\":25,\"mass\":1,\"friction\":0.9,\"restitution\":0,\"color\":5202251,\"opacity\":1,\"units\":\"cm\",\"connectorMargin\":5,\"connectorRadius\":0.5,\"name\":\"BASE\"}},\"WHEEL_1\":{\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":8,\"outerDiameter\":15,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":6046822,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":0.5,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL_1\"}},\"WHEEL_2\":{\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":8,\"outerDiameter\":15,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":6046822,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":0.5,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL_2\"}},\"WHEEL_3\":{\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":8,\"outerDiameter\":15,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":4482662,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":0.5,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL_3\"}},\"WHEEL_4\":{\"object\":\"Wheel\",\"options\":{\"length\":2,\"innerDiameter\":8,\"outerDiameter\":15,\"mass\":0.02,\"friction\":0.99,\"restitution\":0.5,\"color\":4482662,\"opacity\":1,\"units\":\"cm\",\"radiusSegments\":16,\"margin\":0.5,\"heightSegments\":1,\"cut\":0,\"name\":\"WHEEL_4\"}},\"ServoBlock\":{\"object\":\"ServoBlock\",\"options\":{\"blockWidth\":3,\"caseDepth\":2,\"caseWidth\":5,\"caseHeight\":4,\"shaftOffset\":1,\"color\":8530988,\"margin\":1.1,\"mass\":0.1,\"pin\":-1,\"name\":\"ServoBlock\"}},\"BEAM\":{\"object\":\"BasicPlatform\",\"options\":{\"depth\":2,\"height\":1,\"width\":30,\"mass\":0.05,\"friction\":0.9,\"restitution\":0,\"color\":11966997,\"opacity\":0.7558250877752952,\"units\":\"cm\",\"connectorMargin\":2,\"connectorRadius\":0.5,\"name\":\"BEAM\"}},\"ELBOW\":{\"object\":\"ServoBlock\",\"options\":{\"blockWidth\":1,\"caseDepth\":0.5,\"caseWidth\":2,\"caseHeight\":2,\"shaftOffset\":0.2,\"color\":14751313,\"margin\":0.1,\"mass\":0.02,\"pin\":-1,\"name\":\"ELBOW\"}},\"ARM\":{\"object\":\"BasicPlatform\",\"options\":{\"depth\":15,\"height\":1,\"width\":2,\"mass\":0.01,\"friction\":0.9,\"restitution\":0,\"color\":2589120,\"opacity\":0.5413341844877114,\"units\":\"cm\",\"connectorMargin\":2,\"connectorRadius\":0.5,\"name\":\"ARM\"}},\"DSENSOR\":{\"object\":\"DistanceSensor\",\"options\":{\"size\":2,\"distance\":50,\"showRay\":true,\"boxColor\":1908048,\"rayColor\":12595771,\"blink\":true,\"blinkFrequency\":0.5,\"name\":\"DSENSOR\"}}},\"physics\":{\"BASE\":{\"position\":[-13.790725708007812,-4.756631374359131,-98.18391418457031],\"quaternion\":[-0.6842772960662842,0.004864268470555544,0.7291676998138428,-0.00743838818743825]},\"WHEEL_1\":{\"position\":[-4.175443172454834,-4.538414001464844,-88.7780990600586],\"quaternion\":[-0.24194049835205078,0.28310972452163696,0.6650083661079407,0.6473619937896729]},\"WHEEL_2\":{\"position\":[-22.143484115600586,-4.56380033493042,-87.64275360107422],\"quaternion\":[-0.39256760478019714,-0.35538816452026367,-0.5867891311645508,0.6125916242599487]},\"WHEEL_3\":{\"position\":[-23.40338897705078,-4.955702304840088,-107.59113311767578],\"quaternion\":[0.3716101348400116,0.41082265973091125,-0.5996333360671997,0.5775555968284607]},\"WHEEL_4\":{\"position\":[-5.441361904144287,-4.867864608764648,-108.72686767578125],\"quaternion\":[-0.25856509804725647,0.29949846863746643,0.6587969064712524,0.6398682594299316]},\"ServoBlock\":{\"position\":[-14.33712100982666,0.6724100708961487,-106.75670623779297],\"quaternion\":[-0.007393900770694017,0.729221761226654,-0.004860891494899988,0.6842202544212341]},\"BEAM\":{\"position\":[-13.37432861328125,2.8864660263061523,-122.37335205078125],\"quaternion\":[-0.47707730531692505,0.511310875415802,0.5243526101112366,0.4858115017414093]},\"ELBOW\":{\"position\":[-16.009754180908203,2.7806320190429688,-135.6439666748047],\"quaternion\":[-0.07129565626382828,0.26433730125427246,0.6225171685218811,0.7331542372703552]},\"ARM\":{\"position\":[-19.94651985168457,1.37587308883667,-141.13560485839844],\"quaternion\":[0.7293993830680847,0.6317949891090393,-0.25634658336639404,0.05566037446260452]},\"DSENSOR\":{\"position\":[-23.19913673400879,-0.7849087715148926,-145.93280029296875],\"quaternion\":[-0.054545655846595764,0.2574215233325958,0.6357422471046448,0.7256657481193542]}},\"connections\":[{\"fixed\":\"BASE\",\"moved\":\"WHEEL_2\",\"fixedIndex\":36,\"movedIndex\":0,\"controllerOptions\":{\"offset\":0,\"reverse\":false,\"angle\":0,\"type\":\"motor\",\"name\":\"motor1\",\"rpm\":1,\"torque\":5,\"isEnabled\":false,\"low\":-1000,\"high\":1000,\"invert\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL_1\",\"fixedIndex\":41,\"movedIndex\":0,\"controllerOptions\":{\"offset\":0,\"reverse\":false,\"angle\":0,\"type\":\"motor\",\"name\":\"motor0\",\"rpm\":1,\"torque\":5,\"isEnabled\":false,\"low\":-1000,\"high\":1000,\"invert\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL_4\",\"fixedIndex\":45,\"movedIndex\":0,\"controllerOptions\":{\"offset\":0,\"reverse\":false,\"angle\":0,\"type\":\"motor\",\"name\":\"motor3\",\"rpm\":1,\"torque\":5,\"isEnabled\":false,\"low\":-1000,\"high\":1000,\"invert\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"WHEEL_3\",\"fixedIndex\":40,\"movedIndex\":0,\"controllerOptions\":{\"offset\":0,\"reverse\":false,\"angle\":0,\"type\":\"motor\",\"name\":\"motor2\",\"rpm\":1,\"torque\":5,\"isEnabled\":false,\"low\":-1000,\"high\":1000,\"invert\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"ServoBlock\",\"moved\":\"BEAM\",\"fixedIndex\":2,\"movedIndex\":15,\"controllerOptions\":{\"offset\":0,\"reverse\":false,\"angle\":0,\"type\":\"servo\",\"name\":\"servo1\",\"rpm\":200,\"torque\":5,\"isEnabled\":true,\"low\":-90,\"high\":90,\"invert\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BEAM\",\"moved\":\"ELBOW\",\"fixedIndex\":14,\"movedIndex\":3,\"controllerOptions\":{\"offset\":0,\"reverse\":false,\"angle\":0,\"type\":\"fix\",\"name\":\"fix0\",\"force\":20,\"invert\":false,\"isEnabled\":true,\"mirror\":false}},{\"fixed\":\"ELBOW\",\"moved\":\"ARM\",\"fixedIndex\":0,\"movedIndex\":0,\"controllerOptions\":{\"type\":\"servo\",\"name\":\"SOME_CONTROLLER\",\"velocity\":2,\"torque\":1000,\"isEnabled\":true,\"angle/pi\":0.11,\"low\":-1,\"high\":1,\"step\":0.01,\"invert\":false,\"offset\":0,\"rpm\":200,\"angle\":0,\"gui\":true,\"mirror\":false}},{\"fixed\":\"BASE\",\"moved\":\"ServoBlock\",\"fixedIndex\":28,\"movedIndex\":3,\"controllerOptions\":{\"offset\":0,\"reverse\":false,\"angle\":0,\"type\":\"servo\",\"name\":\"servo0\",\"rpm\":200,\"torque\":5,\"isEnabled\":true,\"low\":-90,\"high\":90,\"invert\":false,\"gui\":true,\"mirror\":false}},{\"fixed\":\"ARM\",\"moved\":\"DSENSOR\",\"fixedIndex\":13,\"movedIndex\":1,\"controllerOptions\":{\"type\":\"servo\",\"name\":\"SENSOR_SERVO_3\",\"velocity\":2,\"torque\":100,\"isEnabled\":true,\"angle/pi\":0.8,\"low\":-2,\"high\":2,\"step\":0.01,\"invert\":false,\"offset\":0,\"rpm\":200,\"angle\":0,\"gui\":true,\"mirror\":false}}],\"connectorOptions\":[]};\nreturn ASSEMBLE;","program":null,"info":null,"permissions":null,"username":"public","last_change":1375526955571},"777872144":{"id":777872144,"name":"BasicPiston","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[21.01498239192245,14.61334551638751,-17.14355031286847],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0.5974086276040214,0.4338594084061661,-0.6398351406041584],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicRectangularTube\"],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"var options = arguments[0] || {};\n_.defaults (options,{\n  width: 1,\n  length: 10,\n  margin: 1,\n  mass: 0.1,\n  color: 0x565677,\n  connectorRadius: 0.5,\n  opacity: 1.0,\n  moreConnectors: 1\n});\nvar part = OBJECTS.BasicRectangularTube({\n  length: options.length,\n  outerWidth: options.width,\n  innerWidth: 0,\n  outerHeight: options.width,\n  innerHeight: 0,\n  mass: options.mass,\n  color: options.color,\n  opacity: options.opacity\n});\n\nvar conOptions = {\n  type: 'slider',\n  base: [0,0,0],\n  up: [1,0,0],\n  front: [0,1,0],\n  radius: options.connectorRadius\n};\n\nvar con = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.type ='point';\n\nif (options.moreConnectors>0){\n\tconOptions.base[0] = options.length/2 + options.margin;\n\tcon = new Connector(_.clone(conOptions));\n\tpart.add(con);\n}\n\nif (options.moreConnectors>1){\n\tconOptions.base[0] = -options.length/2 - options.margin;\n\tcon = new Connector(_.clone(conOptions));\n\tpart.add(con);\n}\n\npart.mesh.position.y += options.width/2;\npart.setSettings(options);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657079119},"777873476":{"id":777873476,"name":"BasicCase","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-11.653358409761081,13.454129565104045,18.96781502507732],\"cameraUp\":[-0.04712114919634631,0.9988868159407595,0.0021739912941154474],\"cameraTarget\":[0,0,0],\"cameraRotation\":[-0.16012255594477603,0.33607735132769184,0.7357146292865023],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicRectangularTube\"],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"var options = arguments[0] || {};\n_.defaults (options,{\n  width: 2,\n  length: 10,\n  thickness: 0.5,\n  margin: 0.5,\n  mass: 0.1,\n  color: 0x555555,\n  connectorRadius: 0.5,\n  opacity: 1.0,\n  moreConnectors: 1\n});\nvar part = OBJECTS.BasicRectangularTube({\n  length: options.length,\n  outerWidth: options.width,\n  innerWidth: options.width-options.thickness*2,\n  outerHeight: options.width,\n  innerHeight: options.width-options.thickness*2,\n  mass: options.mass,\n  color: options.color,\n  opacity: options.opacity\n});\n\nvar conOptions = {\n  type: 'slider',\n  base: [0,options.width/2-options.thickness/2,0],\n  up: [1,0,0],\n  front: [0,1,0],\n  radius: options.connectorRadius\n};\nvar con = new Connector(_.clone(conOptions));\npart.add(con);\n\nconOptions.type ='point';\n\nif (options.moreConnectors>0){\n\tconOptions.base[0] = -options.length/2 - options.margin;\n\tcon = new Connector(_.clone(conOptions));\n\tpart.add(con);\n}\n\nif (options.moreConnectors>1){\n\tconOptions.base[0] = options.length/2 + options.margin;\n\tcon = new Connector(_.clone(conOptions));\n\tpart.add(con);\n}\n\npart.mesh.position.y += options.width/2;\npart.setSettings(options);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657033793},"777874147":{"id":777874147,"name":"BasicLinear","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":59,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-3.7794524497532636,15.740307447039335,-22.758133645720104],\"cameraTarget\":[0,0,0],\"cameraRotation\":[-0.5054291236538406,0.1859489618009393,-0.8031787887710575],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicCase\",\"BasicRectangularTube\",\"BasicPiston\"],\"pause\":false,\"connectorRadius\":0.3796760218496892,\"scale\":\"centimeter\",\"softHandling\":false,\"link\":\"https://assemblino.com/show/public777874147.html\",\"embed\":\"<a href='https://assemblino.com/show/public777874147.html'><img src='https://assemblino.com/show/public777874147.png'/></a>\"},\"owner\":\"public\",\"pointer\":3,\"objectType\":\"System\"}","code":"/**\n * This is a system representing a linear motor.\n * It consists of a case and a piston with a motorized linear constraint.\n * travel: the travel distance characteristic of linear motors\n * margin: specifies the margin between the edge connectors and their parent parts.\n * gap: the gap between the case and piston\n * innerWidth: the pistons width - 2 x gap\n */ \n\nvar options = arguments[0] || {};\n_.defaults (options,{\n  length: 10,\n  travel: 8,\n  force: 1000,\n  width: 1.5,\n  innerWidth: 1,\n  margin: 0.25,\n  color: 0x777777,\n  mass: 0.1,\n  gap: 0.1,\n  opacity: 1,\n});\n\n//some validations\noptions.gap = Math.max(options.gap, 0);\noptions.travel = Math.min(options.travel, options.length);\noptions.innerWidth = Math.min(options.innerWidth, options.width-options.gap*2);\n\nvar SYSTEM = new System();\n\nSYSTEM.insert('linearCase','BasicCase',{\n  width: options.width,\n  length: options.length,\n  thickness: (options.width-options.innerWidth)/2,\n  margin: options.margin,\n  mass: options.mass/2,\n  color:options.color,\n  opacity: options.opacity,\n  connectorRadius: options.connectorRadius,\n  mask: 2\n});\n\nSYSTEM.insert('linearPiston','BasicPiston',{\n  width: options.innerWidth-options.gap*2,\n  length: options.length,\n  margin: options.margin,\n  mass: options.mass/2,\n  color:options.color,\n  opacity: options.opacity,\n  connectorRadius: options.connectorRadius,\n  mask: 1\n});\n\nSYSTEM.setPhysics('linearPiston', {\n  position: [0,options.width/2,0]\n});\n\nSYSTEM.join(\n  //connection type\n  {\n    fixed: 'linearCase',\n    moved: 'linearPiston',\n    fixedIndex: 0,\n    movedIndex:0\n  },\n  //controller options\n  {\n    name: (options.name || \"\") + \"_LINEAR\",\n    type: 'linear',\n    isEnabled: true,\n    velocity: 10,\n    force: options.force,\n    position: 1,\n    low: 0,\n    high: options.travel\n  }\n);\n\nSYSTEM.setSettings(options);\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376661831547},"777903679":{"id":777903679,"name":"BasicClothPart2","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":60,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[2.9850768638149443,6.800992308868679,-1.485701545054646],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\nvar settings = _.defaults(arguments[0] || {}, {\n  radius:0.5,\n  color: 0x337777,\n  margin: 0.1,\n  mass: 0.1,\n  opacity: 1,\n  frition: 0.9,\n  restitution: 0.1,\n  segments: 8\n});\n\nvar geo = new THREE.CubeGeometry(settings.radius * 2, settings.radius * 2, settings.radius * 2);\nvar material = Physijs.createMaterial(\n  new THREE.MeshLambertMaterial({ \n    color: settings.color,\n    transparent: settings.opacity < 1,\n    opacity: settings.opacity\n  }),\n  settings.friction,\n  settings.restitution\n);\n\nvar sphere = new Physijs.BoxMesh(geo, material, settings.mass);\n\nvar part = new Part();\npart.add(sphere);\n\nvar bases = [\n  [-settings.radius-settings.margin, 0, 0], \n  [settings.radius+settings.margin, 0, 0],\n  [0, 0, -settings.radius-settings.margin], \n  [0, 0, settings.radius+settings.margin]\n];\nbases.map(function(b){\n  var conn1 = new Connector({\n    base: b,\n    radius: settings.radius/2,\n    up: [0,1,0],\n    front: [1,0,0],\n    prefer: 'point',\n    axisFactor: 1,\n    color: settings.color\n  });\n  part.add(conn1);  \n});\n\npart.mesh.position.add(Vec3(0,settings.radius,0));\n\npart.setSettings(settings);\n\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657060284},"777903924":{"id":777903924,"name":"BasicWirePart2","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":64,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[1.6638928359635228,7.5785040687121645,-4.503095548788212],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\nvar settings = _.defaults(arguments[0] || {}, {\n  radius:0.5,\n  color: 0x337777,\n  margin: 0.1,\n  mass: 0.1,\n  opacity: 1,\n  frition: 0.9,\n  restitution: 0.1,\n  segments: 8\n});\n\nvar geo = new THREE.CubeGeometry(settings.radius * 2, settings.radius * 2, settings.radius * 2);\nvar material = Physijs.createMaterial(\n  new THREE.MeshLambertMaterial({ \n    color: settings.color,\n    transparent: settings.opacity < 1,\n    opacity: settings.opacity\n  }),\n  settings.friction,\n  settings.restitution\n);\n\nvar sphere = new Physijs.BoxMesh(geo, material, settings.mass);\n\nvar part = new Part();\npart.add(sphere);\n\nvar bases = [[-settings.radius-settings.margin, 0, 0], [settings.radius+settings.margin, 0, 0]];\nbases.map(function(b){\n  var conn1 = new Connector({\n    base: b,\n    radius: settings.radius/2,\n    up: [0,1,0],\n    front: [1,0,0],\n    prefer: 'point',\n    axisFactor: 1,\n    color: settings.color\n  });\n  part.add(conn1);  \n});\n\npart.mesh.position.add(Vec3(0,settings.radius,0));\n\npart.setSettings(settings);\n\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657110931},"778185717":{"id":778185717,"name":"BasicCloth","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-28.678571720680043,22.191305829393766,-14.370419831370791],\"cameraTarget\":[0,0,0],\"cameraRotation\":[-0.6208511715869596,0.5930855931806488,-0.6425333907319881],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicClothPart2\"],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"System\"}","code":"var SYSTEM = new System();\nvar options = _.defaults(arguments[0] || {}, {\n  radius: 1,\n  color: 0x998888,\n  length: 5,\n  width: 3,\n  margin: 0.1,\n  mass: 1,\n  segments: 2\n});\n\nvar length = Math.round(options.length/options.radius);\nvar width = Math.round(options.width/options.radius);\n\nvar names = {};\nvar segmentsOptions = _.pick(options, ['margin', 'color', 'radius', 'segments']);\nsegmentsOptions.mass = options.mass/(length * width);\nfor (var i = 0; i < length; i++) {\nfor (var j = 0; j < width; j++) {\n  var name = 'seg' + nextInt();\n  names[i + ',' + j] = name;\n  SYSTEM.insert(name,'BasicClothPart2', segmentsOptions);\n  SYSTEM.setPhysics(name,{position:[i * 2 * (options.radius + options.margin) ,options.radius, j * 2 * (options.radius + options.margin)]});\n}\n}\n//join along x\nfor (var i = 1; i < length; i++) {\nfor (var j = 0; j < width; j++) {\n  SYSTEM.join({\n    fixed: names[(i-1) + ',' + j],\n    fixedIndex: 1,\n    moved: names[i + ',' + j],\n    movedIndex: 0\n  }, {type: 'point'});\n}\n}\n//join along z\nfor (var i = 0; i < length; i++) {\nfor (var j = 1; j < width; j++) {\n  SYSTEM.join({\n    fixed: names[i + ',' + (j-1)],\n    fixedIndex: 3,\n    moved: names[i + ',' + j],\n    movedIndex: 2\n  }, {type: 'point'});\n}\n}\nSYSTEM.setSettings(options);\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657147273},"778185910":{"id":778185910,"name":"BasicClothPart","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":52,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[6.285452934915624,13.426667863484662,17.996004303872056],\"cameraTarget\":[0,0,0],\"cameraUp\":[0.03733416256495931,0.9983149310096974,0.04442362917030241],\"cameraRotation\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"\nvar settings = _.defaults(arguments[0] || {}, {\n  radius:2,\n  color: 0x337777,\n  margin: 0.25,\n  connectorRadius: 0.5,\n  mass: 0.1,\n  opacity: 1,\n  frition: 0.9,\n  restitution: 0.1,\n  segments: 8\n});\n\nvar geo = new THREE.SphereGeometry(settings.radius, settings.segments, settings.segments);\nvar material = Physijs.createMaterial(\n  new THREE.MeshLambertMaterial({ \n    color: settings.color,\n    transparent: settings.opacity < 1,\n    opacity: settings.opacity\n  }),\n  settings.friction,\n  settings.restitution\n);\n\nvar sphere = new Physijs.SphereMesh(geo, material, settings.mass);\n\nvar part = new Part();\npart.add(sphere);\n\nvar bases = [\n  [-settings.radius-settings.margin, 0, 0], \n  [settings.radius+settings.margin, 0, 0],\n  [0, 0, -settings.radius-settings.margin], \n  [0, 0, settings.radius+settings.margin]\n];\nbases.map(function(b){\n  var conn1 = new Connector({\n    base: b,\n    radius: settings.connectorRadius,\n    up: [0,1,0],\n    front: [1,0,0],\n    prefer: 'point',\n    axisFactor: 1,\n    color: settings.color\n  });\n  part.add(conn1);  \n});\n\npart.mesh.position.add(Vec3(0,settings.radius,0));\n\npart.setSettings(settings);\n\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657047409},"778190285":{"id":778190285,"name":"BasicWire","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[57.262206448266035,41.220053053132624,70.20973362076596],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0.8008805063784199,0.1842461445878162,0.521695765954141],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicWirePart\"],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"System\"}","code":"var SYSTEM = new System();\nvar options = _.defaults(arguments && arguments[0] || {}, {\n  radius: 1,\n  color: 0x999988,\n  length: 5,\n  margin: 0.01,\n  mass: 1\n});\n\nvar length = Math.round(options.length/options.radius);\nvar names = [];\nvar segmentsOptions = _.pick(options, ['margin', 'color', 'radius']);\nsegmentsOptions.mass = options.mass/length;\nfor (var i = 0; i < length; i++) {\n  var name = 'seg' + nextInt();\n  names.push(name);\n  SYSTEM.insert(name,'BasicWirePart', segmentsOptions);\n  SYSTEM.setPhysics(name,{position:[i * 2 * (options.radius + options.margin) ,options.radius,0]});\n}\nfor (var i = 1; i < length; i++) {\n  SYSTEM.join({\n    fixed: names[i-1],\n    fixedIndex: 1,\n    moved: names[i],\n    movedIndex: 0\n  }, {type: 'point'});\n}\nSYSTEM.setSettings(options);\nreturn SYSTEM;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657162953},"778330622":{"id":778330622,"name":"BasicWirePart","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":35,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[5.3109713070300355,5.580485621808397,-4.5969442906421785],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0,0,0],\"folder\":\"Deprecated\",\"dependencies\":[],\"pause\":false,\"softHandling\":false,\"connectorRadius\":0.5,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"var settings = arguments && arguments[0] || {};\nvar defaults = {\n  radius:0.5,\n  color: 0x337777,\n  margin: 0.01,\n  mass: 0.1,\n  opacity: 1,\n  frition: 0.9,\n  restitution: 0.1,\n  segments: 8\n};\n\n_.defaults(settings, defaults);\n\nvar geo = new THREE.SphereGeometry(settings.radius, settings.segments, settings.segments);\nvar material = Physijs.createMaterial(\n  new THREE.MeshLambertMaterial({ \n    color: settings.color,\n    transparent: settings.opacity < 1,\n    opacity: settings.opacity\n  }),\n  settings.friction,\n  settings.restitution\n);\n\nvar sphere = new Physijs.SphereMesh(geo, material, settings.mass);\n\nvar part = new Part();\npart.add(sphere);\n\nvar bases = [[-settings.radius-settings.margin, 0, 0], [settings.radius+settings.margin, 0, 0]];\nbases.map(function(b){\n  var conn1 = new Connector({\n    base: b,\n    radius: settings.radius/2,\n    up: [0,1,0],\n    front: [1,0,0],\n    prefer: 'point',\n    axisFactor: 1,\n    color: settings.color\n  });\n  part.add(conn1);  \n});\n\npart.mesh.position.add(Vec3(0,settings.radius,0));\n\npart.setSettings(settings);\n\nreturn part;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657093985},"780596070":{"id":780596070,"name":"Wheel","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":53,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":false,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[24.283267359611198,28.86247427493489,9.861927981284946],\"cameraTarget\":[0,0,0],\"lastEdited\":776881554,\"pause\":false,\"cameraRotation\":[0.2617276960559592,0.6363448698212927,-0.6219324715325184],\"folder\":\"Deprecated\",\"dependencies\":[\"BasicCircularTube\"],\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"\",\"embed\":\"\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/**\n * Simple wheel based on subtracting an inner cylinder from another. \n * FIXME: Visually looks like something can pass trought the hole, but in reallity not.\n */\n\nvar settings = _.defaults(arguments[0] || {}, {\n  length: 2,\n  innerDiameter: 1.5,\n  outerDiameter: 7,\n  mass: 0.02,\n  friction: 0.99,\n  restitution: 0.5,\n  color: 0x222222,\n  opacity: 1,\n  radiusSegments: 24,\n  margin: 0.25,\n});\n\nvar tube = OBJECTS.BasicCircularTube(settings);\n\nvar shaftConnector = new Connector({\n  base: [0,\n         settings.length/2 + settings.margin,\n         0],\n  radius: 0.5,\n  up: [0,1,0],\n  front: [1,0,0],\n  prefer: 'motor'\n});\n\nvar shaftConnector2 = new Connector({\n  base: [0,\n         -settings.length/2 - settings.margin,\n         0],\n  radius: 0.5,\n  up: [0,1,0],\n  front: [1,0,0],\n  prefer: 'motor'\n});\n\ntube.add(shaftConnector);\ntube.add(shaftConnector2);\n\ntube.mesh.position.add(Vec3(0,settings.length/2,0));\n\ntube.setOptions(settings);\n\nreturn tube;\n\n\n\n\n\n\n\n\n\n\n\n\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376657197743},"781699905":{"id":781699905,"name":"BasicPlatform","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":84,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-19.313325352709334,21.270931051545393,27.858651796542745],\"cameraTarget\":[0,0,0],\"cameraRotation\":[-0.4539094096452133,0.09219504632466392,0.7526052328418738],\"folder\":\"Basic Shapes\",\"dependencies\":[],\"pause\":false,\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public781699905.html\",\"embed\":\"<a href='http://assemblino.com/show/public781699905.html'><img src='http://assemblino.com/show/public781699905.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Part\"}","code":"/**\n * This is a basic building block, flexible for many purposes.\n * It can be used to construct components like beams, platforms. \n * Connectors are evenly placed along all axis, in odd quantities.\n * \n * connectorMargin: the space between connectors. If one side is smaller than twice this distance\n *  it will not have connectors.\n */\n\nvar mesh, part, geoTop, geoSide;\nvar defaults = {\n  depth: 15,\n  height: 1,\n  width: 15,\n  mass: 0.2,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0x333333,\n  opacity: 1.0,\n  connectorMargin: 5\n}\n  \nvar options = _.defaults(arguments[0] || {},  defaults);\n\nvar material = new THREE.MeshPhongMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity,\n  specular: 0x444444\n});\nmaterial = Physijs.createMaterial(material, options.friction, options.restitution);\n\npart = new Part();\nvar geo = new THREE.CubeGeometry(\n    options.width,\n  \toptions.height,\n    options.depth \n);\nmesh = new Physijs.BoxMesh(geo, material, options.mass);\nmesh.position.y += options.height; \npart.add(mesh);\n\nvar margin = options.connectorMargin;\nvar axis = {x: 'width', y: 'height', z: 'depth'};\n['x','y','z'].map(function(dim){\n  var positions = [];\n  var quant = Math.floor(options[axis[dim]]/margin);\n  if (quant % 2 == 0) quant--;\n  var rest = options[axis[dim]] - quant*margin;\n  if (quant>0) for (var i = 0; i < quant; i++){\n    positions.push((i - quant/2)*margin + margin/2);\n  }\n  axis[dim + \"_positions\"] = positions;\n});\nvar combinations = [\n  {\n    //top surface\n    x: axis[\"x_positions\"],\n    y: [options.height/2],\n    z: axis[\"z_positions\"],\n    up: [0,-1,0]\n  },\n  {\n    //bottom surface\n    x: axis[\"x_positions\"],\n    y: [-options.height/2],\n    z: axis[\"z_positions\"],\n    up: [0,1,0]\n  },\n  {\n    //front surface\n    x: [options.width/2],\n    y: axis[\"y_positions\"],\n    z: axis[\"z_positions\"],\n    up: [-1,0,0],\n    front: [0,0,1]\n  },\n  {\n    //back surface\n    x: [-options.width/2],\n    y: axis[\"y_positions\"],\n    z: axis[\"z_positions\"],\n    up: [1,0,0],\n    front: [0,0,1]\n  },\n  {\n    //left surface\n    x: axis[\"x_positions\"],\n    y: axis[\"y_positions\"],\n    z: [options.depth/2],\n    up: [0,0,-1]\n  },\n  {\n    //right surface\n    x: axis[\"x_positions\"],\n    y: axis[\"y_positions\"],\n    z: [-options.depth/2],\n    up: [0,0,1]\n  }\n];\n\ncombinations.map(function(comb){\n  for (var i = 0; i < comb.x.length; i++){\n    for (var j = 0; j < comb.y.length; j++){\n      for (var k = 0; k < comb.z.length; k++){\n        var connector = new Connector({\n  \t\t\tbase: [comb.x[i], comb.y[j], comb.z[k]],\n  \t\t\tup: comb.up,\n  \t\t\tfront: comb.front || [1,0,0],\n  \t\t\tprefer: 'motor'\n\t\t});\n\t\tpart.add(connector);\n      }\n    }\n  }\n});\n\npart.setOptions(options);\n\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376410013009},"781712273":{"id":781712273,"name":"ServoBlock","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":64,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-6.939632732029209,19.91419810620497,-21.329356488851275],\"cameraTarget\":[0,0,0],\"cameraRotation\":[-0.023214770216877234,0.4123162486723701,-0.8230646371091914],\"folder\":\"Actuators/Servos\",\"dependencies\":[\"BasicRectangularTube\"],\"pause\":false,\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public781712273.html\",\"embed\":\"<a href='http://assemblino.com/show/public781712273.html'><img src='http://assemblino.com/show/public781712273.png'/></a>\"},\"owner\":\"public\",\"pointer\":1,\"objectType\":\"Part\"}","code":"/**\n* This is a first model for ServoCity's Servo Block.\n* It does not respect the real dimensions and the structure for connections.\n*/\nvar settings = _.defaults(arguments[0] || {}, {\n  blockWidth:3,\n  caseDepth: 2,\n  caseWidth: 5,\n  caseHeight: 4,\n  shaftOffset: 1,\n  color: 0x777777,\n  margin: 0.0,\n  mass: 0.1,\n  pin: -1\n});\n\nvar servoCase = OBJECTS.BasicRectangularTube ({\n  length: settings.caseWidth,\n  outerWidth: settings.caseDepth,\n  outerHeight: settings.caseHeight,\n  color: 0x111111,\n  mass: settings.mass\n});\n\nvar block = OBJECTS.BasicRectangularTube ({\n  length: settings.blockWidth,\n  outerWidth: settings.blockWidth,\n  outerHeight: settings.blockWidth,\n  color: settings.color,\n  mass: settings.mass\n});\n \n\nblock.mesh.position.add(Vec3([settings.caseWidth/2-settings.shaftOffset,settings.caseHeight/2,0]));\nservoCase.add(block);\n\nvar shaftConnector = new Connector({\n  name: 'shaft',\n  base: [settings.caseWidth/2-settings.shaftOffset,\n         settings.caseHeight/2 + settings.blockWidth/2 + settings.margin,\n         0],\n  radius: 0.5,\n  up: [0,1,0],\n  front: [1,0,0],\n  allow: ['servo'],\n  prefer: 'servo'\n});\n\nvar glueConnector = new Connector({\n  base: [settings.caseWidth/2-settings.shaftOffset,\n         -settings.caseHeight/2 - settings.margin,\n         0],\n  radius: 0.5,\n  up: [0,-1,0],\n  front: [1,0,0],\n  allow: ['fix','hinge'],\n  prefer: 'fix'\n});\n\nvar rightConnector = new Connector({\n  name: 'right',\n  base: [settings.caseWidth/2-settings.shaftOffset,\n         settings.caseHeight/2,\n         -settings.blockWidth/2 - settings.margin],\n  radius: 0.5,\n  up: [0,0,1],\n  front: [1,0,0],\n  allow: ['fix','hinge'],\n  prefer: 'fix'\n});\n\nvar leftConnector = new Connector({\n  name: 'left',\n  base: [settings.caseWidth/2-settings.shaftOffset,\n         settings.caseHeight/2,\n         settings.blockWidth/2 + settings.margin],\n  radius: 0.5,\n  up: [0,0,-1],\n  front: [1,0,0],\n  allow: ['fix','hinge'],\n  prefer: 'fix'\n});\n\n\nservoCase.mesh.position.add(Vec3(0,settings.caseHeight/2,0));\n\nservoCase.add(shaftConnector);\nservoCase.add(rightConnector);\nservoCase.add(leftConnector);\nservoCase.add(glueConnector);\n\nservoCase.setOptions(settings);\n\nreturn servoCase;\n","program":null,"info":null,"permissions":null,"username":"public","last_change":1376409855283},"782571011":{"id":782571011,"name":"BasicCircularTube","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":66,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":false,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[-11.883744222346742,30.63398455143321,-64.72802268169839],\"cameraTarget\":[0,0,0],\"cameraUp\":[0.22179061230727973,0.8894253667076584,0.39966416070158545],\"cameraRotation\":[-0.1735450944855212,0.1236196318984105,-0.9317068066991981],\"folder\":\"Basic Shapes\",\"dependencies\":[],\"pause\":false,\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\",\"link\":\"http://assemblino.com/show/public782571011.html\",\"embed\":\"<a href='http://assemblino.com/show/public782571011.html'><img src='http://assemblino.com/show/public782571011.png'/></a>\"},\"owner\":\"public\",\"pointer\":2,\"objectType\":\"Part\"}","code":"/**\n * FIXME This basic tube dont let objects pass.\n */ \n  \nvar options = _.defaults(arguments[0] || {},  {\n  name: nextName('TUBE'),\n  length: 10,\n  innerDiameter: 8,\n  outerDiameter: 10,\n  mass: 1,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0x445566,\n  opacity: 1,\n  radiusSegments: 16, \n  heightSegments: 1, \n  cut: 0\n});\n\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\nmaterial = Physijs.createMaterial(material, options.friction, options.restitution);\n\nvar part = new Part();\n\nvar geoOut = new THREE.CylinderGeometry(\n  options.outerDiameter/2, \n  options.outerDiameter/2,\n  options.length,\n  options.radiusSegments,\n  options.heightSegments\n);\n\nif (options.innerDiameter){\n  var geoIn = new THREE.CylinderGeometry(\n    options.innerDiameter/2, \n    options.innerDiameter/2,\n    options.length,\n    options.radiusSegments,\n   options.heightSegments\n  );\n  geoOut = geoOut.subtract(geoIn);\n  if (options.cut){\n    //http://japhr.blogspot.de/2012/09/cant-make-physijs-holes.html\n    var size = options.outerDiameter-options.innerDiameter;\n    var cut =  new THREE.CubeGeometry(size * 2, options.length, options.cut);\n    var m = new THREE.Mesh(cut, new THREE.MeshBasicMaterial({color: 0x00ff00 }));\n    m.position.x += options.outerDiameter/2;\n    geoOut = geoOut.subtract(m);\n  }\n}\n\nvar mesh = new Physijs.ConvexMesh(geoOut, material, options.mass); \n//console.log(mesh);\n\npart.add(mesh);\nmesh.position.y += options.length/2;\npart.settings = options;\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1376409978871},"782649941":{"id":782649941,"name":"BasicRectangularTube","settings":"{\"program\":\"\",\"options\":{\"codeEditor\":false,\"autoLoad\":true,\"autoStart\":false,\"codeWrapperHeight\":58,\"codeWrapperWidth\":50,\"moveWithForce\":false,\"renderInterval\":200,\"scenario\":\"desk\",\"showAxis\":true,\"showConnectors\":true,\"simulationInterval\":60,\"simulationQuality\":5,\"cameraPosition\":[2.759066475809369,6.005809094748559,-10.29421919444576],\"cameraTarget\":[0,0,0],\"cameraRotation\":[0.6113333241380543,0.39315631161182774,-0.6035790626770117],\"folder\":\"Basic Shapes\",\"dependencies\":[],\"pause\":false,\"connectorRadius\":0.5,\"softHandling\":false,\"scale\":\"centimeter\"},\"owner\":\"public\",\"pointer\":5,\"objectType\":\"Part\"}","code":"var mesh, part, geoTop, geoSide;\n  \nvar options = _.defaults(arguments[0] || {},  {\n  name: nextName('TUBE'),\n  length: 1,\n  outerHeight: 1,\n  innerHeight: 0,\n  outerWidth: 1,\n  innerWidth: 0,\n  mass: 1,\n  friction: 0.9,\n  restitution: 0.0,\n  color: 0x445566,\n  opacity: 1,\n  units: 'cm',\n  segments: 1\n});\nvar segments = options.segments;\nvar material = new THREE.MeshLambertMaterial({ \n  color: options.color,\n  transparent: options.opacity < 1,\n  opacity: options.opacity\n});\nmaterial = Physijs.createMaterial(material, options.friction, options.restitution);\n\npart = new Part();\npart.setSettings(options);\n\nif (options.innerHeight == 0 || options.innerWidth==0){\n  var geo = new THREE.CubeGeometry(\n    options.length, \n  \toptions.outerHeight,\n    options.outerWidth,\n    segments,segments,segments\n  );\n  mesh = new Physijs.BoxMesh(geo, material, options.mass); \n  part.add(mesh);\n  return part;\n}\n//geometry for bottom and top\ngeoTop = new THREE.CubeGeometry(\n  options.length, \n  (options.outerHeight - options.innerHeight)/2,\n  options.outerWidth,\n  segments,segments,segments);\n//bottom\nmesh = new Physijs.BoxMesh(geoTop, material, options.mass);\nmesh.position.y -= geoTop.height/2 + options.innerHeight/2;\npart.add(mesh);\n//top\nmesh = new Physijs.BoxMesh(geoTop, material, options.mass);\nmesh.position.y += geoTop.height + options.innerHeight;\npart.add(mesh);\n//geometry for left and right\ngeoSide = new THREE.CubeGeometry(\n  options.length, \n  options.innerHeight,\n  (options.outerWidth - options.innerWidth)/2,\n  segments,segments,segments\n);\n//right\nmesh = new Physijs.BoxMesh(geoSide, material, options.mass);\nmesh.position.y += (geoSide.height + geoTop.height)/2;\nmesh.position.z += geoSide.depth/2 + options.innerWidth/2;\npart.add(mesh);\n//left\nmesh = new Physijs.BoxMesh(geoSide, material, options.mass);\nmesh.position.y += (geoSide.height + geoTop.height)/2;\nmesh.position.z -= geoSide.depth/2 + options.innerWidth/2;\npart.add(mesh);\nreturn part;","program":null,"info":null,"permissions":null,"username":"public","last_change":1375878370403}};